[{"title":"公司项目 Git 管理流程及规范","url":"http://yoursite.com/2021/08/04/company-project-git/","content":"<p>目前公司项目 Git 管理规范是基于 git-flow 扩展而来。</p>\n<p>git-flow 最先来源于 Vincent Driessen 一篇名为<a href=\"https://nvie.com/posts/a-successful-git-branching-model/\" target=\"_blank\" rel=\"noopener\">“一种成功的Git分支模型”</a>的博文，后来 git-flow 被誉为在 Git 之上构建的一项软件开发最佳实践。</p>\n<h2 id=\"工具\"><a href=\"#工具\" class=\"headerlink\" title=\"工具\"></a>工具</h2><p>通过安装工具可以帮助我们更方便按照 git-flow 工作流程进行项目管理。</p>\n<h3 id=\"Mac\"><a href=\"#Mac\" class=\"headerlink\" title=\"Mac\"></a>Mac</h3><blockquote>\n<p>brew install git-flow</p>\n</blockquote>\n<p><strong>其他终端安装方法，可以到 <a href=\"https://github.com/nvie/gitflow/wiki/Installation\" target=\"_blank\" rel=\"noopener\">这里</a> 查看。</strong></p>\n<h2 id=\"常用命令\"><a href=\"#常用命令\" class=\"headerlink\" title=\"常用命令\"></a>常用命令</h2><ul>\n<li><strong>初始化使用：</strong> <code>git flow init</code></li>\n<li><strong>创建 Feature 分支：</strong> <code>git flow feature start branch_name</code></li>\n<li><strong>创建 Release 分支：</strong> <code>git flow release start branch_name</code></li>\n<li><strong>结束 Release 分支：</strong> <code>git flow release finish branch_name</code></li>\n<li><strong>将结束 Release 分支时产生的 tag 推到远程：</strong> <code>git push --tags</code></li>\n</ul>\n<h2 id=\"公司项目-Git-管理流程\"><a href=\"#公司项目-Git-管理流程\" class=\"headerlink\" title=\"公司项目 Git 管理流程\"></a>公司项目 Git 管理流程</h2><p>下面的流程图，展示了目前项目基于 git-flow 并结合公司业务拓展定义的 git 管理流程规范。</p>\n<p><img src=\"/images/2021/07/company-project-git-01.png\" alt=\"image\"></p>\n<h2 id=\"分支命名规范\"><a href=\"#分支命名规范\" class=\"headerlink\" title=\"分支命名规范\"></a>分支命名规范</h2><h3 id=\"需求开发分支命名规范\"><a href=\"#需求开发分支命名规范\" class=\"headerlink\" title=\"需求开发分支命名规范\"></a>需求开发分支命名规范</h3><blockquote>\n<p>版本号_开发人名称首字母_需求简述</p>\n</blockquote>\n<p>例如：feature/6.15.0_hgj_优化AfterPay介绍页面</p>\n<p>若使用 git-flow 工具命令创建 </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git flow feature start 6.15.0_hgj_优化AfterPay介绍页面</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"发版分支命名规范\"><a href=\"#发版分支命名规范\" class=\"headerlink\" title=\"发版分支命名规范\"></a>发版分支命名规范</h3><blockquote>\n<p>发版的版本号</p>\n</blockquote>\n<p>例如：release/6.15.0</p>\n<p>若使用 git-flow 工具命令创建 </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git flow release start 6.15.0</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"效果展示\"><a href=\"#效果展示\" class=\"headerlink\" title=\"效果展示\"></a>效果展示</h3><p><img src=\"/images/2021/07/company-project-git-02.png\" alt=\"image\"></p>\n<h2 id=\"Git-Commit-规范\"><a href=\"#Git-Commit-规范\" class=\"headerlink\" title=\"Git Commit 规范\"></a>Git Commit 规范</h2><p>为了更加方便查找 git commit 的日志，因此有必要在 commit 的时候进行备注说明类型。</p>\n<p>参考阮老师的文章：<a href=\"https://www.ruanyifeng.com/blog/2016/01/commit_message_change_log.html\" target=\"_blank\" rel=\"noopener\">地址</a></p>\n<p>与团队成员约定在 commit 填写 message 的时候，在前面加多一个 type，具体的类型如下：</p>\n<table>\n<thead>\n<tr>\n<th>类型</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>feat</td>\n<td>新功能（feature）</td>\n</tr>\n<tr>\n<td>fix</td>\n<td>修补 bug</td>\n</tr>\n<tr>\n<td>docs</td>\n<td>文档（documentation）</td>\n</tr>\n<tr>\n<td>style</td>\n<td>格式（不影响代码运行的变动）</td>\n</tr>\n<tr>\n<td>refactor</td>\n<td>重构（即不是新增功能，也不是修改bug的代码变动）</td>\n</tr>\n<tr>\n<td>test</td>\n<td>增加测试</td>\n</tr>\n<tr>\n<td>chore</td>\n<td>构建过程或辅助工具的变动</td>\n</tr>\n</tbody></table>\n<blockquote>\n<p>例子：feat: 划线价逻辑调整 </p>\n</blockquote>\n<p><strong>注意冒号是使用英文的，且后面加多个空格。</strong></p>\n<h2 id=\"资料\"><a href=\"#资料\" class=\"headerlink\" title=\"资料\"></a>资料</h2><ul>\n<li><a href=\"http://danielkummer.github.io/git-flow-cheatsheet/index.zh_CN.html\" target=\"_blank\" rel=\"noopener\">git-flow 备忘清单</a></li>\n<li><a href=\"https://www.zybuluo.com/Roy270490837/note/835720\" target=\"_blank\" rel=\"noopener\">git-flow 流程规范</a></li>\n</ul>\n","categories":["Git"],"tags":["Git"]},{"title":"面试官问我：如何对 Android  App 进行 fps 分析","url":"http://yoursite.com/2021/01/06/android-fps/","content":"<h3 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h3><p>界面呈现是指从应用生成帧并将其显示在屏幕上的动作。要确保用户能够流畅地与您的应用互动，您的应用呈现每帧的时间不应超过 16ms，以达到每秒 60 帧的呈现速度。</p>\n<blockquote>\n<p>结论动画控制在每帧耗时 16ms 以下，因此需要进行 FPS 分析。</p>\n</blockquote>\n<h3 id=\"前提\"><a href=\"#前提\" class=\"headerlink\" title=\"前提\"></a>前提</h3><p>进行分析前，手机先开启 <code>GPU呈现模式分析</code>。</p>\n<blockquote>\n<p>打开手机“设置”-“更多设置”-“开发者选项”-“GPU 呈现模式分析”，选中“在adb shell dumpsys gfinfo”中</p>\n</blockquote>\n<p>设置路径基本都一样，都是在开发者选项里，部分手机是叫做 “HWUI 呈现模式分析”，下图是小米手机截图。</p>\n<p><img src=\"/images/2021/01/android_fps_01.png\" alt=\"image\"></p>\n<h3 id=\"打开测试的界面\"><a href=\"#打开测试的界面\" class=\"headerlink\" title=\"打开测试的界面\"></a>打开测试的界面</h3><p>先打开你要进行分析的界面，然后再终端输入以下命令。</p>\n<h3 id=\"命令\"><a href=\"#命令\" class=\"headerlink\" title=\"命令\"></a>命令</h3><p>利用 <a href=\"https://developer.android.com/studio/command-line/dumpsys?hl=zh-cn#ui\" target=\"_blank\" rel=\"noopener\">dumpsys</a> 获取当前指定 App 发生的动画帧相关的性能信息，并以 txt 文件保存下来。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">adb shell dumpsys gfxinfo package-name &gt; loading.txt</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"遇到问题\"><a href=\"#遇到问题\" class=\"headerlink\" title=\"遇到问题\"></a>遇到问题</h4><p>执行命令出现错误</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">adb E  1250 22834 usb_osx.cpp:327] Could not open interface: e00002c5</span><br><span class=\"line\">adb E  1250 22834 usb_osx.cpp:289] Could not find device interface</span><br><span class=\"line\">error: could not install *smartsocket* listener: Address already in use</span><br><span class=\"line\">ADB server didn&apos;t ACK</span><br><span class=\"line\">* failed to start daemon *</span><br><span class=\"line\">error: cannot connect to daemon</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>解决：打开 Mac 活动监视器在 内存 栏，找到 adb 进程，对它进行强制退出</p>\n</blockquote>\n<h3 id=\"导入-Excel\"><a href=\"#导入-Excel\" class=\"headerlink\" title=\"导入 Excel\"></a>导入 Excel</h3><h4 id=\"第一步导入文本\"><a href=\"#第一步导入文本\" class=\"headerlink\" title=\"第一步导入文本\"></a>第一步导入文本</h4><p><img src=\"/images/2021/01/android_fps_02.png\" alt=\"image\"></p>\n<h4 id=\"第二步完成导入\"><a href=\"#第二步完成导入\" class=\"headerlink\" title=\"第二步完成导入\"></a>第二步完成导入</h4><p>这一步直接点击 <strong>完成</strong> 即可，然后点击 <strong>确定</strong> 。</p>\n<p><img src=\"/images/2021/01/android_fps_03.png\" alt=\"image\"></p>\n<p><img src=\"/images/2021/01/android_fps_04.png\" alt=\"image\"></p>\n<h4 id=\"第三步复制耗帧数据\"><a href=\"#第三步复制耗帧数据\" class=\"headerlink\" title=\"第三步复制耗帧数据\"></a>第三步复制耗帧数据</h4><p>找到对应需要分析的界面类的数据，比如我这边的：</p>\n<p><img src=\"/images/2021/01/android_fps_05.png\" alt=\"image\"></p>\n<p>将这块数据复制到新建一份 <strong>工作表</strong>。</p>\n<p><img src=\"/images/2021/01/android_fps_06.png\" alt=\"image\"></p>\n<h3 id=\"折线图分析\"><a href=\"#折线图分析\" class=\"headerlink\" title=\"折线图分析\"></a>折线图分析</h3><p>在新建的工作表最后新增一栏命名为 <strong>每秒耗帧（毫秒）</strong></p>\n<p>进行自动求和操作，选中新增栏的标题下一格，然后点击 Excel 表中的 <strong>开始 》 自动求和</strong>，这时会出现计算公式，直接按下回车键即计算出当前行的值总和，接着往下拉会自动进行每行的求和操作。</p>\n<p>对  <strong>每秒耗帧（毫秒）</strong> 栏进行图表分析：</p>\n<p><img src=\"/images/2021/01/android_fps_07.png\" alt=\"image\"></p>\n<p>接着就会自动生成一份图表：</p>\n<p><img src=\"/images/2021/01/android_fps_08.png\" alt=\"image\"></p>\n<blockquote>\n<p>分析图表的趋势，如果每帧耗时在 <strong>16ms</strong> 以上，那么即需要优化。</p>\n</blockquote>\n<h3 id=\"相关链接\"><a href=\"#相关链接\" class=\"headerlink\" title=\"相关链接\"></a>相关链接</h3><ul>\n<li><a href=\"https://developer.android.com/topic/performance/vitals/render.html\" target=\"_blank\" rel=\"noopener\">渲染速度缓慢</a></li>\n<li><a href=\"https://developer.android.com/topic/performance/rendering/inspect-gpu-rendering#profile_rendering\" target=\"_blank\" rel=\"noopener\">分析 GPU 渲染速度</a></li>\n<li><a href=\"https://juejin.im/post/6844904161746616334\" target=\"_blank\" rel=\"noopener\">面试官问我：Android APP中如何测试FPS？看我如何分析京东，拼多多App的FPS</a></li>\n<li><a href=\"https://lottiefiles.com/\" target=\"_blank\" rel=\"noopener\">Lottie 动画预览</a></li>\n<li><a href=\"https://developer.android.com/studio/command-line/dumpsys?hl=zh-cn\" target=\"_blank\" rel=\"noopener\">dumpsys</a></li>\n<li><a href=\"https://developer.android.com/training/testing/performance?hl=zh-cn\" target=\"_blank\" rel=\"noopener\">测试界面性能</a></li>\n</ul>\n","categories":[],"tags":["Android"]},{"title":"Mac 如何让终端使用代理","url":"http://yoursite.com/2020/05/10/mac-terminal-proxy/","content":"<h3 id=\"前提\"><a href=\"#前提\" class=\"headerlink\" title=\"前提\"></a>前提</h3><p>iTerm2 终端使用的是 zsh 命令，翻墙代理工具使用 Surge2。</p>\n<h3 id=\"步骤\"><a href=\"#步骤\" class=\"headerlink\" title=\"步骤\"></a>步骤</h3><ol>\n<li>在 surge2 复制终端代理命令</li>\n</ol>\n<p><img src=\"/images/2020/05/mac-terminal-proxy-01.png\" alt=\"image\"></p>\n<p>得到：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export https_proxy=http://127.0.0.1:1080;export http_proxy=http://127.0.0.1:1080;export all_proxy=socks5://127.0.0.1:1081</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li><p>编辑 .zshrc 文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim ~/.zshrc</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在文件最后添加以下信息</p>\n</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># proxy list</span><br><span class=\"line\">alias proxy=&apos;export https_proxy=http://127.0.0.1:1080;export http_proxy=http://127.0.0.1:1080;export all_proxy=socks5://127.0.0.1:1081&apos;</span><br><span class=\"line\">alias unproxy=&apos;unset all_proxy&apos;</span><br></pre></td></tr></table></figure>\n\n<ol start=\"4\">\n<li>保存退出，应用文件修改内容</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">source ~/.zshrc</span><br></pre></td></tr></table></figure>\n\n<ol start=\"5\">\n<li>开启使用代理模式</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">proxy</span><br></pre></td></tr></table></figure>\n\n<ol start=\"6\">\n<li>确定终端是否走代理</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl cip.cc</span><br></pre></td></tr></table></figure>\n\n<ol start=\"6\">\n<li>关闭使用代理模式</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">unproxy</span><br></pre></td></tr></table></figure>\n\n","categories":["VPN"],"tags":["翻墙","VPN","工具","终端","代理"]},{"title":"Flutter 自动打包并将 aar 文件上传到 Maven","url":"http://yoursite.com/2020/04/26/flutter-maven/","content":"<h3 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h3><ol>\n<li>先执行 <code>flutter pub get</code> 获取项目最新依赖插件。</li>\n<li>对 flutter module 进行打包成 aar，因为是上传到 maven 的，只要 release 版本即可。</li>\n<li>对打包出来的 aar 文件，简单粗暴使用 <code>mvn deploy</code> 指令进行上传到 maven。</li>\n<li>上传完之后，提示如何引入到项目。</li>\n</ol>\n<h3 id=\"完整构建脚本\"><a href=\"#完整构建脚本\" class=\"headerlink\" title=\"完整构建脚本\"></a>完整构建脚本</h3><p>创建一个 <code>android_build.sh</code> 文件</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">!/usr/bin/env bash</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\">##############################################################</span></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 脚本是 shell 文件，只适用于 mac 系统</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 执行脚本时，版本号为必填参数</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 在项目路径下执行命令：./android_build.sh 版本号</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 若出现提示 `zsh: <span class=\"built_in\">command</span> not found: android_build.sh`</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 解决方法：</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 1. vim ~/.zshrc</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 2. 找到 “<span class=\"comment\"># User configuration” 在其位置下面加 `source ~/.bash_profile`</span></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 3. 保存退出</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 4. <span class=\"built_in\">source</span> ~/.zshrc</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\">##############################################################</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 在执行出错时结束程序</span></span><br><span class=\"line\">set -e</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 读取版本号</span></span><br><span class=\"line\">version=$1</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\">##### 1. 检查参数</span></span></span><br><span class=\"line\">if [ ! -n  \"$version\" ]; then</span><br><span class=\"line\"></span><br><span class=\"line\">echo \"&gt;&gt;&gt; 版本号参数不能为空!\"</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 结束脚本运行</span></span><br><span class=\"line\">exit</span><br><span class=\"line\">fi</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\">##### 2. 获取/更新包</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">echo \"&gt;&gt;&gt; 执行 flutter pub get!\"</span><br><span class=\"line\"></span><br><span class=\"line\">flutter pub get</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\">##### 3. 构建依赖项目的AAR</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">echo \"&gt;&gt;&gt; 执行构建 $&#123;version&#125; release 版本 aar !\"</span><br><span class=\"line\"></span><br><span class=\"line\">flutter build aar --no-debug --no-profile --build-number $&#123;version&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">echo \"&gt;&gt;&gt; 构建成功\"</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\">##### 4. 将文件上传 maven</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">echo \"&gt;&gt;&gt; 执行上传 Maven\"</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 打包出来的 aar 文件存放路径</span></span><br><span class=\"line\">file_path=\"build/host/outputs/repo/com/chicdeals/flutter/flutter_release/$version/flutter_release-$version\"</span><br><span class=\"line\"></span><br><span class=\"line\">mvn deploy:deploy-file \\</span><br><span class=\"line\">-s=\"mvn-settings.xml\" \\</span><br><span class=\"line\">-DpomFile=\"$file_path.pom\" \\</span><br><span class=\"line\">-DgeneratePom=true \\</span><br><span class=\"line\">-Dfile=\"$file_path.aar\" \\</span><br><span class=\"line\">-Durl=\"https://oss.bgapps.cn/repository/banggood-release\" \\</span><br><span class=\"line\">-DrepositoryId=\"com.chicdeals.flutter\" \\</span><br><span class=\"line\">-DgroupId=\"com.chicdeals.flutter\" \\</span><br><span class=\"line\">-Dpackaging=aar</span><br><span class=\"line\"></span><br><span class=\"line\">echo \"&gt;&gt;&gt; 上传成功\"</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\">##### 5. 提示如何引入</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">echo \"&gt;&gt;&gt; 项目接入地址：\"</span><br><span class=\"line\"></span><br><span class=\"line\">echo \"&gt;&gt;&gt; implementation 'com.chicdeals.flutter:flutter_release:$version'\"</span><br></pre></td></tr></table></figure>\n\n<p>与 <code>android_build.sh</code> 文件同目录下创建 maven 账号密码配置文件 <code>mvn-settings.xml</code>。</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">settings</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://maven.apache.org/SETTINGS/1.0.0\"</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">\"http://www.w3.org/2001/XMLSchema-instance\"</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">\"http://maven.apache.org/SETTINGS/1.0.0 http://maven.apache.org/xsd/settings-1.0.0.xsd\"</span>&gt;</span></span><br><span class=\"line\">          </span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">pluginGroups</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">pluginGroups</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">proxies</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">proxies</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">servers</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- server</span></span><br><span class=\"line\"><span class=\"comment\">     | Specifies the authentication information to use when connecting to a particular server, identified by</span></span><br><span class=\"line\"><span class=\"comment\">     | a unique name within the system (referred to by the 'id' attribute below).</span></span><br><span class=\"line\"><span class=\"comment\">     |</span></span><br><span class=\"line\"><span class=\"comment\">     | <span class=\"doctag\">NOTE:</span> You should either specify username/password OR privateKey/passphrase, since these pairings are</span></span><br><span class=\"line\"><span class=\"comment\">     |       used together.</span></span><br><span class=\"line\"><span class=\"comment\">     |</span></span><br><span class=\"line\"><span class=\"comment\">     --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">server</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">id</span>&gt;</span>com.chicdeals.flutter<span class=\"tag\">&lt;/<span class=\"name\">id</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">username</span>&gt;</span>Maven账号<span class=\"tag\">&lt;/<span class=\"name\">username</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">password</span>&gt;</span>Maven密码<span class=\"tag\">&lt;/<span class=\"name\">password</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">server</span>&gt;</span></span><br><span class=\"line\">    </span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">servers</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">profiles</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">settings</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"解释\"><a href=\"#解释\" class=\"headerlink\" title=\"解释\"></a>解释</h3><p>上面脚本的注释已经做了比较详细的解释了，在这里对几个比较重点的地方再做一遍解释说明。</p>\n<ol>\n<li>执行命令是 <code>./android_build.sh 版本号</code> 版本号为必传参数。</li>\n<li>执行 mvn 命令的前提需要 Mac 系统安装 Maven，安装方法建议通过 <code>brew install maven</code> 安装。</li>\n<li>Maven 账号密码配置文件在 <code>mvn-settings.xml</code>，其中文件配置的 <code>id</code> 需要与 <code>DgroupId</code> 和 <code>DrepositoryId</code> 保持一致。</li>\n</ol>\n<h3 id=\"拓展\"><a href=\"#拓展\" class=\"headerlink\" title=\"拓展\"></a>拓展</h3><ol>\n<li>如何验证安装成功 Maven，执行以下命令：</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ mvn -version</span><br></pre></td></tr></table></figure>\n\n<p>成功时，输出的日志如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Apache Maven 3.6.3 (cecedd343002696d0abb50b32b541b8a6ba2883f)</span><br><span class=\"line\">Maven home: /usr/local/maven/apache-maven-3.6.3</span><br><span class=\"line\">Java version: 1.8.0_172, vendor: Oracle Corporation, runtime: /Library/Java/JavaVirtualMachines/jdk1.8.0_172.jdk/Contents/Home/jre</span><br><span class=\"line\">Default locale: zh_CN, platform encoding: UTF-8</span><br><span class=\"line\">OS name: &quot;mac os x&quot;, version: &quot;10.15.3&quot;, arch: &quot;x86_64&quot;, family: &quot;mac&quot;</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>想查看详细 Maven 上传日志，在命令行加多 <code>--debug</code> 即可。</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mvn --debug deploy:deploy-file \\</span><br><span class=\"line\">-s=&quot;mvn-settings.xml&quot; \\</span><br><span class=\"line\">-DpomFile=&quot;build/host/outputs/repo/com/chicdeals/flutter/flutter_release/1.0/flutter_release-1.0.pom&quot; \\</span><br><span class=\"line\">-DgeneratePom=true \\</span><br><span class=\"line\">-Dfile=&quot;build/host/outputs/repo/com/chicdeals/flutter/flutter_release/1.0/flutter_release-1.0.aar&quot; \\</span><br><span class=\"line\">-Durl=&quot;https://oss.bgapps.cn/repository/banggood-release&quot; \\</span><br><span class=\"line\">-DrepositoryId=&quot;com.chicdeals.flutter&quot; \\</span><br><span class=\"line\">-DgroupId=&quot;com.chicdeals.flutter&quot; \\</span><br><span class=\"line\">-Dpackaging=aar</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h3><ul>\n<li><a href=\"https://blog.csdn.net/qizewei123/article/details/102768038\" target=\"_blank\" rel=\"noopener\">Flutter 自动打包依赖aar上传Maven仓库( Shell+Gradle 脚本)</a></li>\n<li><a href=\"https://galaxybruce.github.io/flutter/Flutter%E6%B7%B7%E7%BC%96%E4%B8%80%E9%94%AE%E6%89%93%E5%8C%85%E5%B9%B6%E4%B8%8A%E4%BC%A0maven.html\" target=\"_blank\" rel=\"noopener\">Flutter混编一键打包并上传maven</a></li>\n<li><a href=\"https://kikt.top/posts/flutter/exists/upload-aar-to-maven/\" target=\"_blank\" rel=\"noopener\">Flutter 1.12后 上传aar至maven私服</a></li>\n</ul>\n","categories":["Flutter"],"tags":["Flutter"]},{"title":"Android 与 Flutter 之间通信","url":"http://yoursite.com/2020/04/02/flutter-channel/","content":"<h3 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h3><p>Flutter 与原生之间的通信机制都是通过 Platform Channel 进行传递，如下图所示：</p>\n<p><img src=\"/images/2020/04/flutter_channel_01.png\" alt=\"image\"></p>\n<p>原生 与 Flutter 之间的通信主要有有四种实现方式：</p>\n<ol>\n<li>在初始化 Flutter 页面时会传递一个字符串 Route，因此我们就可以通过 Route 从 <code>原生</code> 向 <code>Flutter</code> 端传递自己想要的数据；</li>\n<li>通过 MethodChannel 来实现，MethodChannel 支持数据双向传递，有返回值。</li>\n<li><del>通过 EventChannel 来实现，EventChannel 仅支持数据单向传递，无返回值。</del></li>\n<li><del>通过 BasicMessageChannel 来实现，BasicMessageChannel 支持数据双向传递，有返回值。</del></li>\n</ol>\n<h3 id=\"Flutter-向原生通信\"><a href=\"#Flutter-向原生通信\" class=\"headerlink\" title=\"Flutter 向原生通信\"></a>Flutter 向原生通信</h3><h4 id=\"Flutter-端\"><a href=\"#Flutter-端\" class=\"headerlink\" title=\"Flutter 端\"></a>Flutter 端</h4><figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MethodChannelPage</span> <span class=\"keyword\">extends</span> <span class=\"title\">StatefulWidget</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"meta\">@override</span></span><br><span class=\"line\">  _MethodChannelPageState createState() =&gt; _MethodChannelPageState();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">_MethodChannelPageState</span> <span class=\"keyword\">extends</span> <span class=\"title\">State</span>&lt;<span class=\"title\">MethodChannelPage</span>&gt; </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 创建通信渠道，通道名称必须唯一，且与原生那边统一</span></span><br><span class=\"line\">  MethodChannel methodsChannel = MethodChannel(<span class=\"string\">\"com.chicdeals/methodsChannel\"</span>);</span><br><span class=\"line\">  <span class=\"built_in\">String</span> _langText = <span class=\"string\">'切换语言'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@override</span></span><br><span class=\"line\">  Widget build(BuildContext context) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> Scaffold (</span><br><span class=\"line\">      backgroundColor: Color(<span class=\"number\">0xFFFFFFFF</span>),</span><br><span class=\"line\">      body: Align(</span><br><span class=\"line\">        alignment: Alignment.center,</span><br><span class=\"line\">        child: Container(</span><br><span class=\"line\">          height: <span class=\"number\">44</span>,</span><br><span class=\"line\">          padding: EdgeInsets.only(left: <span class=\"number\">10</span>, right: <span class=\"number\">10</span>),</span><br><span class=\"line\">          alignment: Alignment.center,</span><br><span class=\"line\">          child: RaisedButton(</span><br><span class=\"line\">            child: Text(</span><br><span class=\"line\">              _langText,</span><br><span class=\"line\">            ),</span><br><span class=\"line\">            textColor: Colors.white,</span><br><span class=\"line\">            color: Color(<span class=\"number\">0xFF49C9A7</span>),</span><br><span class=\"line\">            onPressed: _sendMethodToNative,</span><br><span class=\"line\">          ),</span><br><span class=\"line\">        ),</span><br><span class=\"line\">      ),</span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  Future&lt;<span class=\"keyword\">void</span>&gt; _sendMethodToNative() <span class=\"keyword\">async</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">String</span> sendMsg = <span class=\"string\">'Flutter切换语言'</span>;</span><br><span class=\"line\">    <span class=\"comment\">// 向原生发送消息，标识符为 'flutter_change_language'</span></span><br><span class=\"line\">    <span class=\"comment\">// 原生那边接收到消息，并相应结果回来</span></span><br><span class=\"line\">    <span class=\"built_in\">String</span> result = <span class=\"keyword\">await</span> methodsChannel.invokeMethod(<span class=\"string\">'flutter_change_language'</span>, sendMsg);</span><br><span class=\"line\">    <span class=\"comment\">// 刷新页面按钮文案</span></span><br><span class=\"line\">    setState(() &#123;</span><br><span class=\"line\">      _langText = result;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"Android-端\"><a href=\"#Android-端\" class=\"headerlink\" title=\"Android 端\"></a>Android 端</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FlutterDemoActivity</span> <span class=\"keyword\">extends</span> <span class=\"title\">AppCompatActivity</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String TAG_FLUTTER_FRAGMENT = <span class=\"string\">\"flutter_fragment\"</span>;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> MaterialButton mBtnChangeLanguage;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> FlutterFragment mFlutterFragment;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> MethodChannel mMethodChannel;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">(@Nullable Bundle savedInstanceState)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.onCreate(savedInstanceState);</span><br><span class=\"line\">        setContentView(R.layout.activiy_flutter_demo);</span><br><span class=\"line\">        mBtnChangeLanguage = findViewById(R.id.btn_change_language);</span><br><span class=\"line\"></span><br><span class=\"line\">        FragmentManager fragmentManager = getSupportFragmentManager();</span><br><span class=\"line\"></span><br><span class=\"line\">        mFlutterFragment = (FlutterFragment) fragmentManager.findFragmentByTag(TAG_FLUTTER_FRAGMENT);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// Create and attach a FlutterFragment if one does not exist.</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (mFlutterFragment == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            mFlutterFragment = FlutterFragment.withNewEngine()</span><br><span class=\"line\">                    .initialRoute(<span class=\"string\">\"Flutter Demo\"</span>)</span><br><span class=\"line\">                    .build();</span><br><span class=\"line\"></span><br><span class=\"line\">            fragmentManager</span><br><span class=\"line\">                    .beginTransaction()</span><br><span class=\"line\">                    .add(R.id.container, mFlutterFragment, TAG_FLUTTER_FRAGMENT)</span><br><span class=\"line\">                    .commit();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onPostCreate</span><span class=\"params\">(@Nullable Bundle savedInstanceState)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.onPostCreate(savedInstanceState);</span><br><span class=\"line\">        <span class=\"comment\">// 通道名称需要与 Flutter 模块那边统一，并且唯一</span></span><br><span class=\"line\">        mMethodChannel = <span class=\"keyword\">new</span> MethodChannel(getBinaryMessenger(), <span class=\"string\">\"com.chicdeals/methodsChannel\"</span>);</span><br><span class=\"line\">        </span><br><span class=\"line\">        mMethodChannel.setMethodCallHandler(<span class=\"keyword\">new</span> MethodChannel.MethodCallHandler() &#123;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onMethodCall</span><span class=\"params\">(@NonNull MethodCall call, @NonNull MethodChannel.Result result)</span> </span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (call.method.equals(<span class=\"string\">\"flutter_change_language\"</span>)) &#123;</span><br><span class=\"line\">                    String callMsg = call.arguments.toString();</span><br><span class=\"line\">                    <span class=\"comment\">// 回调 Flutter 模块那边</span></span><br><span class=\"line\">                    result.success(callMsg);</span><br><span class=\"line\">                    mBtnChangeLanguage.setText(callMsg);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> FlutterEngine <span class=\"title\">getFlutterEngine</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> mFlutterFragment.getFlutterEngine();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> BinaryMessenger <span class=\"title\">getBinaryMessenger</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (getFlutterEngine() == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> getFlutterEngine().getDartExecutor().getBinaryMessenger();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">`</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Android-向-Flutter-通信\"><a href=\"#Android-向-Flutter-通信\" class=\"headerlink\" title=\"Android 向 Flutter 通信\"></a>Android 向 Flutter 通信</h3><h4 id=\"Android-端-1\"><a href=\"#Android-端-1\" class=\"headerlink\" title=\"Android 端\"></a>Android 端</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class FlutterDemoActivity extends AppCompatActivity &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    private static final String TAG_FLUTTER_FRAGMENT = &quot;flutter_fragment&quot;;</span><br><span class=\"line\">    private MaterialButton mBtnChangeLanguage;</span><br><span class=\"line\">    private FlutterFragment mFlutterFragment;</span><br><span class=\"line\"></span><br><span class=\"line\">    private MethodChannel mMethodChannel;</span><br><span class=\"line\"></span><br><span class=\"line\">    @Override</span><br><span class=\"line\">    protected void onCreate(@Nullable Bundle savedInstanceState) &#123;</span><br><span class=\"line\">        super.onCreate(savedInstanceState);</span><br><span class=\"line\">        setContentView(R.layout.activiy_flutter_demo);</span><br><span class=\"line\">        mBtnChangeLanguage = findViewById(R.id.btn_change_language);</span><br><span class=\"line\"></span><br><span class=\"line\">        FragmentManager fragmentManager = getSupportFragmentManager();</span><br><span class=\"line\"></span><br><span class=\"line\">        mFlutterFragment = (FlutterFragment) fragmentManager.findFragmentByTag(TAG_FLUTTER_FRAGMENT);</span><br><span class=\"line\"></span><br><span class=\"line\">        // Create and attach a FlutterFragment if one does not exist.</span><br><span class=\"line\">        if (mFlutterFragment == null) &#123;</span><br><span class=\"line\">            mFlutterFragment = FlutterFragment.withNewEngine()</span><br><span class=\"line\">                    .initialRoute(&quot;Flutter Demo&quot;)</span><br><span class=\"line\">                    .build();</span><br><span class=\"line\"></span><br><span class=\"line\">            fragmentManager</span><br><span class=\"line\">                    .beginTransaction()</span><br><span class=\"line\">                    .add(R.id.container, mFlutterFragment, TAG_FLUTTER_FRAGMENT)</span><br><span class=\"line\">                    .commit();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    @Override</span><br><span class=\"line\">    protected void onPostCreate(@Nullable Bundle savedInstanceState) &#123;</span><br><span class=\"line\">        super.onPostCreate(savedInstanceState);</span><br><span class=\"line\">        // 通道名称需要与 Flutter 模块那边统一，并且唯一</span><br><span class=\"line\">        mMethodChannel = new MethodChannel(getBinaryMessenger(), &quot;com.chicdeals/methodsChannel&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">        mBtnChangeLanguage.setOnClickListener(new View.OnClickListener() &#123;</span><br><span class=\"line\">            @Override</span><br><span class=\"line\">            public void onClick(View v) &#123;</span><br><span class=\"line\">                String sendMsg = &quot;原生切换语言&quot;;</span><br><span class=\"line\">                // 向 Flutter 模块发送消息，标识符为 &apos;native_change_language&apos;，并带上消息</span><br><span class=\"line\">                mMethodChannel.invokeMethod(&quot;native_change_language&quot;, sendMsg);</span><br><span class=\"line\">                mBtnChangeLanguage.setText(sendMsg);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    protected FlutterEngine getFlutterEngine() &#123;</span><br><span class=\"line\">        return mFlutterFragment.getFlutterEngine();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    private BinaryMessenger getBinaryMessenger() &#123;</span><br><span class=\"line\">        if (getFlutterEngine() == null) &#123;</span><br><span class=\"line\">            return null;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        return getFlutterEngine().getDartExecutor().getBinaryMessenger();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"Flutter-端-1\"><a href=\"#Flutter-端-1\" class=\"headerlink\" title=\"Flutter 端\"></a>Flutter 端</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">class MethodChannelPage extends StatefulWidget &#123;</span><br><span class=\"line\">  @override</span><br><span class=\"line\">  _MethodChannelPageState createState() =&gt; _MethodChannelPageState();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class _MethodChannelPageState extends State&lt;MethodChannelPage&gt; &#123;</span><br><span class=\"line\">  // 创建通信渠道，通道名称必须唯一，且与原生那边统一</span><br><span class=\"line\">  MethodChannel methodsChannel = MethodChannel(&quot;com.chicdeals/methodsChannel&quot;);</span><br><span class=\"line\">  String _langText = &apos;切换语言&apos;;</span><br><span class=\"line\"></span><br><span class=\"line\">  @override</span><br><span class=\"line\">  Widget build(BuildContext context) &#123;</span><br><span class=\"line\">    return Scaffold (</span><br><span class=\"line\">      backgroundColor: Color(0xFFFFFFFF),</span><br><span class=\"line\">      body: Align(</span><br><span class=\"line\">        alignment: Alignment.center,</span><br><span class=\"line\">        child: Container(</span><br><span class=\"line\">          height: 44,</span><br><span class=\"line\">          padding: EdgeInsets.only(left: 10, right: 10),</span><br><span class=\"line\">          alignment: Alignment.center,</span><br><span class=\"line\">          child: RaisedButton(</span><br><span class=\"line\">            child: Text(</span><br><span class=\"line\">              _langText,</span><br><span class=\"line\">            ),</span><br><span class=\"line\">            textColor: Colors.white,</span><br><span class=\"line\">            color: Color(0xFF49C9A7),</span><br><span class=\"line\">            onPressed: _sendMethodToNative,</span><br><span class=\"line\">          ),</span><br><span class=\"line\">        ),</span><br><span class=\"line\">      ),</span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  @override</span><br><span class=\"line\">  void initState() &#123;</span><br><span class=\"line\">    // 监听原生传递消息回调</span><br><span class=\"line\">    methodsChannel.setMethodCallHandler(_nativeCallHandler);</span><br><span class=\"line\">    super.initState();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  Future&lt;dynamic&gt; _nativeCallHandler(MethodCall call) async &#123;</span><br><span class=\"line\">    if(call.method == &apos;native_change_language&apos;) &#123;</span><br><span class=\"line\">      // 取出从原生带过来的信息</span><br><span class=\"line\">      String callMsg = call.arguments.toString();</span><br><span class=\"line\">      setState(() &#123;</span><br><span class=\"line\">        _langText = callMsg;</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Demo-展示\"><a href=\"#Demo-展示\" class=\"headerlink\" title=\"Demo 展示\"></a>Demo 展示</h3><p><img src=\"/images/2020/04/flutter_channel_02.gif\" alt=\"image\"></p>\n<h3 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h3><ul>\n<li><a href=\"https://flutter.cn/docs/development/platform-integration/platform-channels#step-3-add-an-android-platform-specific-implementation\" target=\"_blank\" rel=\"noopener\">撰写双端平台代码（插件编写实现）</a></li>\n<li><a href=\"https://juejin.im/post/6844903873358856200\" target=\"_blank\" rel=\"noopener\">一篇看懂 Android 与 Flutter 之间的通信</a></li>\n<li><a href=\"https://segmentfault.com/a/1190000021012102\" target=\"_blank\" rel=\"noopener\">Flutter混合开发(三)：Android与Flutter之间通信详细指南</a></li>\n</ul>\n","categories":["Flutter"],"tags":["Flutter"]},{"title":"Android 原生项目如何引入 Flutter","url":"http://yoursite.com/2020/03/05/flutter-native/","content":"<p>有两种方式创建，一种使用 Android Studio 创建集成 Flutter 模块，一种通过命令创建手动集成。</p>\n<p>最开始使用 Android Studio 创建，但是一直卡在 <code>Creating Flutter Project</code> 网上查了很多解决方法均无法解决，因此我是通过手动集成的。</p>\n<h3 id=\"一、创建-Flutter-模块\"><a href=\"#一、创建-Flutter-模块\" class=\"headerlink\" title=\"一、创建 Flutter 模块\"></a>一、创建 Flutter 模块</h3><p>打开终端选择自己指定的路径下，通过以下命令创建模块：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flutter create - t module --org com.chicdeals.flutter ky_flutter</span><br></pre></td></tr></table></figure>\n\n<p>创建完之后，打开 <code>pubspec.yaml</code> 文件拉到最后看到比平常创建的 Flutter 项目多出下面信息：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># This section identifies your Flutter project as a module meant for</span><br><span class=\"line\"># embedding in a native host app.  These identifiers should _not_ ordinarily</span><br><span class=\"line\"># be changed after generation - they are used to ensure that the tooling can</span><br><span class=\"line\"># maintain consistency when adding or modifying assets and plugins.</span><br><span class=\"line\"># They also do not have any bearing on your native host application&apos;s</span><br><span class=\"line\"># identifiers, which may be completely independent or the same as these.</span><br><span class=\"line\">module:</span><br><span class=\"line\">  androidX: true</span><br><span class=\"line\">  androidPackage: com.chicdeals.flutter.ky_flutter</span><br><span class=\"line\">  iosBundleIdentifier: com.chicdeals.flutter.ky_flutter</span><br></pre></td></tr></table></figure>\n\n<p>修改下信息，去掉包名后面的 <code>.ky_flutter</code> 简短下包名。</p>\n<h3 id=\"二、Android-项目引入-Java8\"><a href=\"#二、Android-项目引入-Java8\" class=\"headerlink\" title=\"二、Android 项目引入 Java8\"></a>二、Android 项目引入 Java8</h3><p>在尝试将 Flutter 模块项目集成到宿主 Android 应用之前，请先确保宿主 Android 应用的 <code>build.gradle</code> 文件的 <code>android { }</code> 块中声明了以下源兼容性，例如：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">android &#123;</span><br><span class=\"line\">  //...</span><br><span class=\"line\">  compileOptions &#123;</span><br><span class=\"line\">    sourceCompatibility 1.8</span><br><span class=\"line\">    targetCompatibility 1.8</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"三、将-Flutter-module-作为依赖项\"><a href=\"#三、将-Flutter-module-作为依赖项\" class=\"headerlink\" title=\"三、将 Flutter module 作为依赖项\"></a>三、将 Flutter module 作为依赖项</h3><h4 id=\"方案A-依赖-AAR\"><a href=\"#方案A-依赖-AAR\" class=\"headerlink\" title=\"方案A - 依赖 AAR\"></a>方案A - 依赖 AAR</h4><p>这种方式会将 Flutter 库打包成由 AAR 和 POM artifacts 组成的本地 Maven 存储库。这种方案可以使你的团队不需要安装 Flutter SDK 即可编译宿主应用。</p>\n<ol>\n<li>在你的 Flutter 模块路径下，执行如下命令：</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flutter build aar</span><br></pre></td></tr></table></figure>\n\n<p>构建完成后，终端会输出如何完成集成操作的提示。</p>\n<p><img src=\"/images/2020/03/native_flutter_01.png\" alt=\"image\"></p>\n<p>需要注意的是以下配置是放在最外层位置：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">repositories &#123;</span><br><span class=\"line\">        maven &#123;</span><br><span class=\"line\">            url &apos;/Users/apple/FlutterDev/project/ky_flutter/build/host/outputs/repo&apos;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        maven &#123;</span><br><span class=\"line\">            url &apos;https://storage.googleapis.com/download.flutter.io&apos;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br></pre></td></tr></table></figure>\n\n<p>应用只配置 debug、pre、release 构建模式，因此在引用的时候，可以这样配置：</p>\n<figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">debugImplementation <span class=\"string\">'com.chicdeals.flutter:flutter_debug:1.0'</span></span><br><span class=\"line\">preImplementation <span class=\"string\">'com.chicdeals.flutter:flutter_profile:1.0'</span></span><br><span class=\"line\">releaseImplementation <span class=\"string\">'com.chicdeals.flutter:flutter_release:1.0'</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>如果你是使用 Android Studio 开发工具，你也可以直接点击 Android Studio 菜单中的 Build &gt; Flutter &gt; Build AAR 为 Flutter 模块构建 AAR。</p>\n</blockquote>\n<p><img src=\"/images/2020/03/native_flutter_02.png\" alt=\"image\"></p>\n<h4 id=\"方案-B-依赖模块的源码\"><a href=\"#方案-B-依赖模块的源码\" class=\"headerlink\" title=\"方案 B - 依赖模块的源码\"></a>方案 B - 依赖模块的源码</h4><p>该方式可以使你的 Android 项目和 Flutter 项目能够同步一键式构建。当你需要同时在这两个项目中进行快速迭代时，这种方案非常方便，但是此时，你的团队必须安装 Flutter SDK 才能构建宿主应用程序。</p>\n<p>具体实现方式，如有需要请看官方指导文档，在这里我就不做简述了，因为我是使用方案A，没有选择方案 B。</p>\n<h3 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h3><ul>\n<li><a href=\"https://flutter.dev/docs/development/add-to-app/android/project-setup\" target=\"_blank\" rel=\"noopener\">将 Flutter module 集成到 Android 项目</a></li>\n</ul>\n","categories":["Flutter"],"tags":["Flutter"]},{"title":"Flutter 如何实现国际化多语言","url":"http://yoursite.com/2020/02/18/flutter-language/","content":"<p>关于 Flutter 国际化实现方案，网上查看了很多资料，主要有两种。</p>\n<ol>\n<li>基于 intl package 的国际化实现（官方推荐）</li>\n<li>创建支持语种的 Json 文件，存储及读取里面的语言</li>\n</ol>\n<blockquote>\n<p>本文介绍的是第一种实现方案，毕竟都是官方推荐使用的。</p>\n</blockquote>\n<h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>采用第一种方案，不得不提的一个插件 <a href=\"https://plugins.jetbrains.com/plugin/13666-flutter-intl/\" target=\"_blank\" rel=\"noopener\">Flutter Intl</a>，安装使用该插件之后实现国际化非常简单。</p>\n<ul>\n<li>该插件更新维护频率高，也是目前大部分人使用的。</li>\n<li>并且支持 Android Studio 和 VS Code 开发工具</li>\n</ul>\n<p>下面是以 Android Studio 为例，详细讲解使用过程：</p>\n<h3 id=\"1-安装插件\"><a href=\"#1-安装插件\" class=\"headerlink\" title=\"1.安装插件\"></a>1.安装插件</h3><p>在 Preferences &gt; Plugins &gt; Marketplace &gt; 搜索 <code>Flutter Intl</code> &gt; 安装完重启 AS</p>\n<p><img src=\"/images/2020/02/flutter_language_01.png\" alt=\"image\"></p>\n<h3 id=\"2-初始化项目-Intl\"><a href=\"#2-初始化项目-Intl\" class=\"headerlink\" title=\"2. 初始化项目 Intl\"></a>2. 初始化项目 Intl</h3><p><img src=\"/images/2020/02/flutter_language_02.png\" alt=\"image\"></p>\n<p>完成上面操作之后会自动生成以下文件目录：</p>\n<p><img src=\"/images/2020/02/flutter_language_03.png\" alt=\"image\"></p>\n<ul>\n<li>generated 是自动生成的 dart 代码。</li>\n<li>I10n 是对应的 arb 文件目录，项目的文案都是在这里新增。</li>\n</ul>\n<p>在 <code>pubspec.yaml</code> 文件底部也会新增配置：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flutter_intl:</span><br><span class=\"line\">  enabled: true</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-项目增加国际化支持\"><a href=\"#3-项目增加国际化支持\" class=\"headerlink\" title=\"3. 项目增加国际化支持\"></a>3. 项目增加国际化支持</h3><p>在项目的 <code>pubspec.yaml</code> 下添加依赖 <code>flutter_localizations</code></p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dependencies:</span><br><span class=\"line\">  flutter:</span><br><span class=\"line\">    sdk: flutter</span><br><span class=\"line\">  flutter_localizations:</span><br><span class=\"line\">    sdk: flutter</span><br></pre></td></tr></table></figure>\n\n<p>添加完之后执行下命令 <code>flutter pub get</code>，回到 <code>main.dart</code> 文件配置项目支持的语种</p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">runApp(MaterialApp(</span><br><span class=\"line\">    localizationsDelegates: [</span><br><span class=\"line\">      S.delegate,</span><br><span class=\"line\">      GlobalMaterialLocalizations.delegate,</span><br><span class=\"line\">      GlobalWidgetsLocalizations.delegate,</span><br><span class=\"line\">      GlobalCupertinoLocalizations.delegate,</span><br><span class=\"line\">    ],</span><br><span class=\"line\">    <span class=\"comment\">// 支持语种</span></span><br><span class=\"line\">    supportedLocales: S.delegate.supportedLocales,</span><br><span class=\"line\">    <span class=\"comment\">// 设置当前项目的语言</span></span><br><span class=\"line\">    locale: Local(<span class=\"string\">'en'</span>, <span class=\"string\">'GB'</span>),</span><br><span class=\"line\">));</span><br></pre></td></tr></table></figure>\n\n<p>在主入口前初始化框架当前语言：</p>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">S.load(Locale(<span class=\"string\">'en'</span>, <span class=\"string\">'GB'</span>));</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-如何使用\"><a href=\"#4-如何使用\" class=\"headerlink\" title=\"4. 如何使用\"></a>4. 如何使用</h3><p>在刚通过插件生成的文件 <code>intl_en.arb</code> 下，新增文案：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  &quot;contactUs&quot;: &quot;ContactUs&quot;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>添加完之后 <code>command+s</code> 保存，插件就会执行命令，在 <code>I10n.dart</code> 和 <code>messages_en.dart</code> 文件下生成对应的代码。</p>\n<p>I10n.dart:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">class S &#123;</span><br><span class=\"line\">  ...</span><br><span class=\"line\"></span><br><span class=\"line\">  /// `ContactUs`</span><br><span class=\"line\">  String get contactUs &#123;</span><br><span class=\"line\">    return Intl.message(</span><br><span class=\"line\">      &apos;ContactUs&apos;,</span><br><span class=\"line\">      name: &apos;contactUs&apos;,</span><br><span class=\"line\">      desc: &apos;&apos;,</span><br><span class=\"line\">      args: [],</span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>messages_en.dart:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">class MessageLookup extends MessageLookupByLibrary &#123;</span><br><span class=\"line\">  String get localeName =&gt; &apos;en&apos;;</span><br><span class=\"line\"></span><br><span class=\"line\">  final messages = _notInlinedMessages(_notInlinedMessages);</span><br><span class=\"line\">  static _notInlinedMessages(_) =&gt; &lt;String, Function&gt; &#123;</span><br><span class=\"line\">    &quot;contactUs&quot; : MessageLookupByLibrary.simpleMessage(&quot;ContactUs&quot;)</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>在代码中使用新增文案</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">S.of(context).contactUs</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"5-如何新增语种\"><a href=\"#5-如何新增语种\" class=\"headerlink\" title=\"5. 如何新增语种\"></a>5. 如何新增语种</h3><blockquote>\n<p>点击 Tools &gt; Flutter Intl &gt; Add Locale</p>\n</blockquote>\n<p><img src=\"/images/2020/02/flutter_language_04.png\" alt=\"image\"></p>\n<p>新增 中东阿拉伯语：</p>\n<p><img src=\"/images/2020/02/flutter_language_05.png\" alt=\"image\"></p>\n<p>点击 OK 之后，插件会新创建两个文件：</p>\n<p><img src=\"/images/2020/02/flutter_language_06.png\" alt=\"image\"></p>\n<p>然后在新创建的 <code>intl_ar.arb</code> 文件，增加对应的语种即可：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  &quot;contactUs&quot;: &quot;اتصل بنا&quot;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"6-Arb-文件更多语法使用\"><a href=\"#6-Arb-文件更多语法使用\" class=\"headerlink\" title=\"6. Arb 文件更多语法使用\"></a>6. Arb 文件更多语法使用</h3><p>占位符：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    &quot;hello&quot;: &quot;Hello &#123;name&#125;&quot;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>使用：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">S.of(contxt).hello(&quot;GoJun&quot;);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"资料\"><a href=\"#资料\" class=\"headerlink\" title=\"资料\"></a>资料</h3><ul>\n<li><a href=\"https://www.jianshu.com/p/1960d34e54ae\" target=\"_blank\" rel=\"noopener\">Flutter国际化的三种方式–&gt;json</a></li>\n<li><a href=\"https://flutter.dev/docs/development/accessibility-and-localization/internationalization\" target=\"_blank\" rel=\"noopener\">官方文档 Flutter 应用国际化</a></li>\n<li><a href=\"https://plugins.jetbrains.com/plugin/13666-flutter-intl/\" target=\"_blank\" rel=\"noopener\">Fluter Intl 插件</a></li>\n</ul>\n","categories":["Flutter"],"tags":["Flutter"]},{"title":"Flutter 如何使用自定义字体","url":"http://yoursite.com/2020/02/01/flutter-font/","content":"<h3 id=\"1-导入字体包\"><a href=\"#1-导入字体包\" class=\"headerlink\" title=\"1. 导入字体包\"></a>1. 导入字体包</h3><p>在项目路径新创建 <code>fonts</code> 文件夹，里面存放自定义字体包。</p>\n<blockquote>\n<p>注意这个文件夹的路径需要放到主目录下，如果在 <code>asstes</code> 文件夹下创建在 iOS 那边打出来的产物会出现无法应用到自定义字体的问题。</p>\n</blockquote>\n<p><img src=\"/images/2020/02/flutter_fonts_01.png\" alt=\"image\"></p>\n<h3 id=\"2-在-pubspec-yaml-中声明字体\"><a href=\"#2-在-pubspec-yaml-中声明字体\" class=\"headerlink\" title=\"2. 在 pubspec.yaml 中声明字体\"></a>2. 在 pubspec.yaml 中声明字体</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flutter:</span><br><span class=\"line\">  fonts:</span><br><span class=\"line\">   - family: Hind Siliguri</span><br><span class=\"line\">     fonts:</span><br><span class=\"line\">       - asset: assets/fonts/Hind-Siliguri-Bold.ttf</span><br><span class=\"line\">       - asset: assets/fonts/Hind-Siliguri-Regular.ttf</span><br></pre></td></tr></table></figure>\n\n<p><code>family</code> 属性决定了字体的名称，将会在 <code>TextStyle</code> 的 <code>fontFamily</code> 属性中用到。</p>\n<h3 id=\"3-全局设置默认字体\"><a href=\"#3-全局设置默认字体\" class=\"headerlink\" title=\"3. 全局设置默认字体\"></a>3. 全局设置默认字体</h3><p>在主入口 <code>main.dart</code> 文件配置：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">runApp(MaterialApp(</span><br><span class=\"line\">    theme: ThemeData(</span><br><span class=\"line\">      fontFamily: &apos;Hind Siliguri&apos;,</span><br><span class=\"line\">      ...</span><br><span class=\"line\">    ),</span><br><span class=\"line\">));</span><br></pre></td></tr></table></figure>\n\n<p>设置的 <code>fontFamily</code> 的值必须与 <code>pubspec.yaml</code>  中声明的名称相匹配。</p>\n<h3 id=\"4-抽取封装通用的字体样式（可选）\"><a href=\"#4-抽取封装通用的字体样式（可选）\" class=\"headerlink\" title=\"4. 抽取封装通用的字体样式（可选）\"></a>4. 抽取封装通用的字体样式（可选）</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import &apos;package:flutter/material.dart&apos;;</span><br><span class=\"line\"></span><br><span class=\"line\">class Styles &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  static TextStyle boldTextStyle(Color color, double fontSize, &#123;Color backgroundColor, double lineHeight&#125;) &#123;</span><br><span class=\"line\">    return TextStyle(</span><br><span class=\"line\">      fontSize: fontSize,</span><br><span class=\"line\">      color: color,</span><br><span class=\"line\">      fontWeight: FontWeight.bold,</span><br><span class=\"line\">      backgroundColor: backgroundColor,</span><br><span class=\"line\">      height: lineHeight,</span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  static TextStyle regularTextStyle(Color color, double fontSize, &#123;Color backgroundColor, double lineHeight&#125;) &#123;</span><br><span class=\"line\">    return TextStyle(</span><br><span class=\"line\">      fontSize: fontSize,</span><br><span class=\"line\">      color: color,</span><br><span class=\"line\">      backgroundColor: backgroundColor,</span><br><span class=\"line\">      height: lineHeight,</span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"5-使用\"><a href=\"#5-使用\" class=\"headerlink\" title=\"5. 使用\"></a>5. 使用</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Text(</span><br><span class=\"line\">      &apos;Contact Us&apos;,</span><br><span class=\"line\">      style: Styles.boldTextStyle(Colour.color_333333, 18),</span><br><span class=\"line\">    ),</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"6-效果\"><a href=\"#6-效果\" class=\"headerlink\" title=\"6. 效果\"></a>6. 效果</h3><p><img src=\"/images/2020/02/flutter_fonts_02.png\" alt=\"image\"></p>\n<h3 id=\"资料\"><a href=\"#资料\" class=\"headerlink\" title=\"资料\"></a>资料</h3><p><a href=\"https://flutter.dev/docs/cookbook/design/fonts\" target=\"_blank\" rel=\"noopener\">官方文档-使用自定义字体</a></p>\n","categories":["Flutter"],"tags":["Flutter"]},{"title":"Flutter 环境搭建（Mac）","url":"http://yoursite.com/2020/01/20/flutter-build/","content":"<h3 id=\"下载-Flutter-SDK\"><a href=\"#下载-Flutter-SDK\" class=\"headerlink\" title=\"下载 Flutter SDK\"></a>下载 Flutter SDK</h3><ol>\n<li>获取Flutter SDK的最新稳定版本：</li>\n</ol>\n<p>将 SDK 下载到指定文件夹下，建议创建一个专门开发 Flutter 项目的文件夹下。</p>\n<p>直接到<a href=\"https://flutter.dev/docs/development/tools/sdk/releases?tab=macos\" target=\"_blank\" rel=\"noopener\">官网</a>下载稳定版回来。</p>\n<p>也可以通过 git 克隆对网络环境要求比较高，建议是从官网下载。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone https://github.com/flutter/flutter.git</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>配置环境变量</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export PATH=&quot;$PATH:[PATH_TO_FLUTTER_GIT_DIRECTORY]/flutter/bin&quot;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>[PATH_TO_FLUTTER_GIT_DIRECTORY] 指上面你下载回来 SDK 存放的路径。</p>\n</blockquote>\n<p>将上面的代码放到 <code>.bash_profile</code> 文件中</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim ~/.bash_profile</span><br></pre></td></tr></table></figure>\n\n<p>生效配置环境</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">source ~/.bash_profile</span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li>检查环境变量是否配置成功</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flutter -h</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/2020/01/flutter_build_01.png\" alt=\"image\"></p>\n<p>如果出现这个信息说明环境已经配置成功了。</p>\n<ol start=\"4\">\n<li>检查 Flutter 环境配置是否完成</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flutter doctor</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/2020/01/flutter_build_02.png\" alt=\"image\"></p>\n<blockquote>\n<p>留意输出的信息，并且需要处理 <code>[x]</code> 与 <code>[!]</code> 的提示信息。</p>\n</blockquote>\n<p><img src=\"/images/2020/01/flutter_build_03.png\" alt=\"image\"></p>\n<p>如果配置全没问题后，执行 <code>flutter doctor</code> 命令输出信息以上情况。</p>\n<h3 id=\"下载-Dart-SDK\"><a href=\"#下载-Dart-SDK\" class=\"headerlink\" title=\"下载 Dart SDK\"></a>下载 Dart SDK</h3><p>Mac 通过 HomeBrew 安装</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">brew tap dart-lang/dart</span><br><span class=\"line\">brew install dart</span><br></pre></td></tr></table></figure>\n\n<p>其他实用命令</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#更新Dart版本</span><br><span class=\"line\">brew upgrade dart</span><br><span class=\"line\"></span><br><span class=\"line\">#切换本地指定版本</span><br><span class=\"line\">brew switch dart 2.1.0</span><br><span class=\"line\"></span><br><span class=\"line\">#查看当前Dart版本信息</span><br><span class=\"line\">brew info dart</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"文档\"><a href=\"#文档\" class=\"headerlink\" title=\"文档\"></a>文档</h3><ul>\n<li><a href=\"https://flutter.dev/docs/get-started/install/macos\" target=\"_blank\" rel=\"noopener\">Flutter 官方安装指南</a></li>\n<li><a href=\"https://dart.dev/get-dart\" target=\"_blank\" rel=\"noopener\">Dart 安装指南</a></li>\n</ul>\n","categories":["Flutter"],"tags":["Flutter"]},{"title":"如何利用 Android App Bundle 进行 APK 瘦身 28%","url":"http://yoursite.com/2019/10/20/android-app-bundle/","content":"<h2 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h2><p>Android App Bundle 是 Google 在 2018 年 IO 大会上推出一种新发布格式，通过此格式发布的应用，Google Play 商店会根据用户设备屏幕密度，CPU 架构 下发其对应的 APK，这就意味着用户下载的 APK 不会存在与自己设备不匹配的格式资源，从而也达到了大幅度减少 APK 大小。另外利用此格式还可以实现 <code>动态组件化</code> 的技术，此文不做该技术的过多介绍，感兴趣的可以到 <a href=\"https://developer.android.google.cn/studio/projects/dynamic-delivery\" target=\"_blank\" rel=\"noopener\">官方文档</a> 了解。</p>\n<h2 id=\"条件\"><a href=\"#条件\" class=\"headerlink\" title=\"条件\"></a>条件</h2><p>如果使用 Android App Bundle 发布格式，必须加入 <code>Google Play 应用签名计划</code>。关于如何加入，可以详细查看这份 <a href=\"https://developer.android.com/studio/publish/app-signing#enroll\" target=\"_blank\" rel=\"noopener\">官方指南</a>。</p>\n<p><strong>注意：</strong></p>\n<p>一旦你的应用使用了 Google 应用签名，用户下载的 APK 签名将会是 Google 生成的签名，而不是你自己为应用的签名。因此需要检查你应用使用到的第三方平台 SDK，如果有需要配置签名信息的，记得将 Google 生成的签名信息配置到其对应的地方。</p>\n<h2 id=\"原理\"><a href=\"#原理\" class=\"headerlink\" title=\"原理\"></a>原理</h2><p>生成的 Android App Bundle 包，是不可以直接安装的，App Bundle 会根据设备屏幕密度、CPU 架构、Language 多个维度进行拆分，组装成对各种组合的 Apk；然后 Play Store 会根据用户设备配置，提供对应的组合 APK。通过下图可以促进你理解：</p>\n<p><img src=\"/images/2019/10/01.png\" alt=\"image\"></p>\n<p>例如，用户的设备配置如下：arm，xhdpi，en_US，则最终用户下载的 APK 将是（base + arm + xhdpi + en）.apk的组合。</p>\n<p>如果用户在设备设置中更改/添加了新语言，则 Play Store 会检测到此情况，并尝试为在设备下载新的其他语言分类 APK。如果互联网不可用，则稍后将下载。</p>\n<h2 id=\"如何构建-Android-App-Bundle\"><a href=\"#如何构建-Android-App-Bundle\" class=\"headerlink\" title=\"如何构建 Android App Bundle\"></a>如何构建 Android App Bundle</h2><h3 id=\"Android-Studio-3-2-版本及以上\"><a href=\"#Android-Studio-3-2-版本及以上\" class=\"headerlink\" title=\"Android Studio 3.2 版本及以上\"></a>Android Studio 3.2 版本及以上</h3><blockquote>\n<p>Android Studio –&gt; Build –&gt; Generate Signed Bundle/APK</p>\n</blockquote>\n<p><img src=\"/images/2019/10/02.png\" alt=\"image\"></p>\n<p><img src=\"/images/2019/10/03.png\" alt=\"image\"></p>\n<h3 id=\"通过命令行构建\"><a href=\"#通过命令行构建\" class=\"headerlink\" title=\"通过命令行构建\"></a>通过命令行构建</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./gradlew bundleRelease</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"如何测试生成出来的-Android-App-Bundle\"><a href=\"#如何测试生成出来的-Android-App-Bundle\" class=\"headerlink\" title=\"如何测试生成出来的 Android App Bundle\"></a>如何测试生成出来的 Android App Bundle</h2><h3 id=\"本地使用-bundletool-命令行工具\"><a href=\"#本地使用-bundletool-命令行工具\" class=\"headerlink\" title=\"本地使用 bundletool 命令行工具\"></a>本地使用 <a href=\"https://github.com/google/bundletool\" target=\"_blank\" rel=\"noopener\">bundletool</a> 命令行工具</h3><p>bundletool 是一种底层工具，可供 Gradle、Android Studio 和 Google Play 用于编译 Android App Bundle 或将 App Bundle 转换为部署到设备的各种 APK。您也可以将 bundletool 作为一种命令行工具，用于重新创建、检查和验证应用 APK 的 Google Play 服务器端版本。</p>\n<p>下载地址：<a href=\"https://github.com/google/bundletool/releases\" target=\"_blank\" rel=\"noopener\">GitHub 代码库</a></p>\n<h4 id=\"1-将-App-Bundle-生成一组-APK\"><a href=\"#1-将-App-Bundle-生成一组-APK\" class=\"headerlink\" title=\"1. 将 App Bundle 生成一组 APK\"></a>1. 将 App Bundle 生成一组 APK</h4><p>将你从 Android Studio 构建生成的 App Bundle 为应用支持的所有设备生成一组 APK，用一个以 <code>.apks</code> 为文件扩展名的容器装起来。</p>\n<blockquote>\n<p>如果您未指定签名信息，bundletool 会尝试使用调试密钥为 APK 签名，这里我为了方便我将这些 APK 部署到设备，添加了应用的签名信息。</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">java -jar bundletool.jar build-apks </span><br><span class=\"line\">--bundle=/MyApp/my_app.aab</span><br><span class=\"line\">--output=/MyApp/my_app.apks</span><br><span class=\"line\">--ks=/MyApp/keystore.jks</span><br><span class=\"line\">--ks-pass=file:/MyApp/keystore.pwd</span><br><span class=\"line\">--ks-key-alias=MyKeyAlias</span><br><span class=\"line\">--key-pass=file:/MyApp/key.pwd</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-将-APK-安装到连接的设备\"><a href=\"#2-将-APK-安装到连接的设备\" class=\"headerlink\" title=\"2. 将 APK 安装到连接的设备\"></a>2. 将 APK 安装到连接的设备</h4><p>生成一组 APK 后，bundletool 可以将该组中适当 APK 的组合安装到连接的设备。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">java -jar bundletool.jar install-apks --apks=/MyApp/my_app.apks</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>如果连接了多个设备，请添加 –device-id=serial-id 标记来指定目标设备。</p>\n</blockquote>\n<h4 id=\"测试\"><a href=\"#测试\" class=\"headerlink\" title=\"测试\"></a>测试</h4><p>通过上面两条命令，已经为你即将发布的应用安装到你的设备上，最后检查下 app 运行情况，没问题就可以将刚才生成的 aab 上传到商店后台进行版本发布。</p>\n<h4 id=\"更多\"><a href=\"#更多\" class=\"headerlink\" title=\"更多\"></a>更多</h4><p>想了解更多关于 bundletool 工具的使用方法，可以到 <a href=\"https://developer.android.com/studio/command-line/bundletool\" target=\"_blank\" rel=\"noopener\">这里</a> 了解。</p>\n<h3 id=\"直接将-App-Bundle-上传到应用-Play-商店后台\"><a href=\"#直接将-App-Bundle-上传到应用-Play-商店后台\" class=\"headerlink\" title=\"直接将 App Bundle 上传到应用 Play 商店后台\"></a>直接将 App Bundle 上传到应用 Play 商店后台</h3><p>这个操作很简单，跟平常发布版本操作差不多，具体如下：</p>\n<blockquote>\n<p>版本管理 –&gt; 应用版本 –&gt; 创建版本 –&gt; 添加 Android App Bundle –&gt; 保存</p>\n</blockquote>\n<p>此时想检查刚上传的 App Bundle 生成的 APK 情况，以及下载生成的 APK 到本地进行测试，操作步骤如下：</p>\n<blockquote>\n<p>版本管理 –&gt; 软件工件库 –&gt; 软件工件库草稿找到刚才上传的版本 –&gt; 探索 –&gt; 下载设备专属 APK</p>\n</blockquote>\n<p><img src=\"/images/2019/10/06.png\" alt=\"image\"></p>\n<p><img src=\"/images/2019/10/04.png\" alt=\"image\"></p>\n<h2 id=\"实验\"><a href=\"#实验\" class=\"headerlink\" title=\"实验\"></a>实验</h2><h3 id=\"本地语言包\"><a href=\"#本地语言包\" class=\"headerlink\" title=\"本地语言包\"></a>本地语言包</h3><p>如果本身 App 是支持多语言的，在应用内切换语言，Play Store 无法检测应用语言改变，因此需要禁止 App Bundle 根据语言拆分安装包。</p>\n<p>在 App 下的 build.gradle 文件添加以下配置：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">android &#123;</span><br><span class=\"line\">    bundle &#123;</span><br><span class=\"line\">        language &#123;</span><br><span class=\"line\">            // Specifies that the app bundle should not support</span><br><span class=\"line\">            // configuration APKs for language resources. These</span><br><span class=\"line\">            // resources are instead packaged with each base and</span><br><span class=\"line\">            // dynamic feature APK.</span><br><span class=\"line\">            enableSplit = false</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"图片资源\"><a href=\"#图片资源\" class=\"headerlink\" title=\"图片资源\"></a>图片资源</h3><p>目前大部分应用图片资源只适配一些高分辨率 xxxhdpi，xxhdpi。</p>\n<p>验证 App Bundle 拆分出来的低分辨率包，是否会不存在高分辨率的图片资源？</p>\n<blockquote>\n<p>将生成 “apks” 的文件更改为 “zip” 格式 –&gt; 解压 –&gt; standalones –&gt; 选一个低分辨率的安装包 –&gt; 更改为 “zip” 格式 –&gt; 解压 –&gt; 查看资源文件</p>\n</blockquote>\n<p><img src=\"/images/2019/10/07.png\" alt=\"image\"></p>\n<p>结果：低分辨率包依然存在我们项目高分辨率的图片。</p>\n<h2 id=\"最后\"><a href=\"#最后\" class=\"headerlink\" title=\"最后\"></a>最后</h2><p>最后来看下使用 App Bundle 生成的 APK，与上个版本相比的数据。</p>\n<p><img src=\"/images/2019/10/05.png\" alt=\"image\"></p>\n<h2 id=\"资料\"><a href=\"#资料\" class=\"headerlink\" title=\"资料\"></a>资料</h2><ul>\n<li><a href=\"https://developer.android.com/guide/app-bundle/\" target=\"_blank\" rel=\"noopener\">官方文档介绍</a></li>\n<li><a href=\"https://developer.android.com/topic/performance/reduce-apk-size\" target=\"_blank\" rel=\"noopener\">缩减应用大小</a></li>\n<li><a href=\"https://developer.android.com/studio/command-line/bundletool\" target=\"_blank\" rel=\"noopener\">如何测试构建出来的 aab 包</a></li>\n<li><a href=\"https://blog.csdn.net/u012124438/article/details/83508944\" target=\"_blank\" rel=\"noopener\">Android App瘦身新姿势——Android App Bundle</a></li>\n</ul>\n<h2 id=\"推荐阅读\"><a href=\"#推荐阅读\" class=\"headerlink\" title=\"推荐阅读\"></a>推荐阅读</h2><ul>\n<li><a href=\"https://gojun.me/2019/09/10/android-reduce-apk-size/\" target=\"_blank\" rel=\"noopener\">终极 Apk 瘦身优化</a></li>\n</ul>\n","categories":[],"tags":["Android"]},{"title":"MacOs 最全的 Jenkins Android 自动打包构建教程","url":"http://yoursite.com/2019/09/24/jenkins/","content":"<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><ol>\n<li>下载安装可以到 Jenkins <a href=\"https://jenkins.io/zh/\" target=\"_blank\" rel=\"noopener\">官网</a> 下载Mac版本的安装包，然后进行手动安装（坑多，不推荐）</li>\n<li>使用 brew 下载安装Jenkins（推荐，简单傻瓜式，下载安装配置一步到位）具体做法如下：<br><code>brew install jenkins</code></li>\n</ol>\n<h2 id=\"启动\"><a href=\"#启动\" class=\"headerlink\" title=\"启动\"></a>启动</h2><p>安装完成在终端输入 <code>jenkins</code> 启动</p>\n<p>然后在浏览器打开 <code>http://localhost:8080</code></p>\n<p>首次启动会看到一个界面要求你输入管理员密码，如果你是命令安装的，在终端启动的时候会输出此密码。</p>\n<p><img src=\"/images/2019/09/07.png\" alt=\"image\"></p>\n<p>按它页面提示的路径找到该文件，复制里面的一串字符到输入框回车即可。</p>\n<p>会出现找不到此文件的情况，原因是 secrets 文件夹未授权当前用户访问。</p>\n<p>解决方法：<a href=\"https://stackoverflow.com/a/38943610\" target=\"_blank\" rel=\"noopener\">https://stackoverflow.com/a/38943610</a></p>\n<h2 id=\"基本配置\"><a href=\"#基本配置\" class=\"headerlink\" title=\"基本配置\"></a>基本配置</h2><p>第一次启动要求你创建一个管理员账号。</p>\n<h2 id=\"插件的安装\"><a href=\"#插件的安装\" class=\"headerlink\" title=\"插件的安装\"></a>插件的安装</h2><p>进入后，会让你选择推荐插件安装还是自定义插件安装，对于小白可以直接点击推荐安装。</p>\n<h2 id=\"Jenkins的环境配置\"><a href=\"#Jenkins的环境配置\" class=\"headerlink\" title=\"Jenkins的环境配置\"></a>Jenkins的环境配置</h2><p>配置 JDK 路径</p>\n<p>Mac 查看 JDK 路径方法：<br><code>打开终端，执行    /usr/libexec/java_home -V</code></p>\n<p><img src=\"/images/2019/09/08.png\" alt=\"image\"></p>\n<h2 id=\"环境变量配置（ANDROID-HOME的配置）\"><a href=\"#环境变量配置（ANDROID-HOME的配置）\" class=\"headerlink\" title=\"环境变量配置（ANDROID_HOME的配置）\"></a>环境变量配置（ANDROID_HOME的配置）</h2><p><img src=\"/images/2019/09/09.png\" alt=\"image\"></p>\n<h2 id=\"创建项目\"><a href=\"#创建项目\" class=\"headerlink\" title=\"创建项目\"></a>创建项目</h2><p>1）输入项目名称，选择自定义构建项目</p>\n<p><img src=\"/images/2019/09/10.png\" alt=\"image\"></p>\n<p>2）配置 Git</p>\n<p><img src=\"/images/2019/09/11.png\" alt=\"image\"></p>\n<p>3）配置对项目有写权限的账户</p>\n<blockquote>\n<p>进入 GitHub –&gt; Settings –&gt; Developer settings –&gt; Personal Access Token –&gt; Generate new token</p>\n</blockquote>\n<p><img src=\"/images/2019/09/12.png\" alt=\"image\"></p>\n<p>复制刚才生成的 token</p>\n<p><img src=\"/images/2019/09/13.png\" alt=\"image\"></p>\n<p>回到 Jenkins 配置</p>\n<p><img src=\"/images/2019/09/14.png\" alt=\"image\"></p>\n<p>选择<code>Secret text</code>，<code>Secret</code> 填入前面在 GitHub 上生成的 Personal access tokens，Description 随便写一些描述信息，如下图：</p>\n<p><img src=\"/images/2019/09/15.png\" alt=\"image\"></p>\n<p>3）Gradle 构建脚本</p>\n<p><img src=\"/images/2019/09/16.png\" alt=\"image\"></p>\n<p>4）构建完成存档的文件</p>\n<p><img src=\"/images/2019/09/17.png\" alt=\"image\"></p>\n<h2 id=\"构建\"><a href=\"#构建\" class=\"headerlink\" title=\"构建\"></a>构建</h2><p>1）开始</p>\n<p><img src=\"/images/2019/09/18.png\" alt=\"image\"></p>\n<p>2）查看控制台输出日志</p>\n<p><img src=\"/images/2019/09/19.png\" alt=\"image\"></p>\n<p><img src=\"/images/2019/09/20.png\" alt=\"image\"></p>\n<p>3）主页面显示的安装包</p>\n<p><img src=\"/images/2019/09/21.png\" alt=\"image\"></p>\n<h2 id=\"向-GitHub-提交代码时触发自动构建\"><a href=\"#向-GitHub-提交代码时触发自动构建\" class=\"headerlink\" title=\"向 GitHub 提交代码时触发自动构建\"></a>向 GitHub 提交代码时触发自动构建</h2><p>需要在 GitHub 对应项目上配置 Webhooks。</p>\n<blockquote>\n<p>GitHub 项目 –&gt; Settings –&gt; Webhooks –&gt; Add webhooks</p>\n</blockquote>\n<p>如下图：填入 <code>Payload URL</code></p>\n<p><img src=\"/images/2019/09/22.png\" alt=\"image\"></p>\n<p><strong>解释：</strong> Webhook 是通知 Jenkins 时的请求地址，用来填写到 GitHub 上，这样 GitHub 就能通过该地址通知到 Jenkins；<br>假设 Jenkins 所在服务器的地址是：192.168.0.1，端口为8080，项目是 github-webhook，那么 Webhook 地址就是 <a href=\"http://192.168.0.1:8080/github-webhook。\" target=\"_blank\" rel=\"noopener\">http://192.168.0.1:8080/github-webhook。</a></p>\n<p><code>再次提醒，上述地址必须是外网也能访问的，否则GitHub无法访问到Jenkins。</code></p>\n<h2 id=\"测试\"><a href=\"#测试\" class=\"headerlink\" title=\"测试\"></a>测试</h2><p>至此配置已经完成，将 GitHub 上的项目克隆下来，修改某个文件提交，测试看 Jenkins 是否能自动构建。</p>\n<p><strong>Good Luck!</strong></p>\n<h2 id=\"推荐阅读\"><a href=\"#推荐阅读\" class=\"headerlink\" title=\"推荐阅读\"></a>推荐阅读</h2><ul>\n<li><a href=\"https://gojun.me/2019/09/23/jenkins-frp/\" target=\"_blank\" rel=\"noopener\">如何利用 frp 实现 Mac 的内网穿透</a></li>\n</ul>\n<h2 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h2><ol>\n<li><a href=\"https://juejin.im/post/5b6a542b5188251a9e171bf2\" target=\"_blank\" rel=\"noopener\">这应该是最全的 Jenkins Android 自动打包构建教程</a></li>\n<li><a href=\"https://blog.csdn.net/ATangSir/article/details/71699403\" target=\"_blank\" rel=\"noopener\">MAC 上搭建Jenkins实现 Android 自动打包</a></li>\n<li><a href=\"https://blog.csdn.net/boling_cavalry/article/details/78943061\" target=\"_blank\" rel=\"noopener\">实战：向 GitHub 提交代码时触发 Jenkins 自动构建</a></li>\n<li><a href=\"https://blog.csdn.net/zengd0/article/details/79522253\" target=\"_blank\" rel=\"noopener\">搭建 frp 实现内网穿透</a></li>\n<li><a href=\"https://alphagao.com/2018/05/05/config-native-package-node-for-jenkins-server/\" target=\"_blank\" rel=\"noopener\">利用 frp 为 jenkins 配置内网打包节点</a></li>\n</ol>\n","categories":[],"tags":["Jenkins","MacOs"]},{"title":"如何利用 frp 实现 Mac 的内网穿透","url":"http://yoursite.com/2019/09/23/jenkins-frp/","content":"<p>这里服务端我用的是阿里云的轻量应用服务器，系统配置的 Ubuntu18.04；客户端是自己开发的 Mac 电脑。</p>\n<p>下面记录的是如何利用 frp 来实现本地的 web 端口可以使用外网来访问。</p>\n<h2 id=\"服务端\"><a href=\"#服务端\" class=\"headerlink\" title=\"服务端\"></a>服务端</h2><ol>\n<li><p>下载并移动文件；</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://github.com/fatedier/frp/releases/download/v0.29.0/frp_0.29.0_linux_amd64.tar.gz</span><br><span class=\"line\"># 如果系统未安装 wget，可以先安装 wget</span><br><span class=\"line\">yum -y install wget</span><br><span class=\"line\"></span><br><span class=\"line\"># 解压 frp 包</span><br><span class=\"line\">tar -zxvf frp_0.29.0_linux_amd64.tar.gz</span><br><span class=\"line\"># 重新命名文件夹为 frp</span><br><span class=\"line\">mv frp_0.29.0_linux_amd64 frp</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>给运行文件赋予权限，并修改配置文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd frp</span><br><span class=\"line\">chmod +x frps</span><br><span class=\"line\"># 编辑服务器配置文件</span><br><span class=\"line\">vim frps.ini</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>以下为 frps.ini 配置</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[common]</span><br><span class=\"line\">bind_port = 7000</span><br><span class=\"line\">auto_token=12345678</span><br><span class=\"line\">vhost_http_port = 8080</span><br><span class=\"line\">vhost_https_port = 443</span><br><span class=\"line\"></span><br><span class=\"line\">dashboard_port = 7500</span><br><span class=\"line\"># dashboard 用户名密码，默认都为 admin</span><br><span class=\"line\">dashboard_user = admin</span><br><span class=\"line\">dashboard_pwd = admin</span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n<h3 id=\"使用supervisor设置开机自启-安装-supervisor\"><a href=\"#使用supervisor设置开机自启-安装-supervisor\" class=\"headerlink\" title=\"使用supervisor设置开机自启, 安装 supervisor\"></a>使用supervisor设置开机自启, 安装 supervisor</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apt-cache search supervisor</span><br><span class=\"line\">apt-get install supervisor</span><br></pre></td></tr></table></figure>\n\n<p><strong>安装 Supervisor 报错</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Reading package lists... Done</span><br><span class=\"line\">Building dependency tree       </span><br><span class=\"line\">Reading state information... Done</span><br><span class=\"line\">E: Unable to locate package supervisor</span><br></pre></td></tr></table></figure>\n\n<p>查询资料后，发现是是apt需要更新</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get update</span><br></pre></td></tr></table></figure>\n\n<ol start=\"8\">\n<li><p>创建并编辑 frp.conf 设置开机自启</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /etc/supervisor/conf.d/</span><br><span class=\"line\">touch frp.conf</span><br><span class=\"line\">vim frp.conf</span><br><span class=\"line\"></span><br><span class=\"line\"># 以下为 frp.conf 配置</span><br><span class=\"line\">[program:frp]</span><br><span class=\"line\">command = /root/frp/frps -c /root/frp/frps.ini </span><br><span class=\"line\">autostart = true</span><br><span class=\"line\">autorestart = true</span><br><span class=\"line\">startsecs=0</span><br><span class=\"line\"></span><br><span class=\"line\"># systemctl 查看开机启动项</span><br><span class=\"line\">systemctl list-unit-files | grep supervisor</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>访问 服务端ip:7500，查看服务端是否配置成功</p>\n</li>\n</ol>\n<p>配置成功是可以看到</p>\n<p>如果访问不成功，阿里云服务器后台检查防火墙配置，需要添加刚才两个端口到规则里面</p>\n<p><img src=\"/images/2019/09/06.png\" alt=\"image\"></p>\n<h2 id=\"客户端\"><a href=\"#客户端\" class=\"headerlink\" title=\"客户端\"></a>客户端</h2><p>客户端和服务端的版本号要一致，另外 Mac 下载的是 darwin_amd64 这个格式，<a href=\"https://github.com/fatedier/frp/releases/download/v0.29.0/frp_0.29.0_darwin_amd64.tar.gz\" target=\"_blank\" rel=\"noopener\">下载地址</a>。</p>\n<ol>\n<li><p>下载文件回来后通过命令解压并移动文件；</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 解压并移动文件夹</span><br><span class=\"line\">tar zxvf frp_0.29.0_darwin_amd64.tar.gz</span><br><span class=\"line\"># 在 /usr/local/bin 目录下创建一个 frpc 文件夹</span><br><span class=\"line\">mkdir /usr/local/bin/frpc</span><br><span class=\"line\"># 将刚才解压的文件内容移动</span><br><span class=\"line\">mv frp_0.27.0_darwin_amd64/* /usr/local/bin/frpc</span><br><span class=\"line\"># 删除压缩包</span><br><span class=\"line\">rm -rf frp_0.29.0_darwin_amd64</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>给运行文件权限，并编辑配置文件；</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /usr/local/bin/frpc</span><br><span class=\"line\"># 赋予权限</span><br><span class=\"line\">chmod +x frpc</span><br><span class=\"line\"># 修改配置文件</span><br><span class=\"line\">vim frpc.ini</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>下面为 frpc.ini 配置。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[common]</span><br><span class=\"line\"># 这里修改为 frp 服务端的 ip 地址</span><br><span class=\"line\">server_addr = x.x.x.x</span><br><span class=\"line\"># 与服务端绑定的进行通信的端口，跟服务端配置的端口一致</span><br><span class=\"line\">server_port = 7000</span><br><span class=\"line\">auto_token = 123456</span><br><span class=\"line\"></span><br><span class=\"line\">[jenkins]</span><br><span class=\"line\">type = http</span><br><span class=\"line\"># 本地映射的端口，比如开了个tomcat apache，端口为8080</span><br><span class=\"line\">local_port = 8080</span><br><span class=\"line\"># 域名必须要有，并解析到你的服务器地址</span><br><span class=\"line\"># 记得域名要解析到服务器地址，否则会穿透失败</span><br><span class=\"line\">custom_domains = test.com</span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n<h3 id=\"配置-frpc-plist-实现开机自启\"><a href=\"#配置-frpc-plist-实现开机自启\" class=\"headerlink\" title=\"配置 frpc.plist 实现开机自启\"></a>配置 frpc.plist 实现开机自启</h3><ol>\n<li><p>创建开机自启文件并编辑；</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">touch ~/Library/LaunchAgents/frpc.plist</span><br><span class=\"line\">vim ~/Library/LaunchAgents/frpc.plist</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>以下为 frpc.plist 配置；</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class=\"line\">&lt;!DOCTYPE plist PUBLIC -//Apple Computer//DTD PLIST 1.0//EN</span><br><span class=\"line\">http://www.apple.com/DTDs/PropertyList-1.0.dtd &gt;</span><br><span class=\"line\">&lt;plist version=&quot;1.0&quot;&gt;</span><br><span class=\"line\">&lt;dict&gt;</span><br><span class=\"line\">    &lt;key&gt;Label&lt;/key&gt;</span><br><span class=\"line\">    &lt;string&gt;frpc&lt;/string&gt;</span><br><span class=\"line\">    &lt;key&gt;ProgramArguments&lt;/key&gt;</span><br><span class=\"line\">    &lt;array&gt;</span><br><span class=\"line\">         &lt;string&gt;/usr/local/bin/frpc/frpc&lt;/string&gt;</span><br><span class=\"line\">         &lt;string&gt;-c&lt;/string&gt;</span><br><span class=\"line\">         &lt;string&gt;/usr/local/bin/frpc/frpc.ini&lt;/string&gt;</span><br><span class=\"line\">    &lt;/array&gt;</span><br><span class=\"line\">    &lt;key&gt;KeepAlive&lt;/key&gt;</span><br><span class=\"line\">    &lt;true/&gt;</span><br><span class=\"line\">    &lt;key&gt;RunAtLoad&lt;/key&gt;</span><br><span class=\"line\">    &lt;true/&gt;</span><br><span class=\"line\">&lt;/dict&gt;</span><br><span class=\"line\">&lt;/plist&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>加载生效。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 赋权限</span><br><span class=\"line\">sudo chown root ~/Library/LaunchAgents/frpc.plist</span><br><span class=\"line\"># 启动</span><br><span class=\"line\">sudo launchctl load -w ~/Library/LaunchAgents/frpc.plist</span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n<h2 id=\"测试\"><a href=\"#测试\" class=\"headerlink\" title=\"测试\"></a>测试</h2><p>验证是否穿透成功，在浏览器输入上文配置的域名，比如 test.com:8080 ，如果能访问即配置成功。</p>\n<h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><ul>\n<li><a href=\"https://blog.csdn.net/zengd0/article/details/79522253\" target=\"_blank\" rel=\"noopener\">搭建frp实现内网穿透</a></li>\n<li><a href=\"https://streamelody.github.io/2019/05/mac-frp-tutorial/\" target=\"_blank\" rel=\"noopener\">Mac 下使用 FRP 实现内网穿透</a></li>\n<li><a href=\"https://zhuanlan.zhihu.com/p/42574259\" target=\"_blank\" rel=\"noopener\">阿里DNS：DNS迁移到阿里云，这一篇就够了</a></li>\n<li><a href=\"https://dns.console.aliyun.com/#/dns/domainList\" target=\"_blank\" rel=\"noopener\">阿里云 域名解析</a></li>\n</ul>\n","categories":[],"tags":["Jenkins"]},{"title":"终极 Apk 瘦身优化","url":"http://yoursite.com/2019/09/10/android-reduce-apk-size/","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>Apk 随着我们开发迭代逐渐的增大，越来越臃肿肥大，在下载安装过程中，它们耗费的流量会越多，安装等待时间也会越长，这就意味着下载转化率越低，进而影响到广告效果。</p>\n<p>因此 Apk 瘦身是优化的重要一部分，开发有必要定期对 Apk 进行瘦身优化。</p>\n<h1 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h1><p>使用 Android Studio Analyze APK 进行分析，首先构建出一个 release 包，然后拖到 AS 开始分析。</p>\n<p><img src=\"/images/2019/09/01.png\" alt=\"image\"></p>\n<p>从上图分析结果，可以明显看出 Apk 的大小主要是 So 文件以及资源文件占据。</p>\n<h1 id=\"开始瘦身\"><a href=\"#开始瘦身\" class=\"headerlink\" title=\"开始瘦身\"></a>开始瘦身</h1><h2 id=\"Apk-瘦身之-So-文件\"><a href=\"#Apk-瘦身之-So-文件\" class=\"headerlink\" title=\"Apk 瘦身之 So 文件\"></a>Apk 瘦身之 So 文件</h2><p>还没有了解 So 文件的同学，可以看看这篇文章 <a href=\"http://allenfeng.com/2016/11/06/what-you-should-know-about-android-abi-and-so/\" target=\"_blank\" rel=\"noopener\">地址</a>。</p>\n<p>再看看这篇文章 <a href=\"https://www.cnblogs.com/didikee/p/6683415.html\" target=\"_blank\" rel=\"noopener\">地址</a>，采集了市场主流多款 App 进行分析。</p>\n<table>\n<thead>\n<tr>\n<th>指令集</th>\n<th>厂商</th>\n<th>位数</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>arm64-v8a</td>\n<td>ARM</td>\n<td>64</td>\n<td>第 8 代，64 位 ARM 处理器，很少设备，如：三星 Galaxy S6、华为 Mate 8</td>\n</tr>\n<tr>\n<td>armeabi-v7a</td>\n<td>ARM</td>\n<td>32</td>\n<td>第 7 代及以上的 ARM 处理器。2011 年以后，大部分的生产的 Android 设备都使用它（目前主流）</td>\n</tr>\n<tr>\n<td>armeabi</td>\n<td>ARM</td>\n<td>32</td>\n<td>第 5、6 代的 ARM 处理器，早期的手机使用的比较多</td>\n</tr>\n<tr>\n<td>x86</td>\n<td>Intel</td>\n<td>32</td>\n<td>平板、模拟器（x86设备也支持armeabi-v7a和armeabi）</td>\n</tr>\n<tr>\n<td>x86_64</td>\n<td>Intel</td>\n<td>64</td>\n<td>64位的平板</td>\n</tr>\n</tbody></table>\n<p>通过上面查找到的资料，综合评估了下，决定项目只保留 armeabi-v7a 格式的 So 文件。</p>\n<p>修改主工程 build.gradle 下的 abiFilters：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">android &#123;</span><br><span class=\"line\">    // Some other configuration here...</span><br><span class=\"line\">    defaultConfig &#123;</span><br><span class=\"line\">        ndk &#123;</span><br><span class=\"line\">            abiFilters &apos;armeabi-v7a&apos;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Apk-瘦身之资源\"><a href=\"#Apk-瘦身之资源\" class=\"headerlink\" title=\"Apk 瘦身之资源\"></a>Apk 瘦身之资源</h2><h3 id=\"移除无用的资源文件\"><a href=\"#移除无用的资源文件\" class=\"headerlink\" title=\"移除无用的资源文件\"></a><strong>移除无用的资源文件</strong></h3><p>随着版本迭代，会产生很多一些无用资源，<code>虽然在 build.gradle 中设置 shrinkResources 为 true 后，每次打包的时候就会自动排除无用的资源。但好像如果一些没用的代码对某个资源引用，貌似不会被移除</code>。</p>\n<p>Android Studio 提供了一键清除无用资源文件功能</p>\n<blockquote>\n<p>在项目 app 文件下右键，Refactor –&gt; Remove Unused Resources..</p>\n</blockquote>\n<p><img src=\"/images/2019/09/02.png\" alt=\"image\"></p>\n<p>我尝试勾选 <code>Delete unused @id declarations too</code> 发现布局有使用的 id 被检查到没有使用，因此我建议不要勾选这个选项。</p>\n<p>为了安全建议大家执行操作前先 Preivew 下。</p>\n<p>单独对某个文件夹下的资源进行检查方法：</p>\n<blockquote>\n<p>将光标定位在检查的文件夹 –&gt; Analyze –&gt; Run Inspection by name –&gt; unused resource</p>\n</blockquote>\n<p><img src=\"/images/2019/09/03.png\" alt=\"image\"></p>\n<p><code>在检查的时候，发现没有检查出未使用的图片资源，但是有些图片确实是没有使用，尝试了好几次，最后发现原来是我自定义的 lint 配置，禁止检查 UnusedResources 资源了，因此在使用此功能时先注释掉原来自定义的 lint 规则。</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">lintOptions &#123;</span><br><span class=\"line\">        lintConfig file(&quot;gen/bgquality/lint/lint.xml&quot;)</span><br><span class=\"line\">        disable &apos;UnusedResources&apos;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n\n<p><code>使用 Lint 工具检查</code></p>\n<p>详细使用介绍可看这篇文章 <a href=\"https://juejin.im/entry/586f7ec1ac502e006c0c2070#android-studio-%E4%B8%AD%E4%BD%BF%E7%94%A8-lint\" target=\"_blank\" rel=\"noopener\">地址</a></p>\n<h3 id=\"压缩图片资源\"><a href=\"#压缩图片资源\" class=\"headerlink\" title=\"压缩图片资源\"></a><strong>压缩图片资源</strong></h3><p>有些设计师从 PS 导出图后就直接发给开发了，因此需要我们自己压缩一次。推荐使用一个简单实用压缩工具 <a href=\"https://tinypng.com/\" target=\"_blank\" rel=\"noopener\">Tinypng</a>。</p>\n<p>另外有一个比较专业压缩工具 <a href=\"https://squoosh.app/\" target=\"_blank\" rel=\"noopener\">Squoosh</a>，该工具是 Google 推出的一款免费开源图片压缩工具，有很多可定制化功能，例如图片尺寸调整、压缩比例调整、图片格式调整等等，如果你对压缩图片有比较多要求的时候，可选择这个工具。</p>\n<h3 id=\"使用-WebP-图片\"><a href=\"#使用-WebP-图片\" class=\"headerlink\" title=\"使用 WebP 图片\"></a><strong>使用 WebP 图片</strong></h3><p>可以到知乎看下这篇文章 <a href=\"https://www.zhihu.com/question/27201061\" target=\"_blank\" rel=\"noopener\">WebP 相对于 PNG、JPG 有什么优势？</a></p>\n<p><code>需要注意：</code></p>\n<blockquote>\n<p>Android 从 4.0 才开始 WebP 的原生支持，意味着要兼容 4.0 以下机型需要添加适配库；当然现在市面上适配 4.0 以下的应用已经很少了。<br>Android 4.2.1+ 才支持显示含透明度的 WebP，因此最低版本小于 4.2.1 的 App 也不是想用就能用的。</p>\n</blockquote>\n<p>建议大家在 Google Analytics 平台查看自己应用在 4.2.1 以下版本用户量多少，评估是否可以升上去。</p>\n<p><strong>如何转换</strong></p>\n<blockquote>\n<p>在 AS 里面提供了支持一键转换 WebP 格式功能，需要转换的图片右键 –&gt; Convert to Webp…</p>\n</blockquote>\n<p><img src=\"/images/2019/09/04.png\" alt=\"image\"></p>\n<p>当然你也可以外部工具对图片进行 WebP 格式转换，推荐使用 <a href=\"https://squoosh.app/\" target=\"_blank\" rel=\"noopener\">Squoosh</a>。</p>\n<h3 id=\"适配多套分辨率图片\"><a href=\"#适配多套分辨率图片\" class=\"headerlink\" title=\"适配多套分辨率图片\"></a><strong>适配多套分辨率图片</strong></h3><p>根据应用用户量使用的屏幕分辨率数据来，来决定你最终使用哪几套图片，从数据上来看目前设备分辨率大多数都是 1080x2094 和 1080x1920，因此这里我只用了 <code>xxhdpi</code> 和 <code>xxxhdpi</code> 两套资源。</p>\n<p>下面是各套资源对应设备的分辨率以及像素信息表格：</p>\n<table>\n<thead>\n<tr>\n<th>类型</th>\n<th>分辨率(px)</th>\n<th>屏幕像素密度(dpi)</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>ldpi</td>\n<td>200x320</td>\n<td>120</td>\n</tr>\n<tr>\n<td>mdpi</td>\n<td>320x480</td>\n<td>160</td>\n</tr>\n<tr>\n<td>hdpi</td>\n<td>480x800</td>\n<td>240</td>\n</tr>\n<tr>\n<td>xhdpi</td>\n<td>720x1280</td>\n<td>320</td>\n</tr>\n<tr>\n<td>xxhdpi</td>\n<td>960x1600</td>\n<td>480</td>\n</tr>\n<tr>\n<td>xxxhdpi</td>\n<td>1440x2560</td>\n<td>640</td>\n</tr>\n</tbody></table>\n<p>数据来自：<a href=\"http://iconhandbook.co.uk/reference/chart/android/\" target=\"_blank\" rel=\"noopener\">http://iconhandbook.co.uk/reference/chart/android/</a></p>\n<h2 id=\"Apk-瘦身之代码混淆\"><a href=\"#Apk-瘦身之代码混淆\" class=\"headerlink\" title=\"Apk 瘦身之代码混淆\"></a>Apk 瘦身之代码混淆</h2><p>开启代码混淆能将代码中的类、字段、方法的名字改为简短、无意义的名字；移除未使用的类、字段、方法、属性等，因此可以减少 Dex 文件的大小。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">android &#123;</span><br><span class=\"line\">    buildTypes &#123;</span><br><span class=\"line\">        release &#123;</span><br><span class=\"line\">            // 开启混淆</span><br><span class=\"line\">            minifyEnabled true</span><br><span class=\"line\">            proguardFiles getDefaultProguardFile(‘proguard-android.txt&apos;),</span><br><span class=\"line\">                    &apos;proguard-rules.pro&apos;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Apk-瘦身之开启-shrinkResources\"><a href=\"#Apk-瘦身之开启-shrinkResources\" class=\"headerlink\" title=\"Apk 瘦身之开启 shrinkResources\"></a>Apk 瘦身之开启 shrinkResources</h2><p>开启 shrinkResources 可以移除无用资源，依赖于 minifyEnabled，必须和 minifyEnabled 一起用，就是打开 shrinkResources 也必须打开 minifyEnabled。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">android &#123;</span><br><span class=\"line\">    buildTypes &#123;</span><br><span class=\"line\">        release &#123;</span><br><span class=\"line\">            // 开启混淆</span><br><span class=\"line\">            minifyEnabled true</span><br><span class=\"line\">            // 移除无用资源</span><br><span class=\"line\">            shrinkResources true</span><br><span class=\"line\">            </span><br><span class=\"line\">            proguardFiles getDefaultProguardFile(‘proguard-android.txt&apos;),</span><br><span class=\"line\">                    &apos;proguard-rules.pro&apos;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>这里开启我发现有些未使用的资源无法移除的，可能是一些没用的代码对一些资源进行引用，导致没有移除，建议大家还是使用 <code>Remove Unused Resources</code> 来检查。</p>\n<h2 id=\"Apk-瘦身之配置-resConfigs\"><a href=\"#Apk-瘦身之配置-resConfigs\" class=\"headerlink\" title=\"Apk 瘦身之配置 resConfigs\"></a>Apk 瘦身之配置 resConfigs</h2><p>配置应用使用哪些资源，例如你的应用只支持英语和阿拉伯语，那么可以这样配置：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">android &#123;</span><br><span class=\"line\">    defaultConfig &#123;</span><br><span class=\"line\">        ...</span><br><span class=\"line\">        // 语言资源，只支持英语和阿拉伯语</span><br><span class=\"line\">        resConfigs &quot;en&quot;,&quot;ar&quot;</span><br><span class=\"line\">        // 图片资源，只支持xhdpi和xxhdpi屏幕的资源</span><br><span class=\"line\">        resConfigs &quot;xxhdpi&quot;,&quot;xxxhdpi&quot; </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"最后\"><a href=\"#最后\" class=\"headerlink\" title=\"最后\"></a>最后</h1><p>看下瘦身后的效果，比之前减少了 2.5MB。</p>\n<p><img src=\"/images/2019/09/05.png\" alt=\"image\"></p>\n<h1 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h1><p>更多瘦身优化的方法：</p>\n<p><a href=\"https://juejin.im/post/59113583ac502e450280e5f3#heading-25\" target=\"_blank\" rel=\"noopener\">https://juejin.im/post/59113583ac502e450280e5f3#heading-25</a></p>\n","categories":[],"tags":["Android"]},{"title":"Xcode 常用的快捷键","url":"http://yoursite.com/2019/07/31/xcode-hot-key/","content":"<h2 id=\"常用\"><a href=\"#常用\" class=\"headerlink\" title=\"常用\"></a>常用</h2><table>\n<thead>\n<tr>\n<th>功能</th>\n<th>快捷键</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>快速打开某个文件</td>\n<td><code>command + shift + O</code></td>\n</tr>\n<tr>\n<td>快速跳转到某一行</td>\n<td><code>command + L</code></td>\n</tr>\n<tr>\n<td>上移一行</td>\n<td><code>option + command + ]</code></td>\n</tr>\n<tr>\n<td>下移一行</td>\n<td><code>option + command + [</code></td>\n</tr>\n<tr>\n<td>.h文件与.m文件之间的快速切换</td>\n<td><code>control + command + ↑ 或 ↓</code></td>\n</tr>\n<tr>\n<td>返回至上一次光标位置</td>\n<td><code>control + command + ← 或 →</code></td>\n</tr>\n<tr>\n<td>收起/展开方法代码块</td>\n<td><code>option + command + ← 或 →</code></td>\n</tr>\n<tr>\n<td>快速切换左边导航区域</td>\n<td><code>command + (1 到 8都可以)</code></td>\n</tr>\n<tr>\n<td>光标上移一行或下移一行</td>\n<td><code>control + N 或 P</code></td>\n</tr>\n<tr>\n<td>在导航器中定位打开的文件</td>\n<td><code>command + shift + J</code></td>\n</tr>\n<tr>\n<td>快速保存所有文件</td>\n<td><code>command + option + s</code></td>\n</tr>\n</tbody></table>\n<h2 id=\"应用程序编译和清理\"><a href=\"#应用程序编译和清理\" class=\"headerlink\" title=\"应用程序编译和清理\"></a>应用程序编译和清理</h2><table>\n<thead>\n<tr>\n<th>功能</th>\n<th>快捷键</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>运行 App</td>\n<td><code>Command + R</code></td>\n</tr>\n<tr>\n<td>清除工程</td>\n<td><code>Command + Shift + K</code></td>\n</tr>\n<tr>\n<td>构建应用程序</td>\n<td><code>Command + B</code></td>\n</tr>\n<tr>\n<td>停止运行</td>\n<td><code>Command + .</code></td>\n</tr>\n<tr>\n<td>断点调试</td>\n<td><code>F6 单步调试、F7 跳入、F8 继续</code></td>\n</tr>\n</tbody></table>\n<h2 id=\"文档和帮助\"><a href=\"#文档和帮助\" class=\"headerlink\" title=\"文档和帮助\"></a>文档和帮助</h2><table>\n<thead>\n<tr>\n<th>功能</th>\n<th>快捷键</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>文档和参考</td>\n<td><code>Command + Shift + 0 (Zero)</code></td>\n</tr>\n</tbody></table>\n","categories":["iOS"],"tags":["iOS","Xcode"]},{"title":"Android 如何快速全局更换字体","url":"http://yoursite.com/2019/07/06/android-change-font/","content":"<p>在 Android 8.0（API 26）和 Support 包 26 以上版本提供了一种可将自定义字体声明为 XML 布局中的资源更快更方便的方式，并且该种方式兼容 Android 4.1 版本以上，官方文档介绍 <a href=\"https://developer.android.google.cn/guide/topics/ui/look-and-feel/fonts-in-xml.html#java\" target=\"_blank\" rel=\"noopener\">地址</a>。</p>\n<p>网上搜索了很多资料，在未有此特性时处理是相当麻烦的，当然也有一些第三方开源库来帮助处理，其中最多人推荐使用的是 <a href=\"https://github.com/InflationX/Calligraphy\" target=\"_blank\" rel=\"noopener\">Calligraphy</a>。现在有了此特性，我们就可以非常容易全局更改 App 字体。</p>\n<h2 id=\"如何引入第三方字体包\"><a href=\"#如何引入第三方字体包\" class=\"headerlink\" title=\"如何引入第三方字体包\"></a>如何引入第三方字体包</h2><ol>\n<li><p>右键单击资源 res 文件夹，选择 New &gt; Android resource directory；</p>\n</li>\n<li><p>在资源类型列表中选择 font，然后点击 OK；</p>\n</li>\n</ol>\n<p><img src=\"/images/2019/07/01.png\" alt=\"image\"></p>\n<ol start=\"3\">\n<li>将你的第三方字体包放到添加到刚创建的 font 文件夹；</li>\n</ol>\n<p><img src=\"/images/2019/07/02.png\" alt=\"image\"></p>\n<ol start=\"4\">\n<li>Android Studio 支持预览字体，你可以双击字体包即可预览</li>\n</ol>\n<p><img src=\"/images/2019/07/03.png\" alt=\"image\"></p>\n<p>至此你已成功引入第三方字体包了，接下来介绍如何使用以及一些技巧。</p>\n<h2 id=\"如何使用\"><a href=\"#如何使用\" class=\"headerlink\" title=\"如何使用\"></a>如何使用</h2><p>在 xml 文件中给所需要更换字体的控件增加一个属性 fontFamily</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;TextView</span><br><span class=\"line\">    android:layout_width=&quot;wrap_content&quot;</span><br><span class=\"line\">    android:layout_height=&quot;wrap_content&quot;</span><br><span class=\"line\">    android:text=&quot;Hello World!&quot;</span><br><span class=\"line\">    android:fontFamily=&quot;@font/hind_siliguri_regular&quot; /&gt;</span><br></pre></td></tr></table></figure>\n\n<p>在代码中动态更改控件的字体</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Typeface typeface = ResourcesCompat.getFont(context, R.font.hind_siliguri_regular);</span><br><span class=\"line\">// 若是粗体使用 Typeface.BOLD</span><br><span class=\"line\">textView.setTypeface(typeface, Typeface.NORMAL);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"如何全局字体替换更改\"><a href=\"#如何全局字体替换更改\" class=\"headerlink\" title=\"如何全局字体替换更改\"></a>如何全局字体替换更改</h2><p>在 styles.xml 文件中找到 App 主题增加自定义字体属性；</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- Base application theme. --&gt;</span><br><span class=\"line\">&lt;style name=&quot;AppTheme&quot; parent=&quot;Theme.AppCompat.Light.DarkActionBar&quot;&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    ...</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;!--自定义字体--&gt;</span><br><span class=\"line\">    &lt;item name=&quot;android:fontFamily&quot;&gt;@font/hind_siliguri_regular&lt;/item&gt;</span><br><span class=\"line\">&lt;/style&gt;</span><br></pre></td></tr></table></figure>\n\n<p>然后在 AndroidManifest.xml 文件的程序定义里，应用此主题；</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;application</span><br><span class=\"line\">    android:allowBackup=&quot;true&quot;</span><br><span class=\"line\">    android:icon=&quot;@mipmap/ic_launcher&quot;</span><br><span class=\"line\">    android:label=&quot;@string/app_name&quot;</span><br><span class=\"line\">    android:roundIcon=&quot;@mipmap/ic_launcher_round&quot;</span><br><span class=\"line\">    android:supportsRtl=&quot;true&quot;</span><br><span class=\"line\">    android:theme=&quot;@style/AppTheme&quot;&gt;</span><br><span class=\"line\">    </span><br><span class=\"line\">    ...</span><br><span class=\"line\">    </span><br><span class=\"line\">&lt;/application&gt;</span><br></pre></td></tr></table></figure>\n\n<p>这样就全局更换字体样式了。</p>\n<h2 id=\"如何实现不同语言使用不同字体\"><a href=\"#如何实现不同语言使用不同字体\" class=\"headerlink\" title=\"如何实现不同语言使用不同字体\"></a>如何实现不同语言使用不同字体</h2><p>通过上面方法可以实现了 App 使用第三方字体，可这时候如果产品要求在不同语言下使用不同的字体；</p>\n<p>那么如何实现呢？很简单只需要复制一份 styles.xml 文件在对应的语言 values 文件下，更换所对应的字体即可。</p>\n<ol>\n<li><p>右键单击资源 res 文件夹，选择 New &gt; Android resource directory；</p>\n</li>\n<li><p>在资源类型列表中选择 values，左边边选择 Locale，然后选择你对应的语言，然后点击 OK；</p>\n</li>\n</ol>\n<p><img src=\"/images/2019/07/04.png\" alt=\"image\"></p>\n<ol start=\"3\">\n<li>这时候会看到新建了一个文件夹 values-ar</li>\n</ol>\n<p><img src=\"/images/2019/07/05.png\" alt=\"image\"></p>\n<ol start=\"4\">\n<li>复制一份 styles.xml 文件到 values-ar 文件夹下，修改主题下的字体配置;</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- Base application theme. --&gt;</span><br><span class=\"line\">&lt;style name=&quot;AppTheme&quot; parent=&quot;Theme.AppCompat.Light.DarkActionBar&quot;&gt;</span><br><span class=\"line\">    </span><br><span class=\"line\">    ...</span><br><span class=\"line\">    </span><br><span class=\"line\">    &lt;item name=&quot;android:fontFamily&quot;&gt;@font/ar_regular&lt;/item&gt;</span><br><span class=\"line\">&lt;/style&gt;</span><br></pre></td></tr></table></figure>\n\n<p>到这里当你切换语言到中东阿拉伯语的时候，就会显示对应字体了。</p>\n<h2 id=\"推荐阅读\"><a href=\"#推荐阅读\" class=\"headerlink\" title=\"推荐阅读\"></a>推荐阅读</h2><p><a href=\"https://gojun.me/2017/06/06/android-rtl/\" target=\"_blank\" rel=\"noopener\">Android 中东阿拉伯语适配，看这一篇够了</a></p>\n","categories":["Android"],"tags":["Android","Font"]},{"title":"是时候让你项目用上 ViewBindings 了","url":"http://yoursite.com/2019/06/13/android-viewbindings/","content":"<h2 id=\"写在前面\"><a href=\"#写在前面\" class=\"headerlink\" title=\"写在前面\"></a>写在前面</h2><p>相信大多数人在写 findViewById 都是烦恼的，不少人会使用 ButterKnife 来简化，利用插件会自动生成绑定 View 代码，可是一旦界面控件多时候，就会出现几十行甚至上百行的 BindView 代码。此时有没有更好的框架来帮我们呢？</p>\n<p>答案是有的，在前不久的 Google IO 2019 上面提到了 ViewBindings 概念，后来我详细了解后，发现这个东西可以理解为 DataBinding 的一部分，具体区别在于 ViewBindings 只是视图绑定部分。想更深入了解两者区别，可以看下 <a href=\"https://proandroiddev.com/new-in-android-viewbindings-the-difference-from-databinding-library-bef5945baf5e\" target=\"_blank\" rel=\"noopener\">这篇文章</a></p>\n<h2 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h2><h3 id=\"构建-DataBingding-环境\"><a href=\"#构建-DataBingding-环境\" class=\"headerlink\" title=\"构建 DataBingding 环境\"></a>构建 DataBingding 环境</h3><p>在 App 模块的 build.gradle 文件中添加 DataBinding 配置</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">android &#123;</span><br><span class=\"line\">    ....</span><br><span class=\"line\">    dataBinding &#123;</span><br><span class=\"line\">        enabled = true</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"在基类配置-Bingding-代码\"><a href=\"#在基类配置-Bingding-代码\" class=\"headerlink\" title=\"在基类配置 Bingding 代码\"></a>在基类配置 Bingding 代码</h3><h4 id=\"Activity\"><a href=\"#Activity\" class=\"headerlink\" title=\"Activity\"></a>Activity</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class CustomActivity&lt;VB extends ViewDataBinding&gt; extends AppCompatActivity &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    private View mContentView;</span><br><span class=\"line\">    protected VB mViewBinding;</span><br><span class=\"line\">    </span><br><span class=\"line\">    @Override</span><br><span class=\"line\">    protected void onCreate(Bundle savedInstanceState) &#123;</span><br><span class=\"line\">        super.onCreate(savedInstanceState);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    @Override</span><br><span class=\"line\">    public void setContentView(@LayoutRes int layoutResID) &#123;</span><br><span class=\"line\">        mContentView = View.inflate(this, layoutResID, null);</span><br><span class=\"line\">        mViewBinding = DataBindingUtil.bind(mContentView);</span><br><span class=\"line\">        super.setContentView(mContentView);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"Fragment\"><a href=\"#Fragment\" class=\"headerlink\" title=\"Fragment\"></a>Fragment</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class CustomFragment&lt;VB extends ViewDataBinding&gt; extends BaseFragment &#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    private View mContentView;</span><br><span class=\"line\">    protected VB mViewBinding;</span><br><span class=\"line\">    </span><br><span class=\"line\">    @Override</span><br><span class=\"line\">    public View onCreateView(LayoutInflater inflater, ViewGroup container,</span><br><span class=\"line\">                             Bundle savedInstanceState) &#123;</span><br><span class=\"line\">        return mContentView;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    public void setContentView(int id) &#123;</span><br><span class=\"line\">        this.mContentView = getActivity().getLayoutInflater().inflate(id, mContainer, false);</span><br><span class=\"line\">        mViewBinding = DataBindingUtil.bind(mContentView);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"如何使用\"><a href=\"#如何使用\" class=\"headerlink\" title=\"如何使用\"></a>如何使用</h3><h4 id=\"布局\"><a href=\"#布局\" class=\"headerlink\" title=\"布局\"></a>布局</h4><p>在布局的最外层增加 <code>&lt;layout&gt;&lt;/layout&gt;</code> 标签</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span><br><span class=\"line\">&lt;layout&gt;</span><br><span class=\"line\">    &lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</span><br><span class=\"line\">        xmlns:tools=&quot;http://schemas.android.com/tools&quot;</span><br><span class=\"line\">        android:layout_width=&quot;match_parent&quot;</span><br><span class=\"line\">        android:layout_height=&quot;match_parent&quot;</span><br><span class=\"line\">        android:background=&quot;@color/bg_grey_f2f2f2&quot;</span><br><span class=\"line\">        android:orientation=&quot;vertical&quot;&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">        &lt;com.chicdeals.widget.CustomRegularTextView</span><br><span class=\"line\">            android:id=&quot;@+id/tv_app_cache&quot;</span><br><span class=\"line\">            style=&quot;@style/CommonRippleStyle&quot;</span><br><span class=\"line\">            android:layout_width=&quot;match_parent&quot;</span><br><span class=\"line\">            android:layout_height=&quot;@dimen/space_50&quot;</span><br><span class=\"line\">            android:drawableEnd=&quot;@mipmap/ic_account_arrow_default&quot;</span><br><span class=\"line\">            android:drawablePadding=&quot;@dimen/space_12&quot;</span><br><span class=\"line\">            android:gravity=&quot;center_vertical&quot;</span><br><span class=\"line\">            android:paddingStart=&quot;@dimen/space_12&quot;</span><br><span class=\"line\">            android:paddingEnd=&quot;@dimen/space_12&quot;</span><br><span class=\"line\">            android:text=&quot;@string/account_change_password&quot;</span><br><span class=\"line\">            android:textColor=&quot;@color/text_grey_333333&quot;</span><br><span class=\"line\">            android:textSize=&quot;@dimen/textSize_15&quot; /&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;/LinearLayout&gt;</span><br><span class=\"line\">&lt;/layout&gt;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class SettingActivity extends CustomActivity&lt;SettingActivityBinding&gt; &#123;</span><br><span class=\"line\">    @Override</span><br><span class=\"line\">    protected void onCreate(Bundle savedInstanceState) &#123;</span><br><span class=\"line\">        super.onCreate(savedInstanceState);</span><br><span class=\"line\">        setContentView(R.layout.setting_activity);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    @Override</span><br><span class=\"line\">    public void initView() &#123;</span><br><span class=\"line\">        super.initView();</span><br><span class=\"line\">        </span><br><span class=\"line\">        mViewBinding.tvAppCache.setText(getCacheSize());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"视图点击事件\"><a href=\"#视图点击事件\" class=\"headerlink\" title=\"视图点击事件\"></a>视图点击事件</h3><p>在引入 DataBinding 时，发现如果处理视图点击，还是需要逐一给视图设置点击事件的绑定，没有其他更好的方法，此时我选择了继续保留 ButterKnife 框架，可以快速绑定视图的点击事件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@OnClick(&#123;R.id.tv_change_pwd, R.id.tv_app_version, R.id.tv_app_cache, R.id.cv_sign_out&#125;)</span><br><span class=\"line\">public void onViewClicked(View view) &#123;</span><br><span class=\"line\">    switch (view.getId()) &#123;</span><br><span class=\"line\">        case R.id.tv_change_pwd:</span><br><span class=\"line\">            break;</span><br><span class=\"line\">        case R.id.tv_app_version:</span><br><span class=\"line\">            break;</span><br><span class=\"line\">        case R.id.tv_app_cache:</span><br><span class=\"line\">            break;</span><br><span class=\"line\">        case R.id.cv_sign_out:</span><br><span class=\"line\">            break;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"结束\"><a href=\"#结束\" class=\"headerlink\" title=\"结束\"></a>结束</h2><p>到这里简述大概如何使用 DataBinding 中的 ViewBinding 部分了。此时有人疑惑为什么不说说 DataBinding 数据绑定部分？</p>\n<p>我简单说下几个原因：</p>\n<ol>\n<li>DataBinding 将部分逻辑移到布局文件，使得布局失去纯粹性，且逻辑变得有点乱，不利于阅读代码；</li>\n<li>如果某个布局 xml 中的 DataBinding 代码有误，编译时会全部布局文件报错，不好定位报错地方；</li>\n<li>在布局文件中插入了部分数据逻辑，使得文件失去了复用性。</li>\n</ol>\n<p>综上所述，我只建议大家使用 DataBinding 中的 View 绑定模块的 ViewBindings 框架，解决一个小小需求，替代 findViewById 使得项目代码更加简洁。</p>\n","categories":["Android"],"tags":["Android","DataBinding","ViewBindings"]},{"title":"欢迎来到我的新博客","url":"http://yoursite.com/2019/06/12/hello-blog/","content":"<h2 id=\"教程\"><a href=\"#教程\" class=\"headerlink\" title=\"教程\"></a>教程</h2><ol>\n<li><a href=\"https://segmentfault.com/a/1190000004947261#articleHeader1\" target=\"_blank\" rel=\"noopener\">手把手教你使用Hexo + Github Pages搭建个人独立博客</a></li>\n<li><a href=\"https://www.jianshu.com/p/42aa637f614a\" target=\"_blank\" rel=\"noopener\">使用Hexo在Github上搭建专属博客之技术总结</a></li>\n<li><a href=\"http://forsigner.com/2016/03/10/fexo-doc-zh-cn/#%E5%BC%80%E5%A7%8B\" target=\"_blank\" rel=\"noopener\">主题配置</a></li>\n</ol>\n<h2 id=\"遇到问题\"><a href=\"#遇到问题\" class=\"headerlink\" title=\"遇到问题\"></a>遇到问题</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">FATAL Port 4000 has been used. Try other port instead.</span><br><span class=\"line\">FATAL Something&apos;s wrong. Maybe you can find the solution here: http://hexo.io/docs/troubleshooting.html</span><br></pre></td></tr></table></figure>\n\n<p>解决方案：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo hexo s -p 5000</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Hexo-命令\"><a href=\"#Hexo-命令\" class=\"headerlink\" title=\"Hexo 命令\"></a>Hexo 命令</h2><ol>\n<li><code>hexo generate (hexo g)</code> 生成静态文件，会在当前目录下生成一个新的叫做public的文件夹</li>\n<li><code>hexo server (hexo s)</code> 启动本地web服务，用于博客的预览</li>\n<li><code>hexo deploy (hexo d)</code> 部署播客到远端（比如github, heroku等平台）</li>\n<li><code>hexo new &quot;postName&quot;</code> #新建文章</li>\n<li><code>hexo new page &quot;pageName&quot;</code> #新建页面</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo n == hexo new</span><br><span class=\"line\">$ hexo g == hexo generate</span><br><span class=\"line\">$ hexo s == hexo server</span><br><span class=\"line\">$ hexo d == hexo deploy</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"如何关联上-GitHub\"><a href=\"#如何关联上-GitHub\" class=\"headerlink\" title=\"如何关联上 GitHub\"></a>如何关联上 GitHub</h2><ol>\n<li>Install hexo-deployer-git.</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>Edit <code>_config.yml</code> (with example values shown below as comments):</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy:</span><br><span class=\"line\">  type: git   </span><br><span class=\"line\">  repo: &lt;repository url&gt;  #https://bitbucket.org/JohnSmith/johnsmith.bitbucket.io</span><br><span class=\"line\">  branch: [branch] #published</span><br><span class=\"line\">  message: [message]  #leave this blank</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"绑定个人域名\"><a href=\"#绑定个人域名\" class=\"headerlink\" title=\"绑定个人域名\"></a>绑定个人域名</h2><p>注册域名地址推荐：<a href=\"https://www.namesilo.com\" target=\"_blank\" rel=\"noopener\">namesilo</a></p>\n<p>然后在 GitHub 你的博客仓库 Setting 页面配置域名</p>\n<p><img src=\"/images/2019/06/01.png\" alt=\"image\"></p>\n<p>保存过几分钟就可以访问。</p>\n<h3 id=\"Hexo-主题模板\"><a href=\"#Hexo-主题模板\" class=\"headerlink\" title=\"Hexo 主题模板\"></a>Hexo 主题模板</h3><p><a href=\"https://hexo.io/themes/\" target=\"_blank\" rel=\"noopener\">https://hexo.io/themes/</a></p>\n<h2 id=\"看中的博客模版\"><a href=\"#看中的博客模版\" class=\"headerlink\" title=\"看中的博客模版\"></a>看中的博客模版</h2><ol>\n<li><a href=\"https://fuzhouxxdong.github.io/hexo-theme-dxx/\" target=\"_blank\" rel=\"noopener\">https://fuzhouxxdong.github.io/hexo-theme-dxx/</a></li>\n<li><a href=\"http://forsigner.com/\" target=\"_blank\" rel=\"noopener\">http://forsigner.com/</a></li>\n<li><a href=\"https://blog.devzeng.com/\" target=\"_blank\" rel=\"noopener\">https://blog.devzeng.com/</a></li>\n<li><a href=\"https://paugram.com/\" target=\"_blank\" rel=\"noopener\">https://paugram.com/</a></li>\n<li><a href=\"http://qiubaiying.top/\" target=\"_blank\" rel=\"noopener\">http://qiubaiying.top/</a></li>\n</ol>\n","categories":["Blog"],"tags":["Blog"]},{"title":"如何利用 Google Cloud 搭建 VPS","url":"http://yoursite.com/2018/06/06/google-clound/","content":"<h3 id=\"Google-Cloud-官网\"><a href=\"#Google-Cloud-官网\" class=\"headerlink\" title=\"Google Cloud 官网\"></a>Google Cloud 官网</h3><p><a href=\"https://cloud.google.com/\" target=\"_blank\" rel=\"noopener\">https://cloud.google.com/</a></p>\n<h3 id=\"活动\"><a href=\"#活动\" class=\"headerlink\" title=\"活动\"></a>活动</h3><p>现在申请 Google Cloud 赠送免费使用 300美元一年的有效期，使⽤用最低配的话，可以玩一年，每个⽉有 86G 的流量，个人使⽤足够了吧……</p>\n<h3 id=\"准备\"><a href=\"#准备\" class=\"headerlink\" title=\"准备\"></a>准备</h3><ul>\n<li>一张 VISA信⽤用卡</li>\n<li>Google 账户</li>\n<li>由于 Google 在中国是不存在的，所以先要有代理</li>\n<li>下载 ShadowsocksX-NG，<a href=\"https://github.com/shadowsocks/ShadowsocksX-NG\" target=\"_blank\" rel=\"noopener\">地址</a></li>\n</ul>\n<h3 id=\"开始申请\"><a href=\"#开始申请\" class=\"headerlink\" title=\"开始申请\"></a>开始申请</h3><p>首先需要登录你的 Google 账号，如果没有的话，自己去创建一个，这就不多说了，登录成功之后，进入到 Google Cloud <a href=\"https://cloud.google.com/\" target=\"_blank\" rel=\"noopener\">官网</a></p>\n<p>此时你会看到右上角有个 免费试用 的入口，点击进去</p>\n<p><img src=\"/images/2018/06/01-01.png\" alt></p>\n<p>进去之后选择国家为 美国，为什么不选中国呢？因为没有中国可选；同意并继续</p>\n<p><img src=\"/images/2018/06/01-2.png\" alt></p>\n<p>接下来就是下面的界面了，账号选择个人，填写好注册信息，个人信息地址可以虚拟一个美国身份，推荐随机生成美国身份网站 <a href=\"http://www.haoweichi.com/Index/random\" target=\"_blank\" rel=\"noopener\">地址</a>；</p>\n<p>填写你的一张 VISA 信用卡，信用卡会扣除 1 美元，这不用担心只是验证你这张信用卡是否可用，过一会就会退还给你</p>\n<p><img src=\"/images/2018/06/01-3.png\" alt></p>\n<p>信息填完后，点击开始免费试用，至此你已成功创建了 Google cloud 账号，并且获得免费赠送的 300 美元</p>\n<h3 id=\"开始部署\"><a href=\"#开始部署\" class=\"headerlink\" title=\"开始部署\"></a>开始部署</h3><p><strong>1. 创建一个项目</strong></p>\n<p>完成上面步骤之后，进入到大概下面的界面，点击箭头位置开始创建一个项目</p>\n<p><img src=\"/images/2018/06/01-4.png\" alt></p>\n<p>进入到这个界面，项目名称随便你起，位置不用关，直接点创建</p>\n<p><img src=\"/images/2018/06/01-5.png\" alt></p>\n<p><strong>2. 设定防火墙</strong></p>\n<p>入口：菜单依次点击【网络】–【防火墙规则】–【创建防火墙规则】</p>\n<p><img src=\"/images/2018/06/01-6.png\" alt></p>\n<p>先来看下我的配置</p>\n<p><img src=\"/images/2018/06/01-7.png\" alt></p>\n<p>主要修改点：</p>\n<ul>\n<li>流量方向：入站  </li>\n<li>对匹配项执行的操作：允许  </li>\n<li>目标：网络中所有实例  </li>\n<li>来源IP地址范围：0.0.0.0/0  </li>\n<li>协议和端口：全部允许  </li>\n<li>其他默认即可</li>\n</ul>\n<p><strong>3. 申请静态IP</strong></p>\n<p>这个步骤可有可⽆，如果是拿来做 SS 服务器，最好还是申请一个，不然的话每次重启ip地址都会变化，客户端又得重新配置了</p>\n<p>菜单依次点击【网络】–【外部IP地址】–【保留静态IP】</p>\n<p><img src=\"/images/2018/06/01-8.png\" alt></p>\n<p>据说区域选择亚洲东部，国内访问会比较快，这个我不知道没有验证，反正我选择了美国</p>\n<blockquote>\n<p>注意：静态 IP 只能申请一个</p>\n</blockquote>\n<h3 id=\"创建计算引擎\"><a href=\"#创建计算引擎\" class=\"headerlink\" title=\"创建计算引擎\"></a>创建计算引擎</h3><p>菜单一次点击【计算】–【Compute Engine】–【VM 实例】</p>\n<p><img src=\"/images/2018/06/01-9.png\" alt></p>\n<p><img src=\"/images/2018/06/01-10.png\" alt></p>\n<p><img src=\"/images/2018/06/01-11.png\" alt></p>\n<p>主要修改点：</p>\n<ul>\n<li>机器类型：微型(一个共享 vCPU) （右边会有每个月的金额估算值，根据需要吧，选这个是5美元/月，能用一年！）</li>\n<li>选择启动磁盘（系统），我选择的是 Debian</li>\n<li>访问权限范围：允许默认访问权限</li>\n<li>（打开管理、磁盘、网络、ssh 密钥选项）选择【网络】<br>网络–外部IP选择临时</li>\n</ul>\n<p>至此，Google cloud 服务器已经配置完成，可以像正常使用 VPS 一样操作了。</p>\n<h3 id=\"搭建-SS\"><a href=\"#搭建-SS\" class=\"headerlink\" title=\"搭建 SS\"></a>搭建 SS</h3><p>使用 Google Cloud 自带的浏览器 SSH，推荐使用！</p>\n<p><img src=\"/images/2018/06/01-12.png\" alt></p>\n<ol>\n<li>先输入 <code>sudo -i</code> 命令进入到 root 账户</li>\n<li>搭建 Shadow-socks，推荐秋水的一键go版本，输入下面命令</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget --no-check-certificate https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocks-go.sh</span><br><span class=\"line\">chmod +x shadowsocks-go.sh</span><br><span class=\"line\">./shadowsocks-go.sh 2&gt;&amp;1 | tee shadowsocks-go.log</span><br></pre></td></tr></table></figure>\n\n<p>输入命令后，一路回车 Enter 就 Ok，当然这个过程你可以自己定义 端口、密码、加密方式这些信息，执行完之后就会得到如下面信息</p>\n<p><img src=\"/images/2018/06/01-13.png\" alt></p>\n<blockquote>\n<p>该代理已经失效~~</p>\n</blockquote>\n<h3 id=\"SS-服务相关命令\"><a href=\"#SS-服务相关命令\" class=\"headerlink\" title=\"SS 服务相关命令\"></a>SS 服务相关命令</h3><p>Shadowsocks-Go 版（install | uninstall | start | stop | restart | status）</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 使用 root 用户登录，运行安装以及卸载的命令：</span><br><span class=\"line\"># 进入 root 用户</span><br><span class=\"line\">sudo -i</span><br><span class=\"line\"># 安装</span><br><span class=\"line\">./shadowsocks-go.sh install</span><br><span class=\"line\"># 卸载</span><br><span class=\"line\">./shadowsocks-go.sh uninstall</span><br><span class=\"line\"></span><br><span class=\"line\"># 安装完成后</span><br><span class=\"line\"># 重启</span><br><span class=\"line\">/etc/init.d/shadowsocks restart</span><br><span class=\"line\"># 停止</span><br><span class=\"line\">/etc/init.d/shadowsocks stop</span><br><span class=\"line\"># 启动</span><br><span class=\"line\">/etc/init.d/shadowsocks start</span><br><span class=\"line\"># 查看运行状态</span><br><span class=\"line\">/etc/init.d/shadowsocks status</span><br><span class=\"line\"></span><br><span class=\"line\"># 查看配置信息</span><br><span class=\"line\">vim /etc/shadowsocks/config.json</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h3><ul>\n<li><a href=\"https://51.ruyo.net/2144.html\" target=\"_blank\" rel=\"noopener\">Google Cloud服务免费申请试用以及使用教程</a></li>\n<li><a href=\"https://www.jianshu.com/p/6bd66829a1ce\" target=\"_blank\" rel=\"noopener\">用Google Cloud搭建免费一年的SS</a></li>\n<li><a href=\"https://teddysun.com/392.html\" target=\"_blank\" rel=\"noopener\">Shadowsocks-go一键安装脚本</a></li>\n</ul>\n","categories":["VPN"],"tags":["翻墙","Google Cloud","VPN"]},{"title":"Mac 使用 Crontab 定时工具","url":"http://yoursite.com/2018/03/24/mac-crontab/","content":"<h2 id=\"相关命令\"><a href=\"#相关命令\" class=\"headerlink\" title=\"相关命令\"></a>相关命令</h2><ol>\n<li><code>sudo /usr/sbin/cron start</code> (启动)</li>\n<li><code>sudo /usr/sbin/cron restart</code> (重启)</li>\n<li><code>sudo /usr/sbin/cron stop</code> (停止)</li>\n<li><code>sudo launchctl list | grep cron</code> (查看是否启动)</li>\n<li><code>man crontab</code> (查看crontab命令的用法)</li>\n<li><code>man 5 crontab</code> (查看crontab定时任务的格式)</li>\n<li><code>sudo crontab -e</code> (进入编辑器，添加或修改定时任务)</li>\n<li><code>sudo crontab -l</code> (查看已经添加的定时任务)</li>\n</ol>\n<h2 id=\"添加定时任务\"><a href=\"#添加定时任务\" class=\"headerlink\" title=\"添加定时任务\"></a>添加定时任务</h2><p><code>55 23 * * * python3 /Users/hugo/Development/GooglePlayReview/app_reviews.py</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo crontab -e</span><br><span class=\"line\"># 此时会进入 vi 编辑器！注意到，每项工作都是一行。</span><br><span class=\"line\"># 基本格式：* * * * * command </span><br><span class=\"line\">0 12 * * * mail dmtsai -s &quot;at 12:00&quot; &lt; /home/dmtsai/.bashrc</span><br><span class=\"line\">#分 时 日 月 周 |&lt;==============指令串========================&gt;|</span><br><span class=\"line\">$ sudo crontab -l</span><br><span class=\"line\"># 查看已经添加的定时任务</span><br></pre></td></tr></table></figure>\n\n<p>前面五个参数(星号)代表的意义：</p>\n<table>\n<thead>\n<tr>\n<th>意义</th>\n<th>分钟</th>\n<th>小时</th>\n<th>日</th>\n<th>月</th>\n<th>星期</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>数字范文</td>\n<td>0~59</td>\n<td>0~23</td>\n<td>1~31</td>\n<td>1~12</td>\n<td>0~7（0:周日)</td>\n</tr>\n</tbody></table>\n<h2 id=\"Crontab-时区与系统不一致\"><a href=\"#Crontab-时区与系统不一致\" class=\"headerlink\" title=\"Crontab 时区与系统不一致\"></a>Crontab 时区与系统不一致</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h2><p><a href=\"https://honglu.me/2014/09/20/OSX%E7%B3%BB%E7%BB%9F%E6%B7%BB%E5%8A%A0%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1/\" target=\"_blank\" rel=\"noopener\">OSX系统添加定时任务</a><br><a href=\"https://www.jianshu.com/p/4addd9b455f2\" target=\"_blank\" rel=\"noopener\">Mac中的定时任务利器：launchctl</a><br><a href=\"https://blog.csdn.net/biyongyao/article/details/77791238\" target=\"_blank\" rel=\"noopener\">Mac 开启 crontab 定时任务调试</a></p>\n","categories":["工具"],"tags":["工具"]},{"title":"使用 Python3 爬取 Play 商店后台评论笔记记录","url":"http://yoursite.com/2018/03/13/python-learn/","content":"<h3 id=\"Python-selenium-三种等待方式\"><a href=\"#Python-selenium-三种等待方式\" class=\"headerlink\" title=\"Python selenium 三种等待方式\"></a>Python selenium 三种等待方式</h3><p>学习链接：<a href=\"https://huilansame.github.io/huilansame.github.io/archivers/sleep-implicitlywait-wait\" target=\"_blank\" rel=\"noopener\">https://huilansame.github.io/huilansame.github.io/archivers/sleep-implicitlywait-wait</a></p>\n<p>项目使用以下方式</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># -*- coding: utf-8 -*-</span><br><span class=\"line\">from selenium import webdriver</span><br><span class=\"line\">from selenium.webdriver.support.wait import WebDriverWait</span><br><span class=\"line\">from selenium.webdriver.support import expected_conditions as EC</span><br><span class=\"line\">from selenium.webdriver.common.by import By</span><br><span class=\"line\"></span><br><span class=\"line\">driver = webdriver.Firefox()</span><br><span class=\"line\">driver.implicitly_wait(10)  # 隐性等待和显性等待可以同时用，但要注意：等待的最长时间取两者之中的大者</span><br><span class=\"line\">driver.get(&apos;https://huilansame.github.io&apos;)</span><br><span class=\"line\">locator = (By.LINK_TEXT, &apos;CSDN&apos;)</span><br><span class=\"line\"></span><br><span class=\"line\">try:</span><br><span class=\"line\">    WebDriverWait(driver, 20, 0.5).until(EC.presence_of_element_located(locator))</span><br><span class=\"line\">    print driver.find_element_by_link_text(&apos;CSDN&apos;).get_attribute(&apos;href&apos;)</span><br><span class=\"line\">finally:</span><br><span class=\"line\">    driver.close()</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Python-遍历-list\"><a href=\"#Python-遍历-list\" class=\"headerlink\" title=\"Python 遍历 list\"></a>Python 遍历 list</h3><p>学习链接：<a href=\"https://blog.csdn.net/baidu_24545901/article/details/78729309\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/baidu_24545901/article/details/78729309</a></p>\n<p>采用的方式：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">temp = [&#123;&apos;h&apos;: &apos;u&apos;&#125;, &#123;&apos;h&apos;: &apos;a&apos;&#125;, &#123;&apos;h&apos;: &apos;u&apos;&#125;]</span><br><span class=\"line\">    for i, val in enumerate(temp):</span><br><span class=\"line\">        print(val[&apos;h&apos;])</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Python3-词典数组操作\"><a href=\"#Python3-词典数组操作\" class=\"headerlink\" title=\"Python3 词典数组操作\"></a>Python3 词典数组操作</h3><p>学习链接：<a href=\"https://blog.csdn.net/dance117/article/details/80304238\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/dance117/article/details/80304238</a></p>\n<p><strong>定义一个空的词典数组</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">review_data = &#123;&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>增加</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">review_data[&apos;review_content&apos;] = &apos;very good&apos;</span><br><span class=\"line\">review_data[&apos;review_rating&apos;] = 5</span><br><span class=\"line\"></span><br><span class=\"line\">print(review_data)</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;&apos;review_content&apos;:&apos;very good&apos;, &apos;review_rating&apos;: 5&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>删除</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">review_data[&apos;review_content&apos;] = &apos;very good&apos;</span><br><span class=\"line\"># 指定删除</span><br><span class=\"line\">del review_data[&apos;review_content&apos;]</span><br><span class=\"line\"># 全部删除</span><br><span class=\"line\">review_data.clear()</span><br><span class=\"line\"># 删除指定 key，且返回删除的key的值</span><br><span class=\"line\">review_data.pop(&apos;review_content&apos;)</span><br></pre></td></tr></table></figure>\n\n<p><strong>修改</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 给指定的key重新赋值修改</span><br><span class=\"line\">review_data[&apos;name&apos;] = &apos;jun&apos;</span><br><span class=\"line\"></span><br><span class=\"line\"># 使用 update() 方法</span><br><span class=\"line\"># 无重复key，相当于新插入</span><br><span class=\"line\">review_data = &#123;&apos;name&apos;: &apos;jun&apos;&#125;</span><br><span class=\"line\">review_data.update(&#123;&apos;rating&apos;: 5&#125;)</span><br><span class=\"line\">print(review_data)  ----&gt;   &#123;&apos;name&apos;: &apos;jun&apos;, &apos;rating&apos;: 5&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"># 重复key，会覆盖旧的值</span><br><span class=\"line\">review_data = &#123;&apos;name&apos;: &apos;jun&apos;&#125;</span><br><span class=\"line\">review_data.update(&#123;&apos;name&apos;: &apos;jun&apos;&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">print(review_data)  ----&gt;   &#123;&apos;name&apos;: &apos;jun&apos;&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>查询</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">review_data = &#123;&apos;name&apos;: &apos;jun&apos;&#125;</span><br><span class=\"line\">reivew_data[&apos;name&apos;]</span><br></pre></td></tr></table></figure>\n\n<p><strong>两个字典合并</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dic1 = &#123;&apos;name&apos;: &apos;jun&apos;&#125;</span><br><span class=\"line\">dic2 = &#123;&apos;age&apos;: &apos;18&apos;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">dic1.update(dic2)</span><br><span class=\"line\">print(dic1)  ----&gt; &#123;&apos;name&apos;: &apos;jun&apos;, &apos;age&apos;: &apos;18&apos;&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"表格处理\"><a href=\"#表格处理\" class=\"headerlink\" title=\"表格处理\"></a>表格处理</h3><p>官方文档：<a href=\"https://docs.python.org/3/library/csv.html\" target=\"_blank\" rel=\"noopener\">https://docs.python.org/3/library/csv.html</a><br>参考链接：<a href=\"https://python3-cookbook.readthedocs.io/zh_CN/latest/c06/p01_read_write_csv_data.html\" target=\"_blank\" rel=\"noopener\">https://python3-cookbook.readthedocs.io/zh_CN/latest/c06/p01_read_write_csv_data.html</a></p>\n<p><strong>读取表格数据</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">with open(&apos;/Users/apple/Desktop/review.csv&apos;, newline=&apos;&apos;) as c:</span><br><span class=\"line\">    reader = csv.reader(c)</span><br><span class=\"line\">    for r in reader:</span><br><span class=\"line\">        print(r)</span><br></pre></td></tr></table></figure>\n\n<p><strong>写入数据</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># encoding=&apos;utf-8-sig&apos; 防止写入中文乱码</span><br><span class=\"line\">with open(&apos;/Users/apple/Desktop/review.csv&apos;, &apos;w&apos;, newline=&apos;&apos;, encoding=&apos;utf-8-sig&apos;) as c:</span><br><span class=\"line\">    headers = [&apos;Symbol&apos;, &apos;Price&apos;, &apos;Date&apos;, &apos;Time&apos;, &apos;Change&apos;, &apos;Volume&apos;]</span><br><span class=\"line\">    rows = [&#123;&apos;Symbol&apos;: &apos;AA&apos;, &apos;Price&apos;: 39.48, &apos;Date&apos;: &apos;6/11/2007&apos;,</span><br><span class=\"line\">             &apos;Time&apos;: &apos;9:36am&apos;, &apos;Change&apos;: -0.18, &apos;Volume&apos;: 181800&#125;,</span><br><span class=\"line\">            &#123;&apos;Symbol&apos;: &apos;AIG&apos;, &apos;Price&apos;: 71.38, &apos;Date&apos;: &apos;6/11/2007&apos;,</span><br><span class=\"line\">             &apos;Time&apos;: &apos;9:36am&apos;, &apos;Change&apos;: -0.15, &apos;Volume&apos;: 195500&#125;,</span><br><span class=\"line\">            &#123;&apos;Symbol&apos;: &apos;AXP&apos;, &apos;Price&apos;: 62.58, &apos;Date&apos;: &apos;6/11/2007&apos;,</span><br><span class=\"line\">             &apos;Time&apos;: &apos;9:36am&apos;, &apos;Change&apos;: -0.46, &apos;Volume&apos;: 935000&#125;,</span><br><span class=\"line\">            ]</span><br><span class=\"line\">    c_w = csv.DictWriter(c, headers)</span><br><span class=\"line\">    c_w.writeheader()</span><br><span class=\"line\">    c_w.writerows(rows)</span><br></pre></td></tr></table></figure>\n\n","categories":["Python"],"tags":["爬虫","Python"]},{"title":"使用 Python3 对在 Play 商店应用的评论爬取调研","url":"http://yoursite.com/2018/03/02/play-reviews-research/","content":"<h2 id=\"背景-需求\"><a href=\"#背景-需求\" class=\"headerlink\" title=\"背景/需求\"></a>背景/需求</h2><h2 id=\"背景-需求-1\"><a href=\"#背景-需求-1\" class=\"headerlink\" title=\"背景/需求\"></a>背景/需求</h2><p>方便团队方便查看每天收到来自 Play 商店用户的评论，及时从用户的反馈中发现问题，故写个脚本每天定时爬取评论数据，并且进行统计，爬取到的数据存进数据，后面提供接口给前端开发页面进行展示。</p>\n<p>两个数据表：</p>\n<ol>\n<li>评论明细表（评论时间，评论内容，设备信息等）</li>\n<li>评论汇总统计(每天有多少1星，多少2星等)</li>\n</ol>\n<h2 id=\"调研\"><a href=\"#调研\" class=\"headerlink\" title=\"调研\"></a>调研</h2><h3 id=\"方式一\"><a href=\"#方式一\" class=\"headerlink\" title=\"方式一\"></a>方式一</h3><p>使用官方 Api 接口进行抓取，经查看文档，文档提到接口请求得到的数据不是实时的，获取到的数据不是最新，延迟了两天数据，没法拿到最新一天的评论因此放弃该方式。</p>\n<p>相关链接：<br><a href=\"https://developers.google.com/android-publisher/api-ref/reviews/list\" target=\"_blank\" rel=\"noopener\">https://developers.google.com/android-publisher/api-ref/reviews/list</a><br><a href=\"https://stackoverflow.com/questions/11348025/api-to-get-android-google-play-reviewsgetting-device-name-and-app-version\" target=\"_blank\" rel=\"noopener\">https://stackoverflow.com/questions/11348025/api-to-get-android-google-play-reviewsgetting-device-name-and-app-version</a></p>\n<h3 id=\"方式二\"><a href=\"#方式二\" class=\"headerlink\" title=\"方式二\"></a>方式二</h3><p>网上查找下有没有 demo，在 GitHub 上面找到一个例子。</p>\n<p>相关链接：<a href=\"https://github.com/amrrs/Google-Play-Store-Review-Extractor\" target=\"_blank\" rel=\"noopener\">https://github.com/amrrs/Google-Play-Store-Review-Extractor</a></p>\n<p>查看源码不符合需求。</p>\n<h3 id=\"方式三\"><a href=\"#方式三\" class=\"headerlink\" title=\"方式三\"></a>方式三</h3><p>试图从google应用商店入手，发现商店上面的评论并不是实时的，而且貌似是会根据访问的 ip 是什么来返回评论数据，并且提供的筛选功能不能满足我们的需求。</p>\n<h3 id=\"方式四\"><a href=\"#方式四\" class=\"headerlink\" title=\"方式四\"></a>方式四</h3><p>从应用后台入手，只有后台的评论数据才是实时的，并具备满足我们要求的筛选，以及统计数据。可以使用 Python 中的无头浏览器进行爬取。</p>\n<h2 id=\"最后\"><a href=\"#最后\" class=\"headerlink\" title=\"最后\"></a>最后</h2><p>使用<code>方式四</code>完成需求</p>\n<p>大概步骤：</p>\n<ol>\n<li>设置代理</li>\n<li>模拟登陆 Google 发布应用后台</li>\n<li>进入评价模块</li>\n<li>开始抓取评论数据</li>\n<li>解析评论数据</li>\n<li>数据进库</li>\n</ol>\n","categories":["Python"],"tags":["爬虫","Python"]},{"title":"小米手机 Application Installation Failed","url":"http://yoursite.com/2018/01/13/xiaomi-install-failed/","content":"<p>今天在开发中遇到了一个比较奇葩的问题，手机连接上电脑并且已经在 Android Studio 运行窗口看到设备，但是 App 就是一直安装不到 小米6 手机上, 也不能通过 adb 命令安装。</p>\n<p><img src=\"/images/2018/01/01.png\" alt></p>\n<p>然后疯狂查找了一波资料，顺便在这里做了下解决过程的记录。</p>\n<h3 id=\"解决步骤：\"><a href=\"#解决步骤：\" class=\"headerlink\" title=\"解决步骤：\"></a>解决步骤：</h3><ol>\n<li>确认打开开发者选项模式（设置-&gt;关于手机-&gt;MIUI版本,连续点击MIUI版本）</li>\n<li>开启开发者选项以及 USB 调试</li>\n<li>再运行项目看下是否可以</li>\n</ol>\n<p><strong>如果还是不行</strong></p>\n<ol start=\"4\">\n<li>关闭 “开启MIUI优化”（设置-&gt;更多设置-&gt;开发者选项-&gt;启动MIUI优化）</li>\n<li>重启手机，再次运行项目看看</li>\n</ol>\n<p><strong>如果还是不行</strong></p>\n<p>回到 Android Studio 开发工具</p>\n<ol start=\"6\">\n<li>在 File &gt; Settings &gt; Build,Execution,Deployment &gt; Instant Run &gt;取消选择 (Enable Instant Run to hot swap code)</li>\n<li>再次运行项目看看</li>\n</ol>\n<p><strong>如果还是不行</strong></p>\n<ol start=\"8\">\n<li>尝试 Clen Project &gt;&gt; Rebuild Project &gt;&gt; 再尝试下运行项目</li>\n</ol>\n<blockquote>\n<p>还是不行，兄dei 那就换手机吧<br>还有一种情况是手机的存储太低了，导致无法安装 app</p>\n</blockquote>\n<h3 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h3><ol>\n<li><a href=\"https://blog.csdn.net/forwardyzk/article/details/68489711\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/forwardyzk/article/details/68489711</a></li>\n<li><a href=\"https://stackoverflow.com/questions/42687607/application-installation-failed-in-android-studio\" target=\"_blank\" rel=\"noopener\">https://stackoverflow.com/questions/42687607/application-installation-failed-in-android-studio</a></li>\n</ol>\n","categories":["随笔"],"tags":[]},{"title":"带你玩转 Surge 网络调试神器","url":"http://yoursite.com/2017/12/12/surge/","content":"<h3 id=\"简单了解\"><a href=\"#简单了解\" class=\"headerlink\" title=\"简单了解\"></a>简单了解</h3><p>Surge 是基于 iOS 9 新增的“网络扩展”（Network Extension）API[3] 开发的一款网络调试工具。作为首个借用此软件可使用 Shadowsocks 的 iOS 9 应用，中国大陆网友将其广泛运用于突破网络审查。</p>\n<p>Surge 可做很多事情，比如阻挡广告、网络调试、流量跟踪、代理上网等等。</p>\n<h3 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h3><p>Mac 版下载 <a href=\"https://nssurge.com/\" target=\"_blank\" rel=\"noopener\">地址</a>（Windows 暂不支持），下载完成后解压文件夹得到 Surge 程序，将其拖放到应用程序中打开。</p>\n<p>启动 Surge 后勾选下拉菜单中的 <strong>Set as System Proxy</strong> 即可自动向系统网络设置添加必要的参数，因为需要修改系统网络设置，首次勾选时需要输入管理员密码进行确认，去掉 Set as System Proxy 的勾选，会清除网络设置中的代理相关设置。</p>\n<p>打开「系统偏好设置 — 网络 - Wi-Fi高级」设置 HTTP 和 HTTPS 代理： 127.0.0.1:6152 ，以及 SOCKS 代理中设置为 127.0.0.1:6153，<br>并添加忽略这些主机与域的代理设置（Bypass Proxy）：127.0.0.1, 192.168.0.0/16, 10.0.0.0/8, 172.16.0.0/12, localhost, *.local</p>\n<p><img src=\"/images/2017/12/02-1.png\" alt></p>\n<h3 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h3><p>Surge 默认配置文件的路径在 /Users/Freelander/Documents/Surge 下 Default.conf，文件夹还提供简单中文配置例子，里面有很多注释教你如何配置。</p>\n<p>配置文件基础最终我选择了在一份 <a href=\"https://raw.githubusercontent.com/lhie1/Surge/master/Surge.conf\" target=\"_blank\" rel=\"noopener\">开源配置文件</a> 基础上进行修改。已上传到 <a href=\"https://github.com/Freelander/Blog/blob/master/201708/code/MySurge.conf\" target=\"_blank\" rel=\"noopener\">GitHub</a>。</p>\n<p>将其内容复制到上面所说的路径 Default.conf 文件中，然后保存点击下拉菜单中的 Reload Profile from File，此时配置文件中的配置就生效了。</p>\n<p>首先来看如何配置 ss 代理</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[Proxy]</span><br><span class=\"line\"> 🇺🇸US-l = custom,$&#123;ss-server host&#125;,$&#123;ss-server port&#125;,$&#123;ss encrypt type&#125;,$&#123;ss-password&#125;,tls=true</span><br><span class=\"line\"> 🇺🇸US-m = custom,$&#123;ss-server host&#125;,$&#123;ss-server port&#125;,$&#123;ss encrypt type&#125;,$&#123;ss-password&#125;,tls=true</span><br><span class=\"line\"> 🇯🇵JP  = custom,$&#123;ss-server host&#125;,$&#123;ss-server port&#125;,$&#123;ss encrypt type&#125;,$&#123;ss-password&#125;,tls=true</span><br><span class=\"line\"> 🇸🇬SG  = custom,$&#123;ss-server host&#125;,$&#123;ss-server port&#125;,$&#123;ss encrypt type&#125;,$&#123;ss-password&#125;,tls=true</span><br><span class=\"line\"> 🇩🇪DE  = custom,$&#123;ss-server host&#125;,$&#123;ss-server port&#125;,$&#123;ss encrypt type&#125;,$&#123;ss-password&#125;,tls=true</span><br><span class=\"line\">   </span><br><span class=\"line\">[Proxy Group]</span><br><span class=\"line\">Proxy = select,🇺🇸US-l,🇺🇸US-m,🇯🇵 JP,🇸🇬SG,🇩🇪DE</span><br></pre></td></tr></table></figure>\n\n<p>[Proxy]是具体的代理配置，它下面就是 5 个 ss 服务器节点, 这里只是 5 个国家例子，根据你拥有的 ss 账号数来决定，拥有几个账号就留下其中几个对应国旗配置就好。表面上看就是 5 个键值对(键可以自定义)，键中加上国旗可以很直观的区分不同国家的 ss 节点，值中的变量分别表示：<br>ss-server host: ss 主机，ip 或域名<br>ss-server port: ss 主机端口<br>ss encrypt type: 加密方式<br>ss-password: ss 密码<br>custom 不能改，是一个约定类型(ss 协议)。</p>\n<p>保存上面配置，点击下拉菜单中的 Reload Profile from File，配置生效，就会出现下图</p>\n<p><img src=\"/images/2017/12/02-2.png\" alt></p>\n<p>接着打开浏览器输入 <a href=\"https://www.youtube.com/\" target=\"_blank\" rel=\"noopener\">https://www.youtube.com/</a> 回车<br>你会发现外面的世界如此精彩</p>\n<h3 id=\"共享上网\"><a href=\"#共享上网\" class=\"headerlink\" title=\"共享上网\"></a>共享上网</h3><p>在局域网内，其他设备无须再安装任何软件，即可与我一起到外面世界遨游。其他设备只需要简单的在 wifi 设置中添加一个 HTTP 代理即可</p>\n<p>图片来源 <a href=\"https://medium.com/@scomper/%E5%B1%80%E5%9F%9F%E7%BD%91%E5%85%B6%E4%BB%96%E8%AE%BE%E5%A4%87%E5%85%B1%E4%BA%AB%E4%B8%8A%E7%BD%91-dd29e18853da\" target=\"_blank\" rel=\"noopener\">地址</a></p>\n<p><img src=\"/images/2017/12/02-3.png\" alt></p>\n<h3 id=\"同时使用-Surge-Charles-分析网络\"><a href=\"#同时使用-Surge-Charles-分析网络\" class=\"headerlink\" title=\"同时使用 Surge + Charles 分析网络\"></a>同时使用 Surge + Charles 分析网络</h3><p>打开 Charles 的 External Proxy Settings 设置 Charles 的外部代理为 Surge 的端口，即与上面系统网络设置的代理一致</p>\n<p><img src=\"/images/2017/12/02-4.png\" alt></p>\n<h3 id=\"语法\"><a href=\"#语法\" class=\"headerlink\" title=\"语法\"></a>语法</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 基于域名判断并屏蔽（REJECT）请求  </span><br><span class=\"line\">DOMAIN,pingma.qq.com,REJECT  </span><br><span class=\"line\">// 基于域名后缀判断屏蔽（REJECT）请求  </span><br><span class=\"line\">DOMAIN-SUFFIX,flurry.com,REJECT  </span><br><span class=\"line\">// 基于关键词后缀判断走代理（Proxy），强制不尊重系统代理的请求走</span><br><span class=\"line\">Packet-Tunnel-Provider DOMAIN-KEYWORD,google,Proxy,force-remote-dns  </span><br><span class=\"line\">// 基于域名后缀判断请求走直连（DIRECT）  </span><br><span class=\"line\">DOMAIN-SUFFIX,126.net,DIRECT  </span><br><span class=\"line\">// Telegram.app 指定“no-resolve”Surge 忽略这个规则与域的请求。  </span><br><span class=\"line\">IP-CIDR,91.108.56.0/22,Proxy,no-resolve  </span><br><span class=\"line\">// 判断是否是局域网，如果是，走直连  </span><br><span class=\"line\">IP-CIDR,192.168.0.0/16,DIRECT  </span><br><span class=\"line\">// 判断服务器所在地，如果是国内，走直连  </span><br><span class=\"line\">GEOIP,CN,DIRECT  </span><br><span class=\"line\">// 其他的全部走代理  </span><br><span class=\"line\">FINAL,Proxy  </span><br><span class=\"line\">// 其他的全部不走代理  </span><br><span class=\"line\">FINAL,DIRECT</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"注意坑\"><a href=\"#注意坑\" class=\"headerlink\" title=\"注意坑\"></a>注意坑</h3><p>写完 [Rule] 后面需要加</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[Rule] </span><br><span class=\"line\"></span><br><span class=\"line\">....</span><br><span class=\"line\"></span><br><span class=\"line\">GEOIP,CN,DIRECT</span><br><span class=\"line\">FINAL,Proxy</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h3><ul>\n<li><a href=\"https://medium.com/@Blankwonder/surge-%E5%8E%9F%E7%90%86%E4%B8%8E%E5%AE%9E%E7%8E%B0-8aa3304fb3bb\" target=\"_blank\" rel=\"noopener\">Surge 原理与实现</a></li>\n<li><a href=\"https://medium.com/@scomper/surge-%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6-a1533c10e80b\" target=\"_blank\" rel=\"noopener\">Surge 新手使用指南</a></li>\n<li><a href=\"https://manual.nssurge.com/overview/configuration.html\" target=\"_blank\" rel=\"noopener\">Surge 官方配置教程</a></li>\n<li><a href=\"http://cloudstone.xin/2016/10/31/Mac-Surge-2-%E5%88%9D%E4%BD%93%E9%AA%8C/\" target=\"_blank\" rel=\"noopener\">Surge for Mac 2 初体验与教程</a></li>\n<li><a href=\"https://github.com/lhie1/Surge\" target=\"_blank\" rel=\"noopener\">Surge config</a></li>\n<li><a href=\"https://medium.com/@scomper/surge-for-mac-%E7%AE%80%E6%98%8E%E6%8C%87%E5%8D%97-f6f357b8f09c\" target=\"_blank\" rel=\"noopener\">Surge for Mac 简明指南</a></li>\n<li><a href=\"https://medium.com/@scomper/%E5%B1%80%E5%9F%9F%E7%BD%91%E5%85%B6%E4%BB%96%E8%AE%BE%E5%A4%87%E5%85%B1%E4%BA%AB%E4%B8%8A%E7%BD%91-dd29e18853da\" target=\"_blank\" rel=\"noopener\">局域网其他设备共享上网</a></li>\n<li><a href=\"https://github.com/wujunchuan/wujunchuan.github.io/issues/1\" target=\"_blank\" rel=\"noopener\">解决Surge for Mac+Charles同时分析网络请求的办法 </a></li>\n</ul>\n","categories":["VPN"],"tags":["翻墙","VPN","Surge"]},{"title":"Android 中东阿拉伯语适配，看这一篇够了","url":"http://yoursite.com/2017/06/06/android-rtl/","content":"<h3 id=\"RTL-语言由来\"><a href=\"#RTL-语言由来\" class=\"headerlink\" title=\"RTL 语言由来\"></a>RTL 语言由来</h3><p>RTL 是 Right-to-left(从右向左) 的缩写。其意为人们书写阅读习惯是从右向左，朝左继续的，常见的 RTL 语言有阿拉伯语，希伯来语等。</p>\n<p>看一下对比：</p>\n<table>\n<thead>\n<tr>\n<th>LTR</th>\n<th>RTL</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><img src=\"/images/2017/06/01-2.jpg\" alt></td>\n<td><img src=\"/images/2017/06/01-3.jpg\" alt></td>\n</tr>\n</tbody></table>\n<p>那么对于这种从右到左的习惯，在 Android 布局中有没有支持呢？</p>\n<p>答案是有的：从 Android 4.2 即 SDK 17 开始，提供了全面的本地布局支持，允许镜像布局，可以同时支持 RTL 和 LTR。</p>\n<p>接下来我将介绍如何一步一步适配阿拉伯语。</p>\n<h3 id=\"属性\"><a href=\"#属性\" class=\"headerlink\" title=\"属性\"></a>属性</h3><table>\n<thead>\n<tr>\n<th>name</th>\n<th>desc</th>\n<th>chinese</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>android:layoutDirection</td>\n<td>attribute for setting the direction of a component’s layout</td>\n<td>设置组件的布局排列方向</td>\n</tr>\n<tr>\n<td>android:textDirection</td>\n<td>attribute for setting the direction of a component’s text</td>\n<td>设置组件的文字排列方向</td>\n</tr>\n<tr>\n<td>android:textAlignment</td>\n<td>attribute for setting the alignment of a component’s text</td>\n<td>设置文字的对齐方式</td>\n</tr>\n<tr>\n<td>getLayoutDirectionFromLocale()</td>\n<td>method for getting the Locale-specified direction</td>\n<td>获取指定地区的惯用布局方式</td>\n</tr>\n</tbody></table>\n<h3 id=\"前提条件\"><a href=\"#前提条件\" class=\"headerlink\" title=\"前提条件\"></a>前提条件</h3><p>在 AndroidManifest.xml 文件中 application 节点添加支持从右到左布局方式代码</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> &lt;application</span><br><span class=\"line\">        ...</span><br><span class=\"line\">        android:supportsRtl=&quot;true&quot; &gt;</span><br><span class=\"line\">        ...</span><br><span class=\"line\">&lt;/application&gt;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"切换语言\"><a href=\"#切换语言\" class=\"headerlink\" title=\"切换语言\"></a>切换语言</h3><p>相关链接：<a href=\"https://stackoverflow.com/questions/2900023/change-language-programmatically-in-android\" target=\"_blank\" rel=\"noopener\">change-language-programmatically-in-android</a><br>对应国家语言代码: <a href=\"https://stackoverflow.com/questions/7973023/what-is-the-list-of-supported-languages-locales-on-android\" target=\"_blank\" rel=\"noopener\">what-is-the-list-of-supported-languages-locales-on-android</a><br>下面切换语言方式 updateConfiguration 方法在 Api 25 已经过时, 新的切换方式实例 <a href=\"https://github.com/DroidKaigi/conference-app-2017/pull/315/files\" target=\"_blank\" rel=\"noopener\">地址</a></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">String languageToLoad  = &quot;ar&quot;; // your language</span><br><span class=\"line\">Resources res = getResources(); </span><br><span class=\"line\">DisplayMetrics dm = res.getDisplayMetrics();</span><br><span class=\"line\">Locale locale = new Locale(languageToLoad); </span><br><span class=\"line\">Locale.setDefault(locale);</span><br><span class=\"line\">Configuration config = new Configuration();</span><br><span class=\"line\">config.locale = locale;</span><br><span class=\"line\">res.updateConfiguration(conf, dm);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"AS-一键适配\"><a href=\"#AS-一键适配\" class=\"headerlink\" title=\"AS 一键适配\"></a>AS 一键适配</h3><p>AS 支持一键适配 RTL，主要是在原来 Layout 中设置 Left 和 Right 属性的补充添加 Start 和 End 属性（你们在写布局的时候是不是很少用到 paddingStart、marginStart？接下来你们写布局的时候可不能再偷懒了，该加的还是得加上)</p>\n<p>Start 属性在 LTR 中对应 Left，在 RTL 中对应 Right，在API 17开始支持，为了兼容低版本，需要同时有 Left 和 Start。从市场来看，Android 4.2 系统以下的手机用户已经不多了，我的建议是可以不兼容，具体还得你们看自家产品在 4.2 系统以下用户数。</p>\n<blockquote>\n<p>Refactor &gt; Add RTL Support Where Possible…</p>\n</blockquote>\n<img src=\"/images/2017/06/01-1.png\" width=\"516px\" height=\"379px\">\n\n<h3 id=\"利用第三方插件\"><a href=\"#利用第三方插件\" class=\"headerlink\" title=\"利用第三方插件\"></a>利用第三方插件</h3><table>\n<thead>\n<tr>\n<th>名称</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><a href=\"https://github.com/znyang/gradle-android-rtl\" target=\"_blank\" rel=\"noopener\">gradle-android-rtl</a></td>\n<td>自动修复布局文件中未添加RTL支持的标签</td>\n</tr>\n</tbody></table>\n<p>与 AS 插件的比较：</p>\n<ul>\n<li>性能更好。在处理大批量文件修改时，用AS工具会出现卡顿</li>\n<li>支持padding标签的补齐</li>\n</ul>\n<h3 id=\"使用全局样式\"><a href=\"#使用全局样式\" class=\"headerlink\" title=\"使用全局样式\"></a>使用全局样式</h3><h4 id=\"EditText\"><a href=\"#EditText\" class=\"headerlink\" title=\"EditText\"></a>EditText</h4><p>发现 EditText 控件基本都需要设置下面两个属性<br>相关链接：<a href=\"https://stackoverflow.com/questions/10903647/set-a-consistent-style-to-all-edittext-for-e-g\" target=\"_blank\" rel=\"noopener\">set-a-consistent-style-to-all-edittext-for-e-g</a></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">android:textAlignment=&quot;viewStart&quot;</span><br><span class=\"line\">android:gravity=&quot;start&quot;</span><br></pre></td></tr></table></figure>\n\n<p>那我们就可以在 style.xml 样式中全部 EditText 都设置</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;style name=&quot;AppTheme&quot; parent=&quot;Theme.AppCompat.Light.NoActionBar&quot;&gt;</span><br><span class=\"line\">       ...</span><br><span class=\"line\">       &lt;item name=&quot;editTextStyle&quot;&gt;@style/EditTextStyle.Alignment&lt;/item&gt;</span><br><span class=\"line\">       ...</span><br><span class=\"line\">&lt;/style&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;style name=&quot;EditTextStyle.Alignment&quot; parent=&quot;@android:style/Widget.EditText&quot;&gt;</span><br><span class=\"line\">        &lt;item name=&quot;android:textAlignment&quot;&gt;viewStart&lt;/item&gt;</span><br><span class=\"line\">        &lt;item name=&quot;android:gravity&quot;&gt;start&lt;/item&gt;</span><br><span class=\"line\">        &lt;item name=&quot;android:textDirection&quot;&gt;locale&lt;/item&gt;</span><br><span class=\"line\">&lt;/style&gt;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"TextView\"><a href=\"#TextView\" class=\"headerlink\" title=\"TextView\"></a>TextView</h4><p>全局给所有 TextView 添加一个 RTL 属性<br>相关链接:<a href=\"https://stackoverflow.com/questions/3078081/setting-global-styles-for-views-in-android\" target=\"_blank\" rel=\"noopener\">setting-global-styles-for-views-in-android</a></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;style name=&quot;AppTheme&quot; parent=&quot;Theme.AppCompat.Light.NoActionBar&quot;&gt;</span><br><span class=\"line\">       ...</span><br><span class=\"line\">       &lt;item name=&quot;android:textViewStyle&quot;&gt;@style/TextViewStyle.TextDirection&lt;/item&gt;</span><br><span class=\"line\">       ...</span><br><span class=\"line\">&lt;/style&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;style name=&quot;TextViewStyle.TextDirection&quot; parent=&quot;android:Widget.TextView&quot;&gt;</span><br><span class=\"line\">        &lt;item name=&quot;android:textDirection&quot;&gt;locale&lt;/item&gt;</span><br><span class=\"line\">&lt;/style&gt;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"判断是否是-RTL-布局\"><a href=\"#判断是否是-RTL-布局\" class=\"headerlink\" title=\"判断是否是 RTL 布局\"></a>判断是否是 RTL 布局</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">TextUtilsCompat.getLayoutDirectionFromLocale(Locale.getDefault()) == LayoutDirection.RTL</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"对集合进行倒序处理\"><a href=\"#对集合进行倒序处理\" class=\"headerlink\" title=\"对集合进行倒序处理\"></a>对集合进行倒序处理</h3><p>在某些场合下, 这个方法很有用</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Collections.reverse(List&lt;?&gt; list);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"代码动态设置控件-setMargins\"><a href=\"#代码动态设置控件-setMargins\" class=\"headerlink\" title=\"代码动态设置控件 setMargins\"></a>代码动态设置控件 setMargins</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">FrameLayout.LayoutParams params = new FrameLayout.LayoutParams(</span><br><span class=\"line\">                ViewGroup.LayoutParams.WRAP_CONTENT, ViewGroup.LayoutParams.WRAP_CONTENT);</span><br><span class=\"line\">params.setMargins(10, 0, 10, 0);</span><br><span class=\"line\">params.setMarginEnd(10);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"ViewPager\"><a href=\"#ViewPager\" class=\"headerlink\" title=\"ViewPager\"></a>ViewPager</h3><p>相关链接: <a href=\"https://stackoverflow.com/questions/37196714/tabs-swipe-direction-in-right-to-left-android-app\" target=\"_blank\" rel=\"noopener\">tabs-swipe-direction-in-right-to-left-android-app</a></p>\n<blockquote>\n<p>Android 官方控件大多支持 RTL，ViewPager 除外，GitHub 上面有人对 ViewPager 进行修改支持 RTL, <a href=\"https://github.com/diego-gomez-olvera/RtlViewPager\" target=\"_blank\" rel=\"noopener\">地址</a></p>\n</blockquote>\n<h3 id=\"WebView\"><a href=\"#WebView\" class=\"headerlink\" title=\"WebView\"></a>WebView</h3><p>在 Android7.0 以上系统，阿语环境下，第一次打开存在 WebView 页面，会导致页面其他控件镜像失败。</p>\n<p>重现的步骤：先将 App 切换成 阿语 –&gt; 完全退出 App –&gt; 打开 App –&gt; 点击一个 web 活动页 –&gt; 页面 toolbar 返回按钮会看到镜像失败</p>\n<p>解决方法：<code>在存在 WebView 的 Activity 切换语言之前加多行代码 new WebView(this).destroy()。</code></p>\n<p>参考链接：<a href=\"https://stackoverflow.com/questions/40398528/android-webview-language-changes-abruptly-on-android-7-0-and-above\" target=\"_blank\" rel=\"noopener\">android-webview-language-changes-abruptly-on-android-7-0-and-above</a></p>\n<h3 id=\"适配总结\"><a href=\"#适配总结\" class=\"headerlink\" title=\"适配总结\"></a>适配总结</h3><ol>\n<li>横向布局 LinearLayout ，可以使用 FrameLayout，控件需要靠左或靠右可以使用 layout_gravity 设置对应属性</li>\n<li>切换阿拉伯语时，网格布局 item 之间的距离会出现增大问题，处理方法是：网格分割线 ItemDecoration 需要加入语言来判断，调换原来设置左右的边距即可</li>\n<li>禁止掉之前的侧滑返回，以免出现冲突</li>\n<li>一些方向图标，重新做一个相对方向的放到 mipmap-ldrtl-xxxhdpi 包下</li>\n<li>动画翻转, 放在 anim-ldrtl 将对应的动画进行反向处理</li>\n<li>布局里如果设置了 paddingLeft、drawableLeft 等等这些属性更改为一个支持 RTL 的属性 paddingStart、drawableStart；但是有些地方可以不加的，例如：购物车上的数量徽章，加了之后感觉怪怪的，所以还是不加了</li>\n<li>利用在 AS 右边的预览布局工具中的语言切换工具，切换成阿拉伯语，能实时看到布局的效果图</li>\n<li>EditText 添加 android:layoutDirection=”locale” ，如果外面有 TextInputLayout 的需给它设置 android:textDirection=”locale” ，如果输入类型时密码时还需添加一个属性 android:textAlignment=”viewStart”</li>\n<li>TextView 需要加上 android:textAlignment=”viewStart 或 viewEnd” 以及 android:textDirection=”locale”</li>\n<li>RecyclerView 网络布局的可以考虑使用 StaggeredGridLayoutManager ，如果数量太多的网格布局，不太建议使用，可能会出现滑动混乱</li>\n<li>阿拉伯语目录下的 String.xml 文件, 出现占位符 d% 需要注意改为 %d, 但又并不是所有都改成这样, 目前我发现当代码中使用了 Toast 和 SpannableString 属性的就需要更改为 %d</li>\n</ol>\n<h3 id=\"建议计划\"><a href=\"#建议计划\" class=\"headerlink\" title=\"建议计划\"></a>建议计划</h3><ol>\n<li>从基础类开始入手，判断是否是阿拉伯语，如果是需要将界面设置为从右到左的显示方式</li>\n<li>分模块进行适配</li>\n<li>复杂的模块，可以放到 layout-ldrtl 包下，单独做一个布局来适配阿拉伯语，例如详情页</li>\n</ol>\n<h3 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h3><ol>\n<li><a href=\"https://android-developers.googleblog.com/2013/03/native-rtl-support-in-android-42.html\" target=\"_blank\" rel=\"noopener\">https://android-developers.googleblog.com/2013/03/native-rtl-support-in-android-42.html</a></li>\n<li><a href=\"https://medium.com/@zhangqichuan/rtl-support-in-android-898e11f31561\" target=\"_blank\" rel=\"noopener\">https://medium.com/@zhangqichuan/rtl-support-in-android-898e11f31561</a></li>\n<li><a href=\"https://mobikul.com/just-few-steps-to-make-your-app-rtl-supportable/\" target=\"_blank\" rel=\"noopener\">https://mobikul.com/just-few-steps-to-make-your-app-rtl-supportable/</a></li>\n<li><a href=\"https://blog.robustastudio.com/featured/android-rtl-support/\" target=\"_blank\" rel=\"noopener\">https://blog.robustastudio.com/featured/android-rtl-support/</a></li>\n<li><a href=\"http://blog.csdn.net/figo0423/article/details/50241363\" target=\"_blank\" rel=\"noopener\">http://blog.csdn.net/figo0423/article/details/50241363</a></li>\n<li><a href=\"http://blog.csdn.net/wxx614817/article/details/50586388\" target=\"_blank\" rel=\"noopener\">http://blog.csdn.net/wxx614817/article/details/50586388</a></li>\n<li><a href=\"http://jiajixin.cn/2016/10/08/android_adapt_rtl/\" target=\"_blank\" rel=\"noopener\">http://jiajixin.cn/2016/10/08/android_adapt_rtl/</a></li>\n<li><a href=\"http://www.apkbus.com/blog-327085-57866.html\" target=\"_blank\" rel=\"noopener\">http://www.apkbus.com/blog-327085-57866.html</a></li>\n<li><a href=\"http://droidyue.com/blog/2014/07/07/support-rtl-in-android/index.html\" target=\"_blank\" rel=\"noopener\">http://droidyue.com/blog/2014/07/07/support-rtl-in-android/index.html</a></li>\n<li><a href=\"http://chuansong.me/n/920084451521\" target=\"_blank\" rel=\"noopener\">http://chuansong.me/n/920084451521</a></li>\n</ol>\n","categories":["Android"],"tags":["Android"]},{"title":"如何为小米手机安装 Charles 证书","url":"http://yoursite.com/2017/03/25/xiaomi-charles-crt/","content":"<ol>\n<li>使用第三方浏览器下载 <code>.pem</code> 格式的文件 </li>\n<li>将这个文件放入小米的 <code>DownLoad</code> 文件夹下 </li>\n<li>将 <code>.pem</code> 文件修改为 <code>.crt</code> 格式 </li>\n<li>设置—更多设置—系统安全—从存储设备安装–选择文件，选定该文件 </li>\n</ol>\n<p>亲测，小米 6 Android 8.0，红米note2 Android 5.0.2 可以</p>\n","categories":["随笔"],"tags":[]},{"title":"如何给 Android 原生模拟器配置代理","url":"http://yoursite.com/2017/03/02/android-setting-proxy/","content":"<p><strong>原生模拟器 Android 4.4</strong></p>\n<blockquote>\n<p>设置 –&gt; 移动网络设置 –&gt; 接入点名称（APN）–&gt; T-Mobile US –&gt; 设置代理</p>\n</blockquote>\n<blockquote>\n<p>代理：10.0.2.2  端口：8888</p>\n</blockquote>\n<blockquote>\n<p>设置完之后，开启下飞行模式，过几秒再关闭</p>\n</blockquote>\n","categories":["随笔"],"tags":[]},{"title":"如何设置 BottomSheetDialog 高度","url":"http://yoursite.com/2017/02/18/bottom-sheet-dialog-height/","content":"<p>BottomSheetDialog 控制初始高度是跟 behavior_peekHeight 属性有关</p>\n<h3 id=\"样式主题设置\"><a href=\"#样式主题设置\" class=\"headerlink\" title=\"样式主题设置\"></a>样式主题设置</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;style name=&quot;BottomSheetDialog&quot; parent=&quot;Theme.Design.Light.BottomSheetDialog&quot;&gt;</span><br><span class=\"line\">    &lt;item name=&quot;bottomSheetStyle&quot;&gt;@style/bottomSheetStyleWrapper&lt;/item&gt;</span><br><span class=\"line\">&lt;/style&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;style name=&quot;bottomSheetStyleWrapper&quot; parent=&quot;Widget.Design.BottomSheet.Modal&quot;&gt;</span><br><span class=\"line\">    &lt;item name=&quot;behavior_peekHeight&quot;&gt;500dp&lt;/item&gt;</span><br><span class=\"line\">&lt;/style&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!--代码中应用--&gt;</span><br><span class=\"line\">BottomSheetDialog dialog = new BottomSheetDialog(this, R.style.BottomSheetDialog);</span><br><span class=\"line\">            dialog.setContentView(R.layout.layout_bottom_sheet);</span><br><span class=\"line\">            dialog.show();</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"动态代码设置\"><a href=\"#动态代码设置\" class=\"headerlink\" title=\"动态代码设置\"></a>动态代码设置</h3><ol>\n<li><p>Dialog 的布局最外层使用 RelativeLayout 或者 ConstraintLayout, 其他控件设置高度无法生效</p>\n</li>\n<li><p>需要在子内容布局设置高度 match_parent；</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;RelativeLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</span><br><span class=\"line\">    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;</span><br><span class=\"line\">    android:id=&quot;@+id/rl_container&quot;</span><br><span class=\"line\">    android:orientation=&quot;vertical&quot;</span><br><span class=\"line\">    android:layout_width=&quot;match_parent&quot;</span><br><span class=\"line\">    android:layout_height=&quot;wrap_content&quot;</span><br><span class=\"line\">    android:background=&quot;@color/text_white&quot;&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;LinearLayout</span><br><span class=\"line\">        android:id=&quot;@+id/ll_address_top&quot;</span><br><span class=\"line\">        android:layout_width=&quot;match_parent&quot;</span><br><span class=\"line\">        android:layout_height=&quot;match_parent&quot;</span><br><span class=\"line\">        android:minHeight=&quot;?attr/actionBarSize&quot;</span><br><span class=\"line\">        android:orientation=&quot;horizontal&quot;&gt;</span><br><span class=\"line\">        </span><br><span class=\"line\">    &lt;/LinearLayout&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/RelativeLayout&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>设置高度的代码</p>\n</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">View parent = (View) mContentView.getParent();</span><br><span class=\"line\">if (parent != null) &#123;</span><br><span class=\"line\">    BottomSheetBehavior mBehavior = BottomSheetBehavior.from(parent);</span><br><span class=\"line\">    DisplayMetrics displayMetrics = getContext().getResources().getDisplayMetrics();</span><br><span class=\"line\">    int screenHeight = displayMetrics.heightPixels;</span><br><span class=\"line\">    mBehavior.setPeekHeight((int) (screenHeight * 0.45));</span><br><span class=\"line\">    parent.setBackgroundColor(Color.TRANSPARENT);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"简单粗暴直接给父布局一个高度\"><a href=\"#简单粗暴直接给父布局一个高度\" class=\"headerlink\" title=\"简单粗暴直接给父布局一个高度\"></a>简单粗暴直接给父布局一个高度</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;RelativeLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</span><br><span class=\"line\">    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;</span><br><span class=\"line\">    android:id=&quot;@+id/rl_container&quot;</span><br><span class=\"line\">    android:orientation=&quot;vertical&quot;</span><br><span class=\"line\">    android:layout_width=&quot;match_parent&quot;</span><br><span class=\"line\">    android:layout_height=&quot;wrap_content&quot;</span><br><span class=\"line\">    android:minHeight=&quot;300dp&quot;</span><br><span class=\"line\">    android:background=&quot;@color/text_white&quot;&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;LinearLayout</span><br><span class=\"line\">        android:id=&quot;@+id/ll_address_top&quot;</span><br><span class=\"line\">        android:layout_width=&quot;match_parent&quot;</span><br><span class=\"line\">        android:layout_height=&quot;wrap_content&quot;</span><br><span class=\"line\">        android:minHeight=&quot;?attr/actionBarSize&quot;</span><br><span class=\"line\">        android:orientation=&quot;horizontal&quot;&gt;</span><br><span class=\"line\">        </span><br><span class=\"line\">    &lt;/LinearLayout&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/RelativeLayout&gt;</span><br></pre></td></tr></table></figure>","categories":["Android"],"tags":["Android"]},{"title":"常用 Git 相关命令清单","url":"http://yoursite.com/2017/01/01/git-command/","content":"<h3 id=\"Git\"><a href=\"#Git\" class=\"headerlink\" title=\"Git\"></a>Git</h3><ol>\n<li><p><code>git config --global user.name &quot;Your Name&quot;</code> (安装完 git 后，设置用户名与邮箱)</p>\n</li>\n<li><p><code>git config --global user.email &quot;Your email&quot;</code> (设置邮箱)</p>\n</li>\n<li><p><code>ssh-keygen -t rsa -C &quot;youremail@example.com&quot;</code> (创建 SSH key)</p>\n</li>\n<li><p><code>ssh-agent -s</code> (查看 ssh 是否启用)</p>\n</li>\n<li><p><code>ssh -T git@github.com</code> (验证)</p>\n</li>\n<li><p><code>git init</code> (初始化一个本地仓库)</p>\n</li>\n<li><p><code>git add .</code>(将所有文件加入到跟踪列表)</p>\n</li>\n<li><p><code>git commit -m &quot;write something title&quot;</code> (提交到本地仓库)</p>\n</li>\n<li><p><code>git status</code> (查看 git 文件哪处发生改动)</p>\n</li>\n<li><p><code>git remote add origin git@github.com:github账户名/github创建的库.git</code> (将本地仓库关联到 github 上远程仓库)</p>\n</li>\n<li><p><code>git push -u origin master</code> (将本地仓库的所有内容推送到远程库上，下一次推送时直接 git push)</p>\n</li>\n<li><p><code>git clone URL</code> (克隆远程仓库)</p>\n</li>\n<li><p><code>git branch</code> (查看当前分支)</p>\n</li>\n<li><p><code>git checkout -- filename</code> (文件恢复到最新版本，但丢失最近一次提交后你修改的内容)</p>\n</li>\n<li><p><code>git checkout name</code> (切换分支，name 为分支名称)</p>\n</li>\n<li><p><code>git reset --hard commitNumber</code> (回滚到某个 commit 不保存之前改动过的内容文件)</p>\n</li>\n<li><p><code>git push --force</code> (上条命令回滚之后的变更强行推送至服务器)</p>\n</li>\n<li><p><code>git tag</code> (查看本地 tag 列表)</p>\n</li>\n<li><p><code>git tag -d tagName</code> (删除本地 tag)</p>\n</li>\n<li><p><code>git push origin --tags</code> (将本地 tag 提交到远程)</p>\n</li>\n</ol>\n<h3 id=\"Git-Flow\"><a href=\"#Git-Flow\" class=\"headerlink\" title=\"Git-Flow\"></a>Git-Flow</h3><ol>\n<li><p><code>git flow init</code> (初始化)</p>\n</li>\n<li><p><code>git flow feature start MYFEATURE</code> (开始新 Feature)</p>\n</li>\n<li><p><code>git flow feature publish MYFEATURE</code> (Publish 一个 Feature (也就是 push 到远程))</p>\n</li>\n<li><p><code>git flow feature pull origin MYFEATURE</code> (获取 Publish 的 Feature)</p>\n</li>\n<li><p><code>git flow feature finish MYFEATURE</code> (完成一个 Feature)</p>\n</li>\n<li><p><code>git flow release start RELEASE [BASE]</code> (开始一个 Release)</p>\n</li>\n<li><p><code>git flow release publish RELEASE</code> (Publish 一个 Release)</p>\n</li>\n<li><p><code>git flow release finish RELEASE</code> (发布 Release)</p>\n</li>\n<li><p><code>git push --tags</code> (发布 Release 后进行，push 到远程)</p>\n</li>\n<li><p><code>git flow hotfix start VERSION [BASENAME]</code> (开始一个 Hotfix)</p>\n</li>\n<li><p><code>git flow hotfix finish VERSION</code> (发布一个 Hotfix)</p>\n</li>\n</ol>\n<h3 id=\"Git-Submodule\"><a href=\"#Git-Submodule\" class=\"headerlink\" title=\"Git-Submodule\"></a>Git-Submodule</h3><ol>\n<li><p><code>git submodule add git@github.com:github账户名/github创建的库.git</code> (在已存在 git 仓库添加子仓库)</p>\n</li>\n<li><p><code>git submodule init</code> (初始化 Submodule)</p>\n</li>\n<li><p><code>git submodule update</code> (更新 Submodule)</p>\n</li>\n</ol>\n<h3 id=\"vim\"><a href=\"#vim\" class=\"headerlink\" title=\"vim\"></a>vim</h3><ol>\n<li><p><code>vim filename</code> (打开编辑文件)</p>\n</li>\n<li><p>按一下 <code>i</code> 键 (进行编辑文件)</p>\n</li>\n<li><p>按一下 <code>Esc</code> 键 (退出 <code>i</code> (插入)命令进行其它命令使用)</p>\n</li>\n<li><p><code>:wq</code> (保存文件并退出)</p>\n</li>\n<li><p><code>:q!</code> (强制退出,不保存)</p>\n</li>\n<li><p><code>:w filename</code> (将文件以指定的文件名 filename 保存)</p>\n</li>\n</ol>\n<h3 id=\"Git-Flow-规范理解与延伸\"><a href=\"#Git-Flow-规范理解与延伸\" class=\"headerlink\" title=\"Git-Flow 规范理解与延伸\"></a>Git-Flow 规范理解与延伸</h3><p><img src=\"/images/2017/01/03-1.png\" alt></p>\n<h3 id=\"Git-Commit-规范\"><a href=\"#Git-Commit-规范\" class=\"headerlink\" title=\"Git Commit 规范\"></a>Git Commit 规范</h3><p>为了更加方便查找 git commit 的日志，因此有必要在 commit 的时候进行备注说明类型  </p>\n<p>参考阮老师的文章：<a href=\"http://www.ruanyifeng.com/blog/2016/01/commit_message_change_log.html\" target=\"_blank\" rel=\"noopener\">地址</a></p>\n<p>与团队成员约定在 commit 填写 message 的时候，在前面加多一个 type，具体的类型如下：</p>\n<table>\n<thead>\n<tr>\n<th>类型</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>feat</td>\n<td>新功能（Feature）</td>\n</tr>\n<tr>\n<td>fix</td>\n<td>修补 bug</td>\n</tr>\n<tr>\n<td>style</td>\n<td>界面样式变动（不影响原有业务代码逻辑）</td>\n</tr>\n<tr>\n<td>build</td>\n<td>Gradle 构建的变动，例如第三方库版本号变动</td>\n</tr>\n</tbody></table>\n<blockquote>\n<p>例子：feat: 完成登录注册功能</p>\n</blockquote>\n<h3 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h3><ul>\n<li><a href=\"http://www.ruanyifeng.com/blog/2015/12/git-cheat-sheet.html\" target=\"_blank\" rel=\"noopener\">常用 Git 命令清单</a></li>\n<li><a href=\"https://www.zybuluo.com/Roy270490837/note/835720\" target=\"_blank\" rel=\"noopener\">git-flow流程规范</a></li>\n<li><a href=\"https://git-scm.com/book/zh/v2/Git-%E5%B7%A5%E5%85%B7-%E5%AD%90%E6%A8%A1%E5%9D%97\" target=\"_blank\" rel=\"noopener\">Git 工具 - 子模块</a></li>\n<li><a href=\"http://blog.devtang.com/2013/05/08/git-submodule-issues/\" target=\"_blank\" rel=\"noopener\">Git submodule的坑</a></li>\n</ul>\n","categories":["Git"],"tags":["Git"]},{"title":"史上最全 Android 面试资料集合","url":"http://yoursite.com/2016/12/12/android-resume/","content":"<p>最近看到很多人都在找工作, 而且很多人都感觉今年找工作比去年难很多, 竞争力也增加不少, 因此激发我整理这份资料, 希望能帮到正在找或者准备找工作的童鞋们.</p>\n<blockquote>\n<p>本文已授权微信公众号 AndroidDeveloper （id: googdev） 独家发布！</p>\n</blockquote>\n<p>首先我们能否获得一个面试机会, 那肯定是从简历开始, 简历需要做好功夫,  一份好的简历才足够吸引企业得到面试机会, 接着就是面试了, 面试前必须要先做好准备, 多看一下前辈们总结面试题, 有哪一方面不足的地方赶紧补充一下, 还有要了解一下你即将面试那家公司.</p>\n<blockquote>\n<p>感谢<a href=\"http://weibo.com/AndroidDevDaily\" target=\"_blank\" rel=\"noopener\">@Android开发日常</a>(专注分享 Android 优质开源项目以及高质量开发资料) 支持</p>\n</blockquote>\n<h3 id=\"教你写简历\"><a href=\"#教你写简历\" class=\"headerlink\" title=\"教你写简历\"></a>教你写简历</h3><ul>\n<li><a href=\"http://mp.weixin.qq.com/s?__biz=MzA4NTQwNDcyMA==&mid=402970472&idx=1&sn=b9738c66fb5750c2515d57357c01a83f&scene=21#wechat_redirect\" target=\"_blank\" rel=\"noopener\">你真的会写简历么?</a></li>\n<li><a href=\"http://j.codekk.com/blogs/detail/5705bcdf4a38205862ef4770\" target=\"_blank\" rel=\"noopener\">80% 以上简历都是不合格的</a></li>\n<li><a href=\"http://j.codekk.com/blogs/detail/5705bcdf4a38205862ef476f\" target=\"_blank\" rel=\"noopener\">推荐两个技术简历模板</a></li>\n<li><a href=\"http://lucida.me/blog/lean-technical-resume/\" target=\"_blank\" rel=\"noopener\">精益技术简历之道——改善技术简历的 47 条原则</a></li>\n<li><a href=\"https://mdluo.github.io/blog/about-resume/\" target=\"_blank\" rel=\"noopener\">关于程序员求职简历</a></li>\n<li><a href=\"https://github.com/geekcompany/ResumeSample\" target=\"_blank\" rel=\"noopener\">程序员简历模板列表</a></li>\n</ul>\n<h3 id=\"面试题\"><a href=\"#面试题\" class=\"headerlink\" title=\"面试题\"></a>面试题</h3><ul>\n<li><a href=\"https://github.com/JackyAndroid/AndroidInterview-Q-A\" target=\"_blank\" rel=\"noopener\">国内一线互联网公司内部面试题库</a></li>\n<li><a href=\"https://github.com/GeniusVJR/LearningNotes\" target=\"_blank\" rel=\"noopener\">Android 开发工程师面试指南</a></li>\n<li><a href=\"http://gdky005.com/2016/07/08/%E4%B8%80%E4%B8%AA%E4%BA%94%E5%B9%B4Android%E5%BC%80%E5%8F%91%E8%80%85%E7%99%BE%E5%BA%A6%E3%80%81%E9%98%BF%E9%87%8C%E3%80%81%E8%81%9A%E7%BE%8E%E3%80%81%E6%98%A0%E5%AE%A2%E7%9A%84%E9%9D%A2%E8%AF%95%E5%BF%83%E7%BB%8F/\" target=\"_blank\" rel=\"noopener\">一个五年 Android 开发者百度, 阿里, 聚美, 映客的面试心经</a></li>\n<li><a href=\"https://github.com/leerduo/InterviewQuestion\" target=\"_blank\" rel=\"noopener\">整理常见 Android 面试问题</a></li>\n<li><a href=\"http://yuweiguocn.github.io/2016/04/13/interview-2016-big-company/\" target=\"_blank\" rel=\"noopener\">2016 Android 某公司面试题</a></li>\n<li><a href=\"http://kymjs.com/code/2016/03/08/01/\" target=\"_blank\" rel=\"noopener\">面试后的总结</a></li>\n<li><a href=\"http://www.jianshu.com/p/a22450882af2\" target=\"_blank\" rel=\"noopener\">Android 面试题整理</a></li>\n<li><a href=\"http://androidquestions.quora.com/Android-interview-questions-for-2-5-yrs-experienced\" target=\"_blank\" rel=\"noopener\">Android interview questions for 2-5 yrs experienced</a></li>\n<li><a href=\"http://androidquestions.quora.com/Android-interview-questions\" target=\"_blank\" rel=\"noopener\">Android interview questions</a></li>\n<li><a href=\"http://www.devstore.cn/essay/essayInfo/7195.html\" target=\"_blank\" rel=\"noopener\">40 个 Android 面试题</a></li>\n<li><a href=\"https://github.com/Mr-YangCheng/ForAndroidInterview\" target=\"_blank\" rel=\"noopener\">Android 名企面试题及涉及知识点整理</a></li>\n<li><a href=\"http://www.jianshu.com/p/89f19d67b348\" target=\"_blank\" rel=\"noopener\">亲爱的面试官，这个我可没看过！（Android部分）</a></li>\n</ul>\n<h3 id=\"做题\"><a href=\"#做题\" class=\"headerlink\" title=\"做题\"></a>做题</h3><p>看完面试题之后那就来做一下面试题目吧, 目前找到两个网站</p>\n<ul>\n<li><a href=\"http://skillgun.com/android/interview-questions-and-answers\" target=\"_blank\" rel=\"noopener\">SillGun</a>(国外网站, 自备梯子)</li>\n<li><a href=\"http://www.nowcoder.com/\" target=\"_blank\" rel=\"noopener\">牛客网</a></li>\n</ul>\n<h3 id=\"聊面试\"><a href=\"#聊面试\" class=\"headerlink\" title=\"聊面试\"></a>聊面试</h3><p><a href=\"http://stormzhang.com/\" target=\"_blank\" rel=\"noopener\">(帅张)stormzhang</a> 跟你谈一下面试那些事儿</p>\n<ul>\n<li><a href=\"http://mp.weixin.qq.com/s?__biz=MzA4NTQwNDcyMA==&mid=2650661810&idx=1&sn=f8c1ca67527459db3189a978f0e44cef&scene=23&srcid=08101MZAPzGR1MC1C577enim#rd\" target=\"_blank\" rel=\"noopener\">面试时企业最看中你什么能力?</a></li>\n<li><a href=\"https://zhuanlan.zhihu.com/p/21343656?refer=stormzhang\" target=\"_blank\" rel=\"noopener\">我面试到底问什么?</a></li>\n<li><a href=\"https://zhuanlan.zhihu.com/p/21565914?refer=stormzhang\" target=\"_blank\" rel=\"noopener\">Android 面试那些事儿</a></li>\n</ul>\n<h3 id=\"知乎讨论\"><a href=\"#知乎讨论\" class=\"headerlink\" title=\"知乎讨论\"></a>知乎讨论</h3><ul>\n<li><a href=\"https://www.zhihu.com/question/19765032\" target=\"_blank\" rel=\"noopener\">面试时, 问哪些问题能试出一个 Android 应用开发者真正的水平?</a></li>\n<li><a href=\"https://www.zhihu.com/question/38982159\" target=\"_blank\" rel=\"noopener\">我用个假简历去面试 android 的结果为什么会这样?</a></li>\n<li><a href=\"https://www.zhihu.com/question/37483907\" target=\"_blank\" rel=\"noopener\">怎么准备Android面试?</a></li>\n</ul>\n<h3 id=\"互联网招聘平台\"><a href=\"#互联网招聘平台\" class=\"headerlink\" title=\"互联网招聘平台\"></a>互联网招聘平台</h3><ul>\n<li><a href=\"http://www.lagou.com/\" target=\"_blank\" rel=\"noopener\">拉勾-专注互联网职业机会</a></li>\n<li><a href=\"https://jianxun.io/\" target=\"_blank\" rel=\"noopener\">简寻-让职位推荐更精准</a></li>\n<li><a href=\"https://100offer.com/\" target=\"_blank\" rel=\"noopener\">100 offer-帮最好的互联网人发现更好的offer</a></li>\n<li><a href=\"https://www.bosszhipin.com/home/#index\" target=\"_blank\" rel=\"noopener\">BOSS 直聘-互联网招聘神器</a></li>\n<li><a href=\"https://www.linkedin.com/\" target=\"_blank\" rel=\"noopener\">LinkedIn (领英)</a></li>\n<li><a href=\"https://www.nashangban.com/\" target=\"_blank\" rel=\"noopener\">哪上班</a></li>\n</ul>\n<h3 id=\"感谢\"><a href=\"#感谢\" class=\"headerlink\" title=\"感谢\"></a>感谢</h3><p>非常感谢上面分享面试资料以及面试经验的前辈们!\n有前辈在前面带路, 我们后辈真心感到幸福.</p>\n<h3 id=\"祝福\"><a href=\"#祝福\" class=\"headerlink\" title=\"祝福\"></a>祝福</h3><p>最后祝正在找工作的的童鞋们, 马到成功, 心想事成, 事事如意!</p>\n<h3 id=\"关于我\"><a href=\"#关于我\" class=\"headerlink\" title=\"关于我\"></a>关于我</h3><p>欢迎关注我 <a href=\"https://github.com/Freelander\" target=\"_blank\" rel=\"noopener\">Github</a> 以及 <a href=\"http://weibo.com/gaojunhuang\" target=\"_blank\" rel=\"noopener\">微博</a></p>\n","categories":["Android"],"tags":["Android","面试"]},{"title":"开发 Material Design+RxJava+Retrofit+MVP App 参考资料","url":"http://yoursite.com/2016/06/06/android-elephant/","content":"<p><img src=\"/images/2016-01.jpeg\" alt></p>\n<p>这里记录了我开发 <a href=\"https://github.com/Freelander/Elephant\" target=\"_blank\" rel=\"noopener\">大象</a> 项目时，所学习的开发资料以及参考的开源项目，稍微整理了一下，全当笔记记录，跟大家一起分享，也许能给正在使用 RxJava + Retrofit + MVP + Material Design 框架开发的人一个参考学习，如果有人从我分享的资料当中学习到东西，那是我的荣幸，希望大家能与我一起努力。</p>\n<p>之前看到很多人都使用 RxJava+Retrofit+MVP 来开发 App, 然而自己一直没有时间来实践，最近有空就开始着手开发 PHPHub 社区第三方 Android 客戶端，至于我为什么选择了开发 PHPHub 社区，有兴趣的哥们可以到 <a href=\"https://laravel-china.org/topics/3083\" target=\"_blank\" rel=\"noopener\">这里</a> 去看看。</p>\n<h3 id=\"关于我\"><a href=\"#关于我\" class=\"headerlink\" title=\"关于我\"></a>关于我</h3><blockquote>\n<p>欢迎关注我 <a href=\"https://github.com/Freelander\" target=\"_blank\" rel=\"noopener\">Github</a> 以及 <a href=\"http://weibo.com/gaojunhuang\" target=\"_blank\" rel=\"noopener\">微博</a></p>\n</blockquote>\n<h3 id=\"大象源码链接\"><a href=\"#大象源码链接\" class=\"headerlink\" title=\"大象源码链接\"></a>大象源码链接</h3><blockquote>\n<p><a href=\"https://github.com/Freelander/Elephant\" target=\"_blank\" rel=\"noopener\">https://github.com/Freelander/Elephant</a></p>\n</blockquote>\n<h3 id=\"RxJava-与-Retrofit-参考学习的资料\"><a href=\"#RxJava-与-Retrofit-参考学习的资料\" class=\"headerlink\" title=\"RxJava 与 Retrofit 参考学习的资料\"></a>RxJava 与 Retrofit 参考学习的资料</h3><h5 id=\"文章\"><a href=\"#文章\" class=\"headerlink\" title=\"文章\"></a>文章</h5><ul>\n<li><a href=\"http://gank.io/post/560e15be2dca930e00da1083\" target=\"_blank\" rel=\"noopener\">给 Android 开发者的 RxJava 详解</a></li>\n<li><a href=\"http://gank.io/post/56e80c2c677659311bed9841\" target=\"_blank\" rel=\"noopener\">RxJava 与 Retrofit 结合的最佳实践</a></li>\n<li><a href=\"http://blog.csdn.net/theone10211024/article/details/50435325\" target=\"_blank\" rel=\"noopener\">可能是东半球最全的 RxJava 使用场景小结</a></li>\n<li><a href=\"http://www.jianshu.com/p/64aa976a46be\" target=\"_blank\" rel=\"noopener\">Rxjava 实战</a></li>\n<li><a href=\"http://wuxiaolong.me/2016/06/18/retrofits/\" target=\"_blank\" rel=\"noopener\">Android Retrofit 2.0 使用-补充篇</a></li>\n</ul>\n<h5 id=\"项目\"><a href=\"#项目\" class=\"headerlink\" title=\"项目\"></a>项目</h5><ul>\n<li><a href=\"https://github.com/rengwuxian/RxJavaSamples\" target=\"_blank\" rel=\"noopener\">RxJavaSamples</a></li>\n<li><a href=\"https://github.com/kaushikgopal/RxJava-Android-Samples\" target=\"_blank\" rel=\"noopener\">RxJava-Android-Samples</a></li>\n</ul>\n<h5 id=\"视频\"><a href=\"#视频\" class=\"headerlink\" title=\"视频\"></a>视频</h5><ul>\n<li><a href=\"http://boolan.com/lecture/1000001243#0-tsina-1-68759-397232819ff9a47a7b7e80a40613cfe1\" target=\"_blank\" rel=\"noopener\">Android 开发者们一定会喜欢的 RxJava</a></li>\n<li><a href=\"https://realm.io/cn/news/droidcon-jake-wharton-simple-http-retrofit-2/\" target=\"_blank\" rel=\"noopener\">用 Retrofit 2 简化 HTTP 请求</a></li>\n<li><a href=\"https://realm.io/cn/news/kau-felipe-lima-adopting-rxjava-airbnb-android/\" target=\"_blank\" rel=\"noopener\">Airbnb：我们的安卓客户端是如何使用 RxJava 的</a></li>\n</ul>\n<h5 id=\"文档\"><a href=\"#文档\" class=\"headerlink\" title=\"文档\"></a>文档</h5><ul>\n<li><a href=\"https://mcxiaoke.gitbooks.io/rxdocs/content/\" target=\"_blank\" rel=\"noopener\">ReactiveX/RxJava 文档中文版</a></li>\n</ul>\n<h3 id=\"MVP-参考学习的资料\"><a href=\"#MVP-参考学习的资料\" class=\"headerlink\" title=\"MVP 参考学习的资料\"></a>MVP 参考学习的资料</h3><h5 id=\"文章-1\"><a href=\"#文章-1\" class=\"headerlink\" title=\"文章\"></a>文章</h5><ul>\n<li><a href=\"http://www.zjutkz.net/2016/04/13/%E9%80%89%E6%8B%A9%E6%81%90%E6%83%A7%E7%97%87%E7%9A%84%E7%A6%8F%E9%9F%B3%EF%BC%81%E6%95%99%E4%BD%A0%E8%AE%A4%E6%B8%85MVC%EF%BC%8CMVP%E5%92%8CMVVM/\" target=\"_blank\" rel=\"noopener\">选择恐惧症的福音, 教你认清 MVC, MVP 和 MVVM</a></li>\n<li><a href=\"http://www.jcodecraeer.com/a/anzhuokaifa/androidkaifa/2015/0202/2397.html\" target=\"_blank\" rel=\"noopener\">在 Android 开发中使用 MVP 模式</a></li>\n<li><a href=\"http://www.jcodecraeer.com/a/anzhuokaifa/androidkaifa/2016/0413/4139.html\" target=\"_blank\" rel=\"noopener\">Android官方MVP架构示例项目解析</a></li>\n</ul>\n<h5 id=\"项目-1\"><a href=\"#项目-1\" class=\"headerlink\" title=\"项目\"></a>项目</h5><ul>\n<li><a href=\"https://github.com/antoniolg/androidmvp\" target=\"_blank\" rel=\"noopener\">androidmvp</a></li>\n<li><a href=\"https://github.com/googlesamples/android-architecture/tree/todo-mvp-rxjava/\" target=\"_blank\" rel=\"noopener\">android-architecture</a></li>\n<li><a href=\"https://github.com/north2014/T-MVP\" target=\"_blank\" rel=\"noopener\">T-MVP</a></li>\n</ul>\n<h3 id=\"多主题切换\"><a href=\"#多主题切换\" class=\"headerlink\" title=\"多主题切换\"></a>多主题切换</h3><ul>\n<li><a href=\"http://www.jianshu.com/p/3b55e84742e5\" target=\"_blank\" rel=\"noopener\">知乎和简书的夜间模式实现套路</a></li>\n</ul>\n<h3 id=\"参考项目\"><a href=\"#参考项目\" class=\"headerlink\" title=\"参考项目\"></a>参考项目</h3><ul>\n<li><a href=\"https://github.com/drakeet/Meizhi\" target=\"_blank\" rel=\"noopener\">Meizhi</a> (非常棒的一个项目, 参考了挺多)</li>\n<li><a href=\"https://github.com/CycloneAxe/phphub-android\" target=\"_blank\" rel=\"noopener\">PHPHub-Android</a>（PHPHub 官方客户端）</li>\n</ul>\n<h3 id=\"UI-设计\"><a href=\"#UI-设计\" class=\"headerlink\" title=\"UI 设计\"></a>UI 设计</h3><h5 id=\"参考-App\"><a href=\"#参考-App\" class=\"headerlink\" title=\"参考 App\"></a>参考 App</h5><ul>\n<li><a href=\"http://zhihu.com/\" target=\"_blank\" rel=\"noopener\">知乎</a></li>\n<li><a href=\"http://gold.xitu.io/\" target=\"_blank\" rel=\"noopener\">掘金</a></li>\n<li><a href=\"https://github.com/CycloneAxe/phphub-android\" target=\"_blank\" rel=\"noopener\">PHPHub-Android</a></li>\n</ul>\n<h5 id=\"图标素材来源\"><a href=\"#图标素材来源\" class=\"headerlink\" title=\"图标素材来源\"></a>图标素材来源</h5><ul>\n<li><a href=\"https://icons8.com/\" target=\"_blank\" rel=\"noopener\">Ions8</a></li>\n</ul>\n<h5 id=\"Material-Design-设计规范\"><a href=\"#Material-Design-设计规范\" class=\"headerlink\" title=\"Material Design 设计规范\"></a>Material Design 设计规范</h5><ul>\n<li><a href=\"https://material.google.com/\" target=\"_blank\" rel=\"noopener\">Material design</a></li>\n<li><a href=\"https://github.com/1sters/material_design_zh_2\" target=\"_blank\" rel=\"noopener\">Material Design 中文版</a></li>\n</ul>\n<h5 id=\"设计灵感来源\"><a href=\"#设计灵感来源\" class=\"headerlink\" title=\"设计灵感来源\"></a>设计灵感来源</h5><ul>\n<li><a href=\"https://material.uplabs.com/\" target=\"_blank\" rel=\"noopener\">Uplabs</a></li>\n<li><a href=\"https://dribbble.com/\" target=\"_blank\" rel=\"noopener\">Dribbble</a></li>\n<li><a href=\"http://www.uisdc.com/\" target=\"_blank\" rel=\"noopener\">优设</a></li>\n</ul>\n<h2 id=\"感谢\"><a href=\"#感谢\" class=\"headerlink\" title=\"感谢\"></a>感谢</h2><p>感谢以上所有分享的资料以及开源项目大神们。</p>\n","categories":["Android"],"tags":["Android","Material Design"]},{"title":"category","url":"http://yoursite.com/category/index.html","content":"","categories":[],"tags":[]},{"title":"tag","url":"http://yoursite.com/tag/index.html","content":"","categories":[],"tags":[]},{"title":"search","url":"http://yoursite.com/search/index.html","content":"","categories":[],"tags":[]},{"title":"关于我","url":"http://yoursite.com/about/index.html","content":"<p>这里是一位靠谱的 Android 开发工程师个人简历，目前只考虑 <strong>广州</strong> 或 <strong>深圳</strong> 这两个地方。</p>\n<p>如果您有靠谱的 Android 开发工作欢迎推荐，请邮件我索要完整的简历，发邮件时请使用公司邮箱并说明公司信息，谢谢。</p>\n<p>以下是我的邮箱：<br><a href=\"mailto:huanggaojun13@gmail.com\" target=\"_blank\" rel=\"noopener\">huanggaojun13@gmail.com</a> </p>\n<h2 id=\"个人信息\"><a href=\"#个人信息\" class=\"headerlink\" title=\"个人信息\"></a>个人信息</h2><ul>\n<li>3 年 Android 开发经验</li>\n<li>期望城市：广州/深圳</li>\n<li>个人博客: <a href=\"https://gojun.me/\" target=\"_blank\" rel=\"noopener\">https://gojun.me/</a></li>\n<li>GitHub: <a href=\"https://github.com/Freelander\" target=\"_blank\" rel=\"noopener\">https://github.com/Freelander</a> (746+ 个粉丝)</li>\n</ul>\n<h2 id=\"工作经历\"><a href=\"#工作经历\" class=\"headerlink\" title=\"工作经历\"></a>工作经历</h2><h3 id=\"广州棒谷科技股份有限公司\"><a href=\"#广州棒谷科技股份有限公司\" class=\"headerlink\" title=\"广州棒谷科技股份有限公司\"></a><a href=\"https://www.banggood.cn/\" target=\"_blank\" rel=\"noopener\">广州棒谷科技股份有限公司</a></h3><p><strong>Android 中级开发工程师</strong></p>\n<p><strong>2016.12 - 至今</strong></p>\n<p><strong>公司简介：</strong> 一家专注于跨境贸易 B2C 电子商务公司，拥有一支五千多人的年轻精英团队。</p>\n<h4 id=\"KOYYE\"><a href=\"#KOYYE\" class=\"headerlink\" title=\"KOYYE\"></a><strong><a href=\"https://play.google.com/store/apps/details?id=com.chicdeals\" target=\"_blank\" rel=\"noopener\">KOYYE</a></strong></h4><p><strong>项目简介：</strong> 公司新站点主打中东地区市场，应用支持中东阿拉伯语切换，目前用户量 1w+。</p>\n<p><strong>职责：Android 端独立负责人</strong> </p>\n<p><strong>主要工作内容：</strong></p>\n<ul>\n<li>搭建项目基础架构，攻破项目难点；</li>\n<li>与产品运营工作人员对接需求，制定技术方案；</li>\n<li>版本快速迭代维护更新，完成产品需求；</li>\n<li>实现 App 国际化，多语言切换，适配兼容中东阿拉伯语；</li>\n<li>订单成交转化数据、归因、用户行为等统计数据埋点；</li>\n<li>国外支付方式 Paypal 支付、钱海信用卡等支付方式对接；</li>\n<li>接入第三方 Facebook、Firebase、AppFyler 等平台。</li>\n</ul>\n<h4 id=\"Banggood\"><a href=\"#Banggood\" class=\"headerlink\" title=\"Banggood\"></a><strong><a href=\"https://play.google.com/store/apps/details?id=com.banggood.client\" target=\"_blank\" rel=\"noopener\">Banggood</a></strong></h4><p><strong>项目简介：</strong> 公司主项目拥有千万级别用户量的 App。</p>\n<p><strong>职责：Android 端主力开发</strong> </p>\n<p><strong>主要工作内容：</strong></p>\n<ul>\n<li>重构旧版项目，搭建新架构，适应复杂业务处理；</li>\n<li>制定编码规范，推进团队协作使用 Git 工具；</li>\n<li>深入与设计师交流，参与 App 界面设计交互，推进 App 使用 Material Design 设计风格，提升应用在 Play Store 排名；</li>\n<li>配合运营部门推广工作， App 广告深度链接接管以及广告归因；</li>\n<li>对接 Google Analytics、Facebook 数据统计事件埋点。</li>\n</ul>\n<h3 id=\"广州橙希网络科技有限公司\"><a href=\"#广州橙希网络科技有限公司\" class=\"headerlink\" title=\"广州橙希网络科技有限公司\"></a><a href=\"https://www.lagou.com/gongsi/122635.html\" target=\"_blank\" rel=\"noopener\">广州橙希网络科技有限公司</a></h3><p><strong>Android 开发工程师</strong></p>\n<p><strong>2015.07 - 2016.11</strong></p>\n<p><strong>公司简介：</strong> 一家专注于移动互联网领域的 App 软件开发公司</p>\n<h4 id=\"天使孕育\"><a href=\"#天使孕育\" class=\"headerlink\" title=\"天使孕育\"></a><strong><a href=\"https://www.wandoujia.com/apps/com.gdswf.mother\" target=\"_blank\" rel=\"noopener\">天使孕育</a></strong></h4><p><strong>职责:</strong> 医生端 Android 开发负责人，UI 界面搭建，api 接口请求数据绑定，多渠道上线打包混淆。</p>\n<p><strong>项目简介:</strong> 天使孕育是公司外包广东省卫生发展总公司项目，主要功能使用友盟即时通讯实现孕妈与医生交 流，圈子类似微信朋友圈，孕妈预约挂号，使用高德定位找医生，与 Web 交互完成完成孕妈所有产前登记表 以及自我评测功能。</p>\n<h4 id=\"拾翠\"><a href=\"#拾翠\" class=\"headerlink\" title=\"拾翠\"></a><strong><a href=\"https://www.wandoujia.com/apps/com.chengxinet.shicui\" target=\"_blank\" rel=\"noopener\">拾翠</a></strong></h4><p><strong>职责:</strong> 负责搭建成为商家模块界面，以及界面数据与后台对接工作。</p>\n<p><strong>项目简介:</strong> 拾翠是中国首个手艺定制互联网平台，App 集成商家与用户一体，具有购物 App 的基本功能，用户 浏览商品详情，咨询商家，购买商品，支持微信支付宝支付等;商家模块主要功能发布商品，订单管理，交易 金额与订单量统计分析等等。</p>\n<h2 id=\"开源项目\"><a href=\"#开源项目\" class=\"headerlink\" title=\"开源项目\"></a>开源项目</h2><h3 id=\"Elephant\"><a href=\"#Elephant\" class=\"headerlink\" title=\"Elephant\"></a><a href=\"https://github.com/Freelander/Elephant\" target=\"_blank\" rel=\"noopener\">Elephant</a></h3><p><strong>Star 数: 958+</strong></p>\n<p>Elephant 是 Laravel China (PHPHub) 社区第三方 Android 客户端，App UI 风格遵循了 Google Material Design 设计风格，项目使用到技术有 RxJava + Retrofit MVP，扫码登录，使用友盟统计分析等等。</p>\n<h2 id=\"专业技能\"><a href=\"#专业技能\" class=\"headerlink\" title=\"专业技能\"></a>专业技能</h2><ul>\n<li>熟悉面向对象，了解封装、继承和接口设计，了解 MVP 与 MVVM 架构;</li>\n<li>熟悉自定义 View 绘制，以及手势、事件分发;</li>\n<li>熟悉 Material Design 设计，了解其规范，尺寸与层次;</li>\n<li>熟悉代码混淆，反编译 Apk，Apk 瘦身优化;</li>\n<li>熟悉使用第三方开源组件，Logger，Butterknife，Fresco，OkHttp， Gson 等等;</li>\n<li>熟悉 Android 国际化开发，多语言切换，中东阿拉伯语适配；</li>\n<li>熟悉国外  Google Analytics、Facebook 平台数据统计；</li>\n<li>熟悉 App 深度链接接管，以及广告归因统计；</li>\n<li>懂得性能优化，UI 过度绘制优化，布局优化；</li>\n<li>懂得如何选择优秀第三方开源库，认识大量的，各种各样的开源库;</li>\n<li>懂得将代码发布到 JitPack；</li>\n<li>具有编写规范，且易于维护代码的能力;</li>\n<li>能够快速掌握并集成一份第三方 SDK。</li>\n</ul>\n<h2 id=\"技能专长\"><a href=\"#技能专长\" class=\"headerlink\" title=\"技能专长\"></a>技能专长</h2><p>以下都是我平时用过或熟悉的编程语言、框架、软件及工具，带 ^†^ 符号的是我比较喜欢和常用的。</p>\n<h3 id=\"编程语言\"><a href=\"#编程语言\" class=\"headerlink\" title=\"编程语言\"></a>编程语言</h3><ul>\n<li><a href=\"https://www.java.com\" target=\"_blank\" rel=\"noopener\">Java</a>^†^</li>\n<li><a href=\"http://kotlinlang.org\" target=\"_blank\" rel=\"noopener\">Kotlin</a>^†^</li>\n<li><a href=\"https://www.python.org\" target=\"_blank\" rel=\"noopener\">Python</a></li>\n</ul>\n<h3 id=\"框架\"><a href=\"#框架\" class=\"headerlink\" title=\"框架\"></a>框架</h3><ul>\n<li><a href=\"https://github.com/ReactiveX/RxAndroid\" target=\"_blank\" rel=\"noopener\">RxAndroid</a>^†^</li>\n<li><a href=\"https://github.com/greenrobot/EventBus\" target=\"_blank\" rel=\"noopener\">EventBus</a>^†^</li>\n<li><a href=\"https://github.com/square/retrofit\" target=\"_blank\" rel=\"noopener\">Retrofit</a>^†^</li>\n<li><a href=\"https://github.com/google/gson\" target=\"_blank\" rel=\"noopener\">Gson</a>^†^</li>\n<li><a href=\"https://github.com/bumptech/glide\" target=\"_blank\" rel=\"noopener\">Glide</a>^†^</li>\n<li><a href=\"https://github.com/facebook/fresco\" target=\"_blank\" rel=\"noopener\">Fresco</a>^†^</li>\n<li><a href=\"https://github.com/square/okhttp\" target=\"_blank\" rel=\"noopener\">OkHttp</a>^†^</li>\n</ul>\n<h3 id=\"工具软件\"><a href=\"#工具软件\" class=\"headerlink\" title=\"工具软件\"></a>工具软件</h3><ul>\n<li><a href=\"http://apple.com/macosx\" target=\"_blank\" rel=\"noopener\">Mac OS X</a>^†^</li>\n<li><a href=\"https://developer.android.com/studio/index.html?hl=zh-cn\" target=\"_blank\" rel=\"noopener\">Android Studio</a>^†^</li>\n<li><a href=\"https://www.charlesproxy.com/\" target=\"_blank\" rel=\"noopener\">Charles</a>^†^</li>\n<li><a href=\"https://www.alfredapp.com\" target=\"_blank\" rel=\"noopener\">Alfred 3</a>^†^</li>\n<li><a href=\"https://nssurge.com/\" target=\"_blank\" rel=\"noopener\">Surge</a>^†^</li>\n<li><a href=\"https://git-scm.com\" target=\"_blank\" rel=\"noopener\">Git</a>^†^</li>\n<li><a href=\"https://www.iterm2.com\" target=\"_blank\" rel=\"noopener\">iTerm</a>^†^</li>\n<li><a href=\"https://www.getpostman.com\" target=\"_blank\" rel=\"noopener\">Postman</a>^†^</li>\n<li><a href=\"https://www.sketch.com/\" target=\"_blank\" rel=\"noopener\">Sketch</a></li>\n<li><a href=\"http://www.adobe.com/cn/products/cs6/photoshop.html\" target=\"_blank\" rel=\"noopener\">Adobe Photoshop</a></li>\n<li><a href=\"https://www.jetbrains.com/pycharm\" target=\"_blank\" rel=\"noopener\">PyCharm</a></li>\n<li><a href=\"https://www.xmind.cn\" target=\"_blank\" rel=\"noopener\">XMind</a></li>\n</ul>\n<h2 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h2><h3 id=\"文档编写能力\"><a href=\"#文档编写能力\" class=\"headerlink\" title=\"文档编写能力\"></a>文档编写能力</h3><p>学习 Android 之初整理汇总了一份 Android 学习资料 <a href=\"https://github.com/Freelander/Android_Data\" target=\"_blank\" rel=\"noopener\">Android_Data</a> 与 <a href=\"https://github.com/Freelander/Android_Data/blob/master/Android-Librarys-Top-100.md\" target=\"_blank\" rel=\"noopener\">Android 开源库排名</a>，开放后受到圈内广大开发者好评。</p>\n<ul>\n<li>Star 数: 7963+ </li>\n<li>Fork: 2044+</li>\n</ul>\n<h3 id=\"UI-设计能力\"><a href=\"#UI-设计能力\" class=\"headerlink\" title=\"UI 设计能力\"></a>UI 设计能力</h3><p>熟悉 PhotoShop 工具操作，对设计美感有高品质追求，独立设计 <a href=\"https://github.com/Freelander/Elephant\" target=\"_blank\" rel=\"noopener\">Elephant</a> UI。</p>\n<h3 id=\"英文能力\"><a href=\"#英文能力\" class=\"headerlink\" title=\"英文能力\"></a>英文能力</h3><p>目前负责开发的 App 语言均是英语，GitHub 上开源项目均使用英文文档。</p>\n<h3 id=\"学习能力\"><a href=\"#学习能力\" class=\"headerlink\" title=\"学习能力\"></a>学习能力</h3><p>大部分 Android 相关的知识以及技术都是通过自学而来。</p>\n<h2 id=\"致谢\"><a href=\"#致谢\" class=\"headerlink\" title=\"致谢\"></a>致谢</h2><p>感谢您花时间阅读我的简历，期待能有机会和您共事。</p>\n","categories":[],"tags":[]},{"title":"project","url":"http://yoursite.com/project/index.html","content":"","categories":[],"tags":[]}]